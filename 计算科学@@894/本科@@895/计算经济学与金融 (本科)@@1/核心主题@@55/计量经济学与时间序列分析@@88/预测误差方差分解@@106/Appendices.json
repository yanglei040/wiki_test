{"hands_on_practices": [{"introduction": "在实践中，最常用的预测误差方差分解方法依赖于乔列斯基分解（Cholesky decomposition），而这种方法的一个关键特性是对变量排序的敏感性。这个练习将通过一个简单的直接计算，揭示这一重要性质。通过分析一个双变量系统，你将亲手推导出同期相关性（contemporaneous correlation）如何根据所选的变量顺序，导致不对称的溢出效应，这是在实际应用FEVD之前必须掌握的关键一步。[@problem_id:2394591]", "id": "2394591", "problem": "考虑一个稳定的2变量1阶向量自回归 (VAR) 模型，表示为\n$$\n\\mathbf{y}_{t} = A \\mathbf{y}_{t-1} + \\mathbf{u}_{t},\n$$\n其中 $\\mathbf{y}_{t} = \\begin{pmatrix} y_{1,t} \\\\ y_{2,t} \\end{pmatrix}$，$A$ 是一个 $2 \\times 2$ 的系数矩阵，其特征值严格位于单位圆内，创新项 $\\mathbf{u}_{t}$ 是均值为零的，其正定协方差矩阵为\n$$\n\\Sigma_{u} = \\begin{pmatrix} 1 & \\rho \\\\ \\rho & 1 \\end{pmatrix},\n$$\n其中 $\\rho \\in (-1,1)$。设正交化冲击由 $\\Sigma_{u}$ 在排序 $(y_{1}, y_{2})$下的 Cholesky 分解定义：即，设 $P$ 为下三角矩阵且满足 $PP^{\\prime} = \\Sigma_{u}$，并定义 $\\mathbf{u}_{t} = P \\boldsymbol{\\varepsilon}_{t}$，其中 $\\boldsymbol{\\varepsilon}_{t}$ 的协方差为单位矩阵。使用预测期为1的正交化预测误差方差分解 (FEVD)，计算差值\n$$\n\\Delta(\\rho) \\equiv \\theta_{1 \\leftarrow 2}(1) - \\theta_{2 \\leftarrow 1}(1),\n$$\n其中 $\\theta_{i \\leftarrow j}(1)$ 表示 $y_{i,t+1}$ 的1步预测误差方差中可归因于正交化冲击 $j$ 的份额。\n\n请以关于 $\\rho$ 的单个简化解析表达式的形式给出最终答案。无需进行四舍五入。", "solution": "首先将根据所需标准对问题进行验证。\n\n步骤1：提取已知条件\n问题提供了以下信息：\n- 一个稳定的2变量1阶向量自回归 (VAR($1$)) 模型：$\\mathbf{y}_{t} = A \\mathbf{y}_{t-1} + \\mathbf{u}_{t}$。\n- 变量向量为 $\\mathbf{y}_{t} = \\begin{pmatrix} y_{1,t} \\\\ y_{2,t} \\end{pmatrix}$。\n- 系数矩阵 $A$ 是一个 $2 \\times 2$ 矩阵，其特征值严格位于单位圆内。\n- 创新项向量 $\\mathbf{u}_{t}$ 均值为零。\n- 创新项的协方差矩阵为 $\\Sigma_{u} = \\begin{pmatrix} 1 & \\rho \\\\ \\rho & 1 \\end{pmatrix}$，其中 $\\rho \\in (-1,1)$。\n- 正交化冲击 $\\boldsymbol{\\varepsilon}_{t}$ 通过 $\\Sigma_u$ 的 Cholesky 分解定义，使得 $\\mathbf{u}_{t} = P \\boldsymbol{\\varepsilon}_{t}$，其中 $P$ 是满足 $PP^{\\prime} = \\Sigma_{u}$ 的下三角矩阵，且 $\\boldsymbol{\\varepsilon}_{t}$ 的协方差是单位矩阵。该分解基于排序 $(y_{1}, y_{2})$。\n- 需要计算的量是 $\\Delta(\\rho) \\equiv \\theta_{1 \\leftarrow 2}(1) - \\theta_{2 \\leftarrow 1}(1)$。\n- $\\theta_{i \\leftarrow j}(1)$ 是 $y_{i,t+1}$ 的1步预测误差方差中可归因于正交化冲击 $j$ 的份额。\n\n步骤2：使用提取的已知条件进行验证\n该问题具有科学依据。它描述了一个标准的 VAR($1$) 模型，这是计算经济学和金融学中的一个基本工具。所有组成部分——稳定性条件、正定协方差矩阵、用于正交化的 Cholesky 分解以及预测误差方差分解 (FEVD)——都是时间序列分析中的标准概念。条件 $\\rho \\in (-1,1)$ 确保了 $\\Sigma_u$ 是正定的，因为其行列式为 $1-\\rho^2 > 0$ 且其对角元素为正。该问题是适定的，提供了计算所求量所需的所有必要信息。语言客观而精确。关于矩阵 $A$ 及其稳定性的信息对于完整的模型定义是必要的，但对于预测期 $h=1$ 的特定计算并非必需；这不构成一个缺陷。该问题是自洽、一致且科学有效的。\n\n步骤3：结论与行动\n该问题有效。将提供完整的解法。\n\n基于时刻 $t$ 的信息，$\\mathbf{y}_{t+1}$ 的1步预测为 $E[\\mathbf{y}_{t+1} | \\mathcal{F}_{t}] = A \\mathbf{y}_{t}$。相应的预测误差是：\n$$\n\\mathbf{e}_{t+1|t} = \\mathbf{y}_{t+1} - E[\\mathbf{y}_{t+1} | \\mathcal{F}_{t}] = (A \\mathbf{y}_{t} + \\mathbf{u}_{t+1}) - A \\mathbf{y}_{t} = \\mathbf{u}_{t+1}\n$$\n因此，1步预测误差的协方差矩阵就是创新项的协方差矩阵 $\\Sigma_u$。\n$$\n\\text{MSE}(1) = E[\\mathbf{e}_{t+1|t} \\mathbf{e}_{t+1|t}^{\\prime}] = E[\\mathbf{u}_{t+1} \\mathbf{u}_{t+1}^{\\prime}] = \\Sigma_u = \\begin{pmatrix} 1 & \\rho \\\\ \\rho & 1 \\end{pmatrix}\n$$\n变量 $y_{i,t+1}$ 的1步预测误差方差是 $\\text{MSE}(1)$ 的第 $i$ 个对角元素。\n$$\n\\text{Var}(e_{1,t+1|t}) = (\\Sigma_u)_{11} = 1\n$$\n$$\n\\text{Var}(e_{2,t+1|t}) = (\\Sigma_u)_{22} = 1\n$$\n预测误差方差分解 (FEVD) 将此预测误差方差的一部分归因于一组正交化冲击 $\\boldsymbol{\\varepsilon}_{t}$。这些冲击是通过关系式 $\\mathbf{u}_{t} = P \\boldsymbol{\\varepsilon}_{t}$ 从简化式冲击 $\\mathbf{u}_{t}$ 导出的，其中 $\\boldsymbol{\\varepsilon}_{t}$ 的协方差矩阵为单位矩阵，而 $P$ 是 $\\Sigma_u$ 的 Cholesky 因子。在排序 $(y_1, y_2)$ 下，$P$ 是一个下三角矩阵。\n设 $P = \\begin{pmatrix} p_{11} & 0 \\\\ p_{21} & p_{22} \\end{pmatrix}$。条件 $PP^{\\prime} = \\Sigma_u$ 给出：\n$$\n\\begin{pmatrix} p_{11} & 0 \\\\ p_{21} & p_{22} \\end{pmatrix} \\begin{pmatrix} p_{11} & p_{21} \\\\ 0 & p_{22} \\end{pmatrix} = \\begin{pmatrix} p_{11}^{2} & p_{11}p_{21} \\\\ p_{11}p_{21} & p_{21}^{2} + p_{22}^{2} \\end{pmatrix} = \\begin{pmatrix} 1 & \\rho \\\\ \\rho & 1 \\end{pmatrix}\n$$\n令对应元素相等，我们求解 $p_{ij}$：\n1. $p_{11}^{2} = 1 \\implies p_{11} = 1$ (根据惯例，对角元素为正)。\n2. $p_{11}p_{21} = \\rho \\implies (1)p_{21} = \\rho \\implies p_{21} = \\rho$。\n3. $p_{21}^{2} + p_{22}^{2} = 1 \\implies \\rho^{2} + p_{22}^{2} = 1 \\implies p_{22} = \\sqrt{1 - \\rho^{2}}$ (因为 $\\rho \\in (-1,1)$，所以 $1-\\rho^2 > 0$)。\n\n因此，Cholesky 因子为：\n$$\nP = \\begin{pmatrix} 1 & 0 \\\\ \\rho & \\sqrt{1 - \\rho^{2}} \\end{pmatrix}\n$$\n1步预测误差可以用正交冲击 $\\boldsymbol{\\varepsilon}_{t+1} = \\begin{pmatrix} \\varepsilon_{1,t+1} \\\\ \\varepsilon_{2,t+1} \\end{pmatrix}$ 表示：\n$$\n\\mathbf{e}_{t+1|t} = \\mathbf{u}_{t+1} = P \\boldsymbol{\\varepsilon}_{t+1}\n$$\n预测误差的分量是：\n$$\ne_{1,t+1|t} = u_{1,t+1} = p_{11}\\varepsilon_{1,t+1} + p_{12}\\varepsilon_{2,t+1} = (1)\\varepsilon_{1,t+1} + (0)\\varepsilon_{2,t+1} = \\varepsilon_{1,t+1}\n$$\n$$\ne_{2,t+1|t} = u_{2,t+1} = p_{21}\\varepsilon_{1,t+1} + p_{22}\\varepsilon_{2,t+1} = \\rho\\varepsilon_{1,t+1} + \\sqrt{1-\\rho^{2}}\\varepsilon_{2,t+1}\n$$\n可归因于冲击 $j$ 的 $y_{i,t+1}$ 的1步预测误差方差的份额（记为 $\\theta_{i \\leftarrow j}(1)$），是来自冲击 $\\varepsilon_{j,t+1}$ 的 $\\text{Var}(e_{i,t+1|t})$ 的比例。由于 $\\text{Var}(\\boldsymbol{\\varepsilon}_{t+1})=I$，这些冲击是不相关的且具有单位方差。\n\n对于 $y_{1,t+1}$，预测误差为 $e_{1,t+1|t} = \\varepsilon_{1,t+1}$。其方差为 $\\text{Var}(\\varepsilon_{1,t+1}) = 1$。来自冲击 $\\varepsilon_{1,t+1}$ 的贡献是 $1$，来自冲击 $\\varepsilon_{2,t+1}$ 的贡献是 $0$。\n因此，可归因于冲击2的方差份额是：\n$$\n\\theta_{1 \\leftarrow 2}(1) = \\frac{0}{1} = 0\n$$\n\n对于 $y_{2,t+1}$，预测误差为 $e_{2,t+1|t} = \\rho\\varepsilon_{1,t+1} + \\sqrt{1-\\rho^{2}}\\varepsilon_{2,t+1}$。其方差为：\n$$\n\\text{Var}(e_{2,t+1|t}) = \\text{Var}(\\rho\\varepsilon_{1,t+1} + \\sqrt{1-\\rho^{2}}\\varepsilon_{2,t+1}) = \\rho^{2}\\text{Var}(\\varepsilon_{1,t+1}) + (1-\\rho^{2})\\text{Var}(\\varepsilon_{2,t+1}) = \\rho^{2}(1) + (1-\\rho^{2})(1) = 1\n$$\n可归因于冲击 $\\varepsilon_{1,t+1}$ 的方差分量是 $\\rho^{2}\\text{Var}(\\varepsilon_{1,t+1}) = \\rho^{2}$。\n可归因于冲击1的方差份额是：\n$$\n\\theta_{2 \\leftarrow 1}(1) = \\frac{\\rho^{2}}{\\text{Var}(e_{2,t+1|t})} = \\frac{\\rho^{2}}{1} = \\rho^{2}\n$$\n\n最后，我们计算所需的差值 $\\Delta(\\rho)$：\n$$\n\\Delta(\\rho) = \\theta_{1 \\leftarrow 2}(1) - \\theta_{2 \\leftarrow 1}(1) = 0 - \\rho^{2} = -\\rho^{2}\n$$\n结果仅取决于同期相关性 $\\rho$ 和 Cholesky 分解所选择的排序，而与系统动态矩阵 $A$ 无关。", "answer": "$$\n\\boxed{-\\rho^{2}}\n$$"}, {"introduction": "认识到传统乔列斯基方法存在排序依赖问题后，一个自然的问题是：是否存在一种不受排序影响的替代方法？本练习将介绍广义预测误差方差分解（Generalized Forecast Error Variance Decomposition, GFEVD）这一重要工具。通过考察残差之间完全相关（$\\\\rho \\\\to 1$）的极端情况，我们将深入理解GFEVD如何对称地归因冲击，从而揭示其与传统方法在概念上的差异和优势。[@problem_id:2394552]", "id": "2394552", "problem": "考虑一个稳定的二变量 $1$ 阶向量自回归 (VAR) 模型，由 $y_{t} = A y_{t-1} + \\epsilon_{t}$ 给出，其中 $y_{t} \\in \\mathbb{R}^{2}$，$A \\in \\mathbb{R}^{2 \\times 2}$ 的特征值严格位于单位圆内，新息向量 $\\epsilon_{t}$ 满足 $\\mathbb{E}[\\epsilon_{t}] = 0$ 且 $\\mathbb{E}[\\epsilon_{t}\\epsilon_{t}^{\\prime}] = \\Sigma$。假设新息协方差矩阵具有如下参数化形式\n$$\n\\Sigma \\;=\\; \\begin{pmatrix}\n\\sigma_{1}^{2} & \\rho\\,\\sigma_{1}\\sigma_{2} \\\\\n\\rho\\,\\sigma_{1}\\sigma_{2} & \\sigma_{2}^{2}\n\\end{pmatrix},\n$$\n其中 $\\sigma_{1} > 0$，$\\sigma_{2} > 0$ 且 $\\rho \\in (-1,1)$。\n\n采用预测期为 $1$ 的归一化广义预测误差方差分解 (GFEVD) 如下。对于 $i,j \\in \\{1,2\\}$，定义冲击 $j$ 对变量 $i$ 的一步预测误差方差的（未归一化）广义贡献为\n$$\nc_{ij} \\;=\\; \\frac{\\big(e_{i}^{\\prime}\\Sigma e_{j}\\big)^{2}}{e_{j}^{\\prime}\\Sigma e_{j}},\n$$\n其中 $e_{1} = (1,0)^{\\prime}$ 且 $e_{2} = (0,1)^{\\prime}$。那么，行归一化的 GFEVD 份额为\n$$\n\\theta_{ij}(1) \\;=\\; \\frac{c_{ij}}{c_{i1} + c_{i2}}。\n$$\n\n确定当 $\\rho \\to 1^{-}$ 时，变量 $1$ 的一步预测归一化 GFEVD 份额的行向量的极限，即\n$$\n\\lim_{\\rho \\to 1^{-}} \\big(\\,\\theta_{11}(1)\\;\\; \\theta_{12}(1)\\,\\big)。\n$$\n请将最终答案表示为一个包含两个精确有理数的行矩阵。无需四舍五入。", "solution": "该问题陈述经核实具有科学依据、提法恰当且客观。这是时间序列计量经济学领域的一个标准问题。所提供的关于广义预测误差方差分解 (GFEVD) 的定义与指定预测期为 $1$ 的既有文献一致。数据和约束条件是完整且无矛盾的。矩阵 $A$ 的存在以及稳定性条件，尽管对于一步预测的计算并非必要，但它们正确地定义了其底层的稳定向量自回归过程。我们开始求解。\n\n目标是确定变量 $1$ 的一步预测归一化 GFEVD 份额的行向量的极限，记为 $\\lim_{\\rho \\to 1^{-}} \\big(\\,\\theta_{11}(1)\\;\\; \\theta_{12}(1)\\,\\big)$。\n\n问题中提供的定义如下：\n新息 $\\epsilon_t$ 的协方差矩阵：\n$$\n\\Sigma \\;=\\; \\begin{pmatrix}\n\\sigma_{1}^{2} & \\rho\\,\\sigma_{1}\\sigma_{2} \\\\\n\\rho\\,\\sigma_{1}\\sigma_{2} & \\sigma_{2}^{2}\n\\end{pmatrix}\n$$\n冲击 $j$ 对变量 $i$ 的一步预测误差方差的未归一化广义贡献：\n$$\nc_{ij} \\;=\\; \\frac{\\big(e_{i}^{\\prime}\\Sigma e_{j}\\big)^{2}}{e_{j}^{\\prime}\\Sigma e_{j}}\n$$\n其中 $e_{1} = (1,0)^{\\prime}$ 和 $e_{2} = (0,1)^{\\prime}$ 是标准基向量。\n\n行归一化的 GFEVD 份额为：\n$$\n\\theta_{ij}(1) \\;=\\; \\frac{c_{ij}}{c_{i1} + c_{i2}}\n$$\n\n我们关心的是变量 $1$ 的份额，因此我们设 $i=1$。我们必须计算 $c_{11}$ 和 $c_{12}$。\n\n首先，我们计算必要的矩阵乘积。协方差矩阵 $\\Sigma$ 的分量可以通过 $e_{i}^{\\prime}\\Sigma e_{j} = \\Sigma_{ij}$ 来获取。\n\n$c_{ij}$ 分母中的各项是：\n$e_{1}^{\\prime}\\Sigma e_{1} = \\Sigma_{11} = \\sigma_{1}^{2}$。\n$e_{2}^{\\prime}\\Sigma e_{2} = \\Sigma_{22} = \\sigma_{2}^{2}$。\n\n$c_{ij}$ 分子中的各项（平方前）是：\n对于 $c_{11}$：$e_{1}^{\\prime}\\Sigma e_{1} = \\Sigma_{11} = \\sigma_{1}^{2}$。\n对于 $c_{12}$：$e_{1}^{\\prime}\\Sigma e_{2} = \\Sigma_{12} = \\rho\\,\\sigma_{1}\\sigma_{2}$。\n\n现在我们可以计算未归一化的贡献 $c_{11}$ 和 $c_{12}$。\n\n对于 $c_{11}$ ($i=1, j=1$)：\n$$\nc_{11} = \\frac{\\big(e_{1}^{\\prime}\\Sigma e_{1}\\big)^{2}}{e_{1}^{\\prime}\\Sigma e_{1}} = \\frac{(\\sigma_{1}^{2})^{2}}{\\sigma_{1}^{2}} = \\sigma_{1}^{2}\n$$\n\n对于 $c_{12}$ ($i=1, j=2$)：\n$$\nc_{12} = \\frac{\\big(e_{1}^{\\prime}\\Sigma e_{2}\\big)^{2}}{e_{2}^{\\prime}\\Sigma e_{2}} = \\frac{(\\rho\\,\\sigma_{1}\\sigma_{2})^{2}}{\\sigma_{2}^{2}} = \\frac{\\rho^{2}\\sigma_{1}^{2}\\sigma_{2}^{2}}{\\sigma_{2}^{2}} = \\rho^{2}\\sigma_{1}^{2}\n$$\n\n接下来，我们计算归一化份额 $\\theta_{11}(1)$ 和 $\\theta_{12}(1)$。用于归一化的分母是变量 $1$ 的未归一化贡献之和：\n$$\nc_{11} + c_{12} = \\sigma_{1}^{2} + \\rho^{2}\\sigma_{1}^{2} = \\sigma_{1}^{2}(1 + \\rho^{2})\n$$\n\n冲击 $1$ 对变量 $1$ 方差的归一化份额是：\n$$\n\\theta_{11}(1) = \\frac{c_{11}}{c_{11} + c_{12}} = \\frac{\\sigma_{1}^{2}}{\\sigma_{1}^{2}(1 + \\rho^{2})} = \\frac{1}{1 + \\rho^{2}}\n$$\n\n冲击 $2$ 对变量 $1$ 方差的归一化份额是：\n$$\n\\theta_{12}(1) = \\frac{c_{12}}{c_{11} + c_{12}} = \\frac{\\rho^{2}\\sigma_{1}^{2}}{\\sigma_{1}^{2}(1 + \\rho^{2})} = \\frac{\\rho^{2}}{1 + \\rho^{2}}\n$$\n注意，这些份额正确地加总为 $1$：$\\theta_{11}(1) + \\theta_{12}(1) = \\frac{1}{1 + \\rho^{2}} + \\frac{\\rho^{2}}{1 + \\rho^{2}} = \\frac{1+\\rho^{2}}{1+\\rho^{2}} = 1$。\n\n最后，我们取当 $\\rho \\to 1^{-}$ 时每个份额的极限。由于 $\\theta_{11}(1)$ 和 $\\theta_{12}(1)$ 的表达式是关于 $\\rho$ 的有理函数并且在 $\\rho=1$ 处连续，我们可以通过直接代入来求得极限。\n\n对于 $\\theta_{11}(1)$：\n$$\n\\lim_{\\rho \\to 1^{-}} \\theta_{11}(1) = \\lim_{\\rho \\to 1^{-}} \\frac{1}{1 + \\rho^{2}} = \\frac{1}{1 + (1)^{2}} = \\frac{1}{2}\n$$\n\n对于 $\\theta_{12}(1)$：\n$$\n\\lim_{\\rho \\to 1^{-}} \\theta_{12}(1) = \\lim_{\\rho \\to 1^{-}} \\frac{\\rho^{2}}{1 + \\rho^{2}} = \\frac{(1)^{2}}{1 + (1)^{2}} = \\frac{1}{2}\n$$\n\n因此，所求行向量的极限为：\n$$\n\\lim_{\\rho \\to 1^{-}} \\big(\\,\\theta_{11}(1)\\;\\; \\theta_{12}(1)\\,\\big) = \\left( \\frac{1}{2}, \\frac{1}{2} \\right)\n$$\n当 $\\rho \\to 1^{-}$ 时，两个新息过程变得完全相关，实际上代表了一个单一的潜在冲击。GFEVD 方法不施加任意的正交化，它正确地将变量 $1$ 的预测误差方差平均归因于两个完全共线的“冲击”。最终结果按要求以行矩阵形式呈现。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\frac{1}{2} & \\frac{1}{2}\n\\end{pmatrix}\n}\n$$"}, {"introduction": "在掌握了FEVD的理论基础和不同方法的特性之后，最后一步是将这些知识转化为实用的分析工具。本练习将指导你从零开始，为一个通用的VAR($p$)模型编写代码，以实现标准的（基于乔列斯基分解的）FEVD计算。这个实践将巩固你对整个计算流程的理解，并为你运用FEVD分析真实世界数据做好准备。[@problem_id:2394623]", "id": "2394623", "problem": "给定一个$n$维向量$\\mathbf{y}_t$的$p$阶向量自回归（VAR($p$)）模型定义，该模型具有零均值、协方差平稳的动态特性：\n$$\n\\mathbf{y}_t = \\sum_{i=1}^{p} A_i \\mathbf{y}_{t-i} + \\boldsymbol{\\epsilon}_t,\\quad \\mathbb{E}[\\boldsymbol{\\epsilon}_t]=\\mathbf{0},\\quad \\mathbb{E}[\\boldsymbol{\\epsilon}_t \\boldsymbol{\\epsilon}_t'] = \\Sigma_{\\epsilon},\n$$\n其中，$A_i \\in \\mathbb{R}^{n\\times n}$，且 $\\Sigma_{\\epsilon} \\in \\mathbb{R}^{n\\times n}$ 是对称正定矩阵。定义其移动平均表示为 $\\mathbf{y}_t = \\sum_{h=0}^{\\infty} \\Psi_h \\boldsymbol{\\epsilon}_{t-h}$，其中 $\\Psi_0 = I_n$，并令$P$为唯一的、对角线元素严格为正的下三角矩阵，满足 $P P' = \\Sigma_{\\epsilon}$（在给定变量排序下，该矩阵是扰动协方差矩阵的下三角因子）。对于有限的预测期 $H \\in \\mathbb{N}$，正交化的预测误差方差分解（FEVD）矩阵 $D(H) \\in \\mathbb{R}^{n\\times n}$ 的每个元素按变量索引 $j \\in \\{1,\\dots,n\\}$ 和结构性扰动索引 $k \\in \\{1,\\dots,n\\}$ 定义为以下比率：\n$$\nD_{j k}(H) \\equiv \\frac{\\sum_{h=0}^{H-1} \\left( e_j' \\Psi_h P e_k \\right)^2}{\\sum_{h=0}^{H-1} e_j' \\Psi_h \\Sigma_{\\epsilon} \\Psi_h' e_j},\n$$\n其中 $e_j$ 是 $\\mathbb{R}^n$ 中的第$j$个标准基向量。根据其构造，对于每个$j$，矩阵的行 $D_{j\\cdot}(H)$ 之和为 $1$。所有计算均在实数算术下进行。\n\n请实现一个完整的程序，对下述的每个测试用例，计算如上定义的FEVD矩阵 $D(H)$，并以行主序将其元素展开后返回。输出中的每个标量必须四舍五入到$6$位小数。\n\n最终输出格式要求：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。此顶层列表的每个元素对应一个测试用例，并且其本身也必须是一个列表，包含该用例的按行主序展开的FEVD条目。例如，要求的总体格式为 $\\big[$case$1$,$\\,$case$2$,$\\,$\\dots\\big]$，其中每个case是一个类似 $\\big[$value$1$,$\\,$\\dots\\big]$ 的列表。\n\n测试套件：\n- 测试用例 1 ($n=2$, $p=1$, $H=8$):\n  - 系数：\n    $$\n    A_1 = \\begin{bmatrix}\n    0.5 & 0.2 \\\\\n    0.1 & 0.4\n    \\end{bmatrix}.\n    $$\n  - 扰动协方差：\n    $$\n    \\Sigma_{\\epsilon} = \\begin{bmatrix}\n    1.0 & 0.3 \\\\\n    0.3 & 0.5\n    \\end{bmatrix}.\n    $$\n- 测试用例 2 ($n=2$, $p=1$, $H=1$) （使用单位扰动协方差的边界情况）：\n  - 系数：\n    $$\n    A_1 = \\begin{bmatrix}\n    0.3 & 0.0 \\\\\n    0.0 & 0.2\n    \\end{bmatrix}.\n    $$\n  - 扰动协方差：\n    $$\n    \\Sigma_{\\epsilon} = \\begin{bmatrix}\n    1.0 & 0.0 \\\\\n    0.0 & 1.0\n    \\end{bmatrix}.\n    $$\n- 测试用例 3 ($n=3$, $p=2$, $H=6$) （更高阶数和维度）：\n  - 系数：\n    $$\n    A_1 = \\begin{bmatrix}\n    0.4 & 0.1 & 0.0 \\\\\n    0.0 & 0.3 & 0.2 \\\\\n    0.0 & 0.0 & 0.2\n    \\end{bmatrix},\\quad\n    A_2 = \\begin{bmatrix}\n    -0.1 & 0.0 & 0.0 \\\\\n    0.0 & 0.1 & 0.0 \\\\\n    0.0 & 0.0 & 0.05\n    \\end{bmatrix}.\n    $$\n  - 通过其下三角因子$P$指定的扰动协方差：\n    $$\n    P = \\begin{bmatrix}\n    0.9 & 0.0 & 0.0 \\\\\n    0.1 & 0.7 & 0.0 \\\\\n    0.0 & 0.1 & 0.8\n    \\end{bmatrix},\\quad\n    \\Sigma_{\\epsilon} = P P' = \\begin{bmatrix}\n    0.81 & 0.09 & 0.0 \\\\\n    0.09 & 0.50 & 0.07 \\\\\n    0.0 & 0.07 & 0.65\n    \\end{bmatrix}.\n    $$\n\n您的程序必须：\n- 对每个测试用例，根据上述定义，使用给定的排序（该排序决定了Cholesky因子$P$）计算FEVD矩阵 $D(H)$。\n- 将 $D(H)$ 按行主序展开为一个长度为 $n \\cdot n$ 的列表，并将每个条目四舍五入到$6$位小数。\n- 生成单行输出，其中包含一个顶层列表，每个测试用例占一个元素，每个元素是该用例的展开列表，格式严格为 $\\big[$case$1$,$\\,$case$2$,$\\,$case$3\\big]$（除了列表语法固有的空格外，不允许使用其他空格）。", "solution": "问题陈述已经过验证，并被确定为有效。在时间序列计量经济学的既定领域内，这是一个适定问题。它具有科学依据、客观，并为获得唯一解提供了所有必要信息。因此，我们可以着手推导和实现解决方案。\n\n任务是为一个给定的$n$维、零均值、协方差平稳的$p$阶向量自回归（VAR($p$)）模型计算其预测误差方差分解（FEVD）矩阵，记为$D(H)$。模型指定为：\n$$ \\mathbf{y}_t = \\sum_{i=1}^{p} A_i \\mathbf{y}_{t-i} + \\boldsymbol{\\epsilon}_t $$\n其中，$\\mathbf{y}_t \\in \\mathbb{R}^n$ 是时间$t$的变量向量，$A_i \\in \\mathbb{R}^{n \\times n}$ 是系数矩阵，$\\boldsymbol{\\epsilon}_t$ 是一个白噪声过程，其均值为 $\\mathbb{E}[\\boldsymbol{\\epsilon}_t]=\\mathbf{0}$，协方差矩阵为 $\\mathbb{E}[\\boldsymbol{\\epsilon}_t \\boldsymbol{\\epsilon}_t'] = \\Sigma_{\\epsilon}$。协方差矩阵 $\\Sigma_{\\epsilon}$ 是对称正定的。\n\n解决方案需要将VAR($p$)过程表示为其移动平均（MA）形式：\n$$ \\mathbf{y}_t = \\sum_{h=0}^{\\infty} \\Psi_h \\boldsymbol{\\epsilon}_{t-h} $$\n其中矩阵 $\\Psi_h \\in \\mathbb{R}^{n \\times n}$ 是脉冲响应函数系数。这些系数可以通过将MA形式代入VAR方程并匹配$\\boldsymbol{\\epsilon}_t$的每个滞后项的系数来递归确定。初始条件为$\\Psi_0 = I_n$，因为在时间$t$的扰动对$\\mathbf{y}_t$有直接的一对一影响。对于随后的时期$h > 0$，系数由以下递归公式给出：\n$$ \\Psi_h = \\sum_{i=1}^{p} A_i \\Psi_{h-i} $$\n这里我们定义当$k<0$时$\\Psi_k=0$。这个递归关系允许我们计算任何所需的预测期$h$的$\\Psi_h$。对于本问题，我们需要计算$h \\in \\{0, 1, \\dots, H-1\\}$的$\\Psi_h$。\n\nFEVD基于正交化的扰动。由$\\Sigma_{\\epsilon}$描述的扰动$\\boldsymbol{\\epsilon}_t$是同期相关的。为了将预测误差方差归因于特定的、不相关的潜在结构性扰动，我们对协方差矩阵进行Cholesky分解。令$P$为唯一的、对角线元素严格为正的下三角矩阵，使得$P P' = \\Sigma_{\\epsilon}$。这种分解意味着$\\mathbf{y}_t$中变量的特定排序。可以定义一个正交扰动向量$\\mathbf{u}_t = P^{-1} \\boldsymbol{\\epsilon}_t$，使得$\\mathbb{E}[\\mathbf{u}_t \\mathbf{u}_t'] = I_n$。然后，MA表示可以写成这些结构性扰动的形式：$\\mathbf{y}_t = \\sum_{h=0}^{\\infty} (\\Psi_h P) \\mathbf{u}_{t-h}$。项$\\Psi_h P$表示$\\mathbf{y}_t$对正交化扰动的响应。\n\nFEVD矩阵$D(H)$的每个元素按变量 $j \\in \\{1, \\dots, n\\}$ 和结构性扰动 $k \\in \\{1, \\dots, n\\}$ 定义如下：\n$$ D_{j k}(H) \\equiv \\frac{\\sum_{h=0}^{H-1} \\left( e_j' \\Psi_h P e_k \\right)^2}{\\sum_{h=0}^{H-1} e_j' \\Psi_h \\Sigma_{\\epsilon} \\Psi_h' e_j} $$\n这里，$e_j$是第$j$个标准基向量。\n\n让我们分析一下这个公式的组成部分。项 $e_j' \\Psi_h P e_k$ 分离出矩阵乘积 $\\Psi_h P$ 的第$(j,k)$个元素。该元素表示在$h$个时期后，变量$j$对结构性扰动$k$的一个标准差扰动的脉冲响应。分子 $\\sum_{h=0}^{H-1} (e_j' \\Psi_h P e_k)^2$ 是变量$j$的预测误差方差中可归因于结构性扰动$k$的部分，从预测期$0$累积到$H-1$。\n\n分母 $\\sum_{h=0}^{H-1} e_j' \\Psi_h \\Sigma_{\\epsilon} \\Psi_h' e_j$ 是变量$j$在相同预测期内的总预测误差方差。这可以通过观察总的未来$H$步预测误差为 $\\mathbf{y}_{t+H} - \\mathbb{E}_t[\\mathbf{y}_{t+H}] = \\sum_{h=0}^{H-1} \\Psi_h \\boldsymbol{\\epsilon}_{t+H-h}$ 来理解。该误差的协方差矩阵是 $\\sum_{h=0}^{H-1} \\Psi_h \\Sigma_{\\epsilon} \\Psi_h'$。此预测误差的第$j$个分量的方差是该协方差矩阵的第$(j,j)$个元素。问题将分母定义为每一步$h$的方差之和，这是等价的。由于 $\\sum_{k=1}^n (e_j' \\Psi_h P e_k)^2 = e_j' \\Psi_h P (\\sum_k e_k e_k') P' \\Psi_h' e_j = e_j' \\Psi_h P P' \\Psi_h' e_j = e_j' \\Psi_h \\Sigma_{\\epsilon} \\Psi_h' e_j$，分子对所有扰动$k$求和等于分母。因此，对于任何变量$j$，FEVD矩阵的相应行之和为$1$：$\\sum_{k=1}^n D_{jk}(H) = 1$。\n\n计算$D(H)$的算法如下：\n$1$. 给定VAR系数 $\\{A_1, \\dots, A_p\\}$、扰动协方差矩阵 $\\Sigma_{\\epsilon}$（或其Cholesky因子$P$）以及预测期$H$。确定维度$n$。如果未提供$P$，则通过对$\\Sigma_{\\epsilon}$进行Cholesky分解来计算它。如果提供了$P$，则计算 $\\Sigma_{\\epsilon} = P P'$。\n$2$. 创建一个列表或数组来存储MA系数矩阵 $\\Psi_h$，$h=0, \\dots, H-1$。\n$3$. 初始化 $\\Psi_0 = I_n$。\n$4$. 对$h=1, \\dots, H-1$，迭代计算 $\\Psi_h = \\sum_{i=1}^{p} A_i \\Psi_{h-i}$，并存储每个结果。\n$5$. 初始化一个用于分子的 $n \\times n$ 矩阵 `Num` 和一个用于分母的 $n$ 维向量 `Den`。\n$6$. 对每个预测期 $h$（从$0$到$H-1$）：\n    a. 计算对正交扰动的脉冲响应，$\\Theta_h = \\Psi_h P$。\n    b. 更新分子矩阵：`Num` += $\\Theta_h \\circ \\Theta_h$（逐元素平方）。\n    c. 计算此预测期的方差贡献，$V_h = \\Psi_h \\Sigma_{\\epsilon} \\Psi_h'$。\n    d. 更新分母向量：`Den` += $\\text{diag}(V_h)$。\n$7$. 通过逐元素相除计算最终的FEVD矩阵 $D(H)$：$D_{jk}(H) = \\text{Num}_{jk} / \\text{Den}_j$。\n$8$. 将矩阵 $D(H)$ 按行主序展开为一个向量，并按要求将每个条目四舍五入到$6$位小数。\n\n此过程将为问题陈述中提供的每个测试用例实现。", "answer": "```python\nimport numpy as np\n\ndef compute_fevd(A_mats, S_mat, H, is_P):\n    \"\"\"\n    Computes the Forecast Error Variance Decomposition (FEVD) matrix.\n\n    Args:\n        A_mats (list of np.ndarray): List of VAR coefficient matrices [A_1, ..., A_p].\n        S_mat (np.ndarray): The shock covariance matrix Sigma_e or its Cholesky factor P.\n        H (int): The forecast horizon.\n        is_P (bool): True if S_mat is P, False if it is Sigma_e.\n\n    Returns:\n        np.ndarray: The flattened and rounded FEVD matrix D(H).\n    \"\"\"\n    if not A_mats:\n        n = S_mat.shape[0]\n        p = 0\n    else:\n        n, _ = A_mats[0].shape\n        p = len(A_mats)\n\n    if is_P:\n        P = S_mat\n        Sigma_e = P @ P.T\n    else:\n        # The problem statement guarantees Sigma_e is symmetric positive definite.\n        # np.linalg.cholesky returns a lower-triangular matrix.\n        P = np.linalg.cholesky(S_mat)\n        Sigma_e = S_mat\n\n    # Step 1 & 2: Compute Psi_h matrices\n    psi_mats = [np.zeros((n, n)) for _ in range(H)]\n    if H > 0:\n        psi_mats[0] = np.identity(n)\n\n    for h in range(1, H):\n        new_psi = np.zeros((n, n))\n        for i in range(1, p + 1):\n            if h - i >= 0:\n                # A_i is at index (i-1) in A_mats\n                new_psi += A_mats[i-1] @ psi_mats[h - i]\n        psi_mats[h] = new_psi\n\n    # Step 3: Compute numerators and denominators\n    # Denominators: sum_{h=0..H-1} diag(Psi_h * Sigma_e * Psi_h') for each variable\n    # Numerators: sum_{h=0..H-1} ( (Psi_h * P)[j,k] )^2 for each (j,k)\n    \n    numerators = np.zeros((n, n))\n    denominators = np.zeros(n)\n\n    for h in range(H):\n        psi_h = psi_mats[h]\n        \n        # Numerator contribution from horizon h\n        theta_h = psi_h @ P\n        numerators += theta_h**2\n        \n        # Denominator contribution from horizon h\n        var_h = psi_h @ Sigma_e @ psi_h.T\n        denominators += np.diag(var_h)\n\n    # Avoid division by zero, though mathematically not possible for H>=1\n    # given Sigma_e is positive definite.\n    # The diagonal elements of Sigma_e are positive, so for h=0, psi_0=I,\n    # the denominator term is diag(Sigma_e) > 0.\n    denominators[denominators == 0] = 1e-12 # A small number to prevent errors\n\n    # Step 4: Assemble the FEVD matrix D(H)\n    D_H = numerators / denominators[:, np.newaxis]\n\n    # Step 5: Flatten and round\n    return np.round(D_H.flatten(), 6)\n\n\ndef solve():\n    \"\"\"\n    Solves the problem for all provided test cases and prints the result.\n    \"\"\"\n    # Test case 1: n=2, p=1, H=8\n    A1_c1 = np.array([[0.5, 0.2], [0.1, 0.4]])\n    Sigma_e_c1 = np.array([[1.0, 0.3], [0.3, 0.5]])\n    case1 = (\n        [A1_c1],\n        Sigma_e_c1,\n        8,\n        False # Is not P\n    )\n\n    # Test case 2: n=2, p=1, H=1\n    A1_c2 = np.array([[0.3, 0.0], [0.0, 0.2]])\n    Sigma_e_c2 = np.array([[1.0, 0.0], [0.0, 1.0]])\n    case2 = (\n        [A1_c2],\n        Sigma_e_c2,\n        1,\n        False # Is not P\n    )\n\n    # Test case 3: n=3, p=2, H=6\n    A1_c3 = np.array([[0.4, 0.1, 0.0], [0.0, 0.3, 0.2], [0.0, 0.0, 0.2]])\n    A2_c3 = np.array([[-0.1, 0.0, 0.0], [0.0, 0.1, 0.0], [0.0, 0.0, 0.05]])\n    P_c3 = np.array([[0.9, 0.0, 0.0], [0.1, 0.7, 0.0], [0.0, 0.1, 0.8]])\n    case3 = (\n        [A1_c3, A2_c3],\n        P_c3,\n        6,\n        True # Is P\n    )\n\n    test_cases = [case1, case2, case3]\n    results = []\n    \n    for case in test_cases:\n        A_mats, S_mat, H, is_P = case\n        result = compute_fevd(A_mats, S_mat, H, is_P)\n        results.append(result)\n\n    # Format the output string as per requirements\n    formatted_results = []\n    for res_array in results:\n        # Use .6f format specifier to ensure 6 decimal places are printed\n        str_list = [f\"{x:.6f}\" for x in res_array]\n        formatted_results.append(f\"[{','.join(str_list)}]\")\n    \n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```"}]}