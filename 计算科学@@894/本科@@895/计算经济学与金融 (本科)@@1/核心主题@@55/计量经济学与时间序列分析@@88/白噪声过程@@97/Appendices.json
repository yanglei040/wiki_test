{"hands_on_practices": [{"introduction": "在我们能够分析或使用白噪声之前，我们必须首先有能力生成它。这个练习将带你动手实践，从一个标准的随机数生成器出发，一步步构建高斯白噪声序列。通过应用Box-Muller变换这一经典方法，你将把均匀分布的随机数转换为正态分布的随机数，并调整其方差，这是在金融建模、信号处理等领域进行仿真的基本功。[@problem_id:1350034]", "id": "1350034", "problem": "一位工程师正在为数字通信系统开发一个仿真，需要对信道噪声进行建模。该噪声被建模为离散时间高斯白噪声过程 $\\{W[n]\\}_{n=1,2,...}$，它是一个独立同分布的随机变量序列，每个变量都服从均值为零、方差为特定值的正态分布。\n\n该工程师使用一个标准伪随机数生成器，它生成一个从区间 $[0, 1)$ 上的均匀分布中抽取的数列 $\\{U_n\\}$。为了将这些数转换为标准正态随机变量 $\\{Z_n\\}$（均值 $\\mu=0$，方差 $\\sigma^2=1$），该工程师采用了 Box-Muller 变换。该方法取两个独立的均匀随机变量 $U_1$ 和 $U_2$，并使用以下方程生成两个独立的标准正态随机变量 $Z_1$ 和 $Z_2$：\n$$Z_1 = \\sqrt{-2 \\ln(U_1)} \\cos(2\\pi U_2)$$\n$$Z_2 = \\sqrt{-2 \\ln(U_1)} \\sin(2\\pi U_2)$$\n然后，通过对标准正态变量序列 $\\{Z[n]\\}$ 进行适当的缩放来生成高斯白噪声过程 $\\{W[n]\\}$，以达到 $\\sigma_W^2 = 7.5$ 的期望方差。\n\n假设均匀随机数生成器产生的前两个数是 $U_1 = \\exp(-4.5)$ 和 $U_2 = 1/3$。使用由这两个均匀数生成的第一个标准正态变量 $Z_1$，计算白噪声过程的第一个对应样本 $W[1]$。\n\n将你的答案表示为一个四舍五入到三位有效数字的实数。", "solution": "我们使用 Box-Muller 变换。给定 $U_{1}=\\exp(-4.5)$ 和 $U_{2}=\\frac{1}{3}$，第一个标准正态变量是\n$$\nZ_{1}=\\sqrt{-2\\ln(U_{1})}\\,\\cos(2\\pi U_{2}).\n$$\n因为 $\\ln(U_{1})=\\ln(\\exp(-4.5))=-4.5$，我们有\n$$\n-2\\ln(U_{1})=-2(-4.5)=9,\\quad \\sqrt{-2\\ln(U_{1})}=\\sqrt{9}=3.\n$$\n并且，\n$$\n\\cos(2\\pi U_{2})=\\cos\\!\\left(2\\pi\\cdot \\frac{1}{3}\\right)=\\cos\\!\\left(\\frac{2\\pi}{3}\\right)=-\\frac{1}{2}.\n$$\n因此，\n$$\nZ_{1}=3\\left(-\\frac{1}{2}\\right)=-\\frac{3}{2}.\n$$\n为了获得方差为 $\\sigma_{W}^{2}=7.5$ 的白噪声样本，将标准正态变量乘以 $\\sigma_{W}=\\sqrt{7.5}$ 进行缩放：\n$$\nW[1]=\\sqrt{\\sigma_{W}^{2}}\\,Z_{1}=\\sqrt{7.5}\\left(-\\frac{3}{2}\\right)=-\\frac{3}{2}\\sqrt{7.5}.\n$$\n数值上，$\\sqrt{7.5}\\approx 2.738612787$，因此\n$$\nW[1]\\approx -1.5\\times 2.738612787\\approx -4.107919181,\n$$\n四舍五入到三位有效数字是 $-4.11$。", "answer": "$$\\boxed{-4.11}$$"}, {"introduction": "白噪声是构建更复杂时间序列模型的基石。本练习探讨了一个简单却极为重要的模型——一阶移动平均（$MA(1)$）过程，它由当前和前一期的白噪声冲击构成。通过计算该过程的自协方差，你将亲身体会到，简单的线性组合如何将完全无记忆的白噪声转化为一个具有短期记忆（即自相关）的新序列，这是理解时间序列依赖结构的关键一步。[@problem_id:1350040]", "id": "1350040", "problem": "一位数字信号处理工程师正在分析一个新设计滤波器的输出。在离散时间点 $t$ 的输出信号，记为 $X_t$，由一个随机过程建模。该模型描述了输出如何受到一系列不可预测的随机电子波动的影响。其关系由以下方程给出：\n\n$$X_t = W_t + \\theta W_{t-1}$$\n\n在这里，对于所有整数时间 $t$ 的序列 $\\{W_t\\}$ 代表一个离散时间白噪声过程。这意味着每个 $W_t$ 都是一个具有以下性质的随机变量：\n1.  对于所有 $t$，均值（期望值）为零：$E[W_t] = 0$。\n2.  对于所有 $t$，方差为一个常数值 $\\sigma_W^2$：$\\text{Var}(W_t) = \\sigma_W^2$。\n3.  在不同时间点的值是不相关的：对于任何 $t \\neq s$，有 $\\text{Cov}(W_t, W_s) = 0$。\n\n参数 $\\theta$ 是一个固定的实值常数，它表征了滤波器的设计。为了理解某一时刻的随机波动如何影响下一时刻的信号，这位工程师需要计算信号在时间 $t$ 的值与紧接着的下一个时间步 $t+1$ 的值之间的协方差。\n\n求协方差 $\\text{Cov}(X_t, X_{t+1})$。你的最终答案应该是一个用 $\\theta$ 和 $\\sigma_W^2$ 表示的符号表达式。", "solution": "我们已知一阶移动平均过程：\n$$X_{t} = W_{t} + \\theta W_{t-1}, \\quad X_{t+1} = W_{t+1} + \\theta W_{t}.$$\n滞后为一的协方差定义为\n$$\\text{Cov}(X_{t}, X_{t+1}) = \\mathbb{E}[X_{t}X_{t+1}] - \\mathbb{E}[X_{t}]\\,\\mathbb{E}[X_{t+1}].$$\n由于对所有 $t$ 都有 $\\mathbb{E}[W_{t}] = 0$，我们有\n$$\\mathbb{E}[X_{t}] = \\mathbb{E}[W_{t} + \\theta W_{t-1}] = 0 + \\theta \\cdot 0 = 0,$$\n并且类似地 $\\mathbb{E}[X_{t+1}] = 0$。因此，\n$$\\text{Cov}(X_{t}, X_{t+1}) = \\mathbb{E}[X_{t}X_{t+1}].$$\n计算乘积：\n$$X_{t}X_{t+1} = (W_{t} + \\theta W_{t-1})(W_{t+1} + \\theta W_{t})\n= W_{t}W_{t+1} + \\theta W_{t}^{2} + \\theta W_{t-1}W_{t+1} + \\theta^{2} W_{t-1}W_{t}.$$\n取期望，并利用白噪声的性质 $\\mathbb{E}[W_{s}W_{t}] = 0$ (当 $s \\neq t$) 和 $\\mathbb{E}[W_{t}^{2}] = \\text{Var}(W_{t}) = \\sigma_{W}^{2}$，我们得到\n$$\\mathbb{E}[X_{t}X_{t+1}] = 0 + \\theta\\,\\mathbb{E}[W_{t}^{2}] + 0 + 0 = \\theta \\sigma_{W}^{2}.$$\n因此，\n$$\\text{Cov}(X_{t}, X_{t+1}) = \\theta \\sigma_{W}^{2}.$$", "answer": "$$\\boxed{\\theta \\sigma_{W}^{2}}$$"}, {"introduction": "在经济和金融建模中，一个好模型的标志之一是其残差应表现为白噪声，这表明模型已经充分捕捉了数据中的系统性模式。这个实践练习将引导你使用统计检验来判断一个给定的序列（如模型残差）是否为白噪声。你将亲手实现并应用t检验和Ljung-Box检验，这是时间序列分析师进行模型诊断的“利器”，确保你的模型是可靠和有效的。[@problem_id:2448045]", "id": "2448045", "problem": "您正在分析一家公司经过季节性调整后的每日销售额残差，是否在零均值和无线性自相关方面表现为弱白噪声。请使用以下基本依据：根据定义，一个弱白噪声过程 $\\{e_t\\}$ 满足 $\\mathbb{E}[e_t] = 0$ 且对于所有整数 $k \\neq 0$，有 $\\operatorname{Cov}(e_t, e_{t-k}) = 0$。要判断一个有限的观测序列在给定的显著性水平下是否与弱白噪声一致，请按以下基本原理进行：使用双边学生t检验来检验均值 $\\mathbb{E}[e_t]=0$；使用 Ljung-Box 混合统计量来检验滞后阶数最高为 $h$ 的自相关系数联合为零的原假设。\n\n您的程序应遵循的实现细节：\n- 零均值检验。设样本量为 $n$，样本均值为 $\\bar{e} = \\frac{1}{n}\\sum_{t=1}^{n} e_t$，无偏样本标准差为 $s = \\sqrt{\\frac{1}{n-1}\\sum_{t=1}^{n}(e_t - \\bar{e})^2}$。在原假设 $\\mathbb{E}[e_t] = 0$ 下，对于具有有限二阶矩的独立同分布数据，统计量\n$$\nT = \\frac{\\bar{e}}{s/\\sqrt{n}}\n$$\n服从自由度为 $n-1$ 的学生t分布。计算双边 $p$ 值，并与给定的显著性水平 $\\alpha$ 进行比较。\n- 自相关检验。对于每个滞后阶数 $k \\in \\{1,\\dots,h^\\ast\\}$（其中 $h^\\ast = \\min(h, n-1)$），计算样本自相关系数\n$$\n\\hat{r}_k = \\frac{\\sum_{t=k+1}^{n}(e_t - \\bar{e})(e_{t-k} - \\bar{e})}{\\sum_{t=1}^{n}(e_t - \\bar{e})^2}.\n$$\n然后计算 Ljung-Box 统计量\n$$\nQ = n(n+2)\\sum_{k=1}^{h^\\ast} \\frac{\\hat{r}_k^2}{n-k}.\n$$\n在所有 $k=1,\\dots,h^\\ast$ 的 $\\hat{r}_k = 0$ 的联合原假设下，对于大样本 $n$，$Q$ 近似服从自由度为 $h^\\ast$ 的卡方分布。计算相应的 $p$ 值，并与 $\\alpha$ 进行比较。\n- 决策规则。当且仅当两个检验在显著性水平 $\\alpha$ 下均未能拒绝原假设时，才将残差序列判断为“弱白噪声”，即 $p_{\\text{mean}} \\ge \\alpha$ 和 $p_{\\text{LB}} \\ge \\alpha$ 同时成立。\n- 退化方差处理。如果无偏样本方差恰好为零，则所有 $e_t$ 都相等。在这种情况下，除非所有 $e_t$ 都恰好为零（此时按照本练习的约定将其视作白噪声），否则应将该序列判断为“非白噪声”。此规则可防止检验统计量中出现未定义的除法。\n\n角度单位要求：下文使用的任何角度均以弧度为单位。\n\n测试集。将上述决策规则应用于以下四个季节性调整后的残差序列，每个序列都有其指定的显著性水平 $\\alpha$ 和最大自相关滞后阶数 $h$：\n\n- 案例1（理想情况：稀疏非相关残差）：$n=60$, $h=10$, $\\alpha=0.05$。残差为 $e_t = 0$（对所有 $t$），除了 $e_{6} = 1.0$ 和 $e_{51} = -1.0$。\n- 案例2（周模式残留的自相关）：$n=56$, $h=10$, $\\alpha=0.05$。对于 $t=0,1,\\dots,55$，残差为 $e_t = \\sin\\!\\left(\\frac{2\\pi t}{7}\\right)$，其中 $\\pi$ 是数学常数，角度以弧度为单位。\n- 案例3（未正确调整的恒定偏差；零方差的边界情况）：$n=30$, $h=5$, $\\alpha=0.05$。对于所有 $t=1,\\dots,30$，残差为常数 $e_t = 0.3$。\n- 案例4（小样本，大 $h$ 值接近 $n$；$h$ 的边界情况）：$n=12$, $h=10$, $\\alpha=0.05$。残差为 $e_t = 0$（对所有 $t$），除了 $e_{1} = 1.0$ 和 $e_{12} = -1.0$。\n\n您的程序必须为每个案例计算一个布尔值，以根据上述规则指示在显著性水平 $\\alpha$ 下残差是否为弱白噪声。最终输出格式必须为单行文本，其中包含按顺序排列的四个布尔结果，以逗号分隔并用方括号括起，例如“[True,False,True,False]”。不应打印任何额外文本。", "solution": "对所述问题进行验证。\n\n**步骤1：提取已知条件**\n- **定义**：一个弱白噪声过程 $\\{e_t\\}$ 满足 $\\mathbb{E}[e_t] = 0$ 且对于所有整数 $k \\neq 0$，有 $\\operatorname{Cov}(e_t, e_{t-k}) = 0$。\n- **检验1（均值）**：针对原假设 $\\mathbb{E}[e_t]=0$ 的双边学生t检验。统计量 $T = \\frac{\\bar{e}}{s/\\sqrt{n}}$ 服从自由度为 $n-1$ 的学生t分布，其中 $\\bar{e}$ 是样本均值， $s$ 是无偏样本标准差， $n$ 是样本量。\n- **检验2（自相关）**：针对滞后阶数最高为 $h$ 的自相关系数联合为零的原假设的 Ljung-Box 检验。统计量 $Q = n(n+2)\\sum_{k=1}^{h^\\ast} \\frac{\\hat{r}_k^2}{n-k}$ 近似服从自由度为 $h^\\ast$ 的卡方分布，其中 $h^\\ast = \\min(h, n-1)$，$\\hat{r}_k$ 是滞后为 $k$ 的样本自相关系数。\n- **决策规则**：当且仅当均值检验（$p_{\\text{mean}}$）和 Ljung-Box 检验（$p_{\\text{LB}}$）的p值均大于或等于显著性水平 $\\alpha$ 时，序列才被归类为弱白噪声。\n- **退化情况**：如果样本方差为零，则只有当序列所有元素都为零时，该序列才是弱白噪声；否则不是。\n- **测试案例**：\n    - 案例1：$n=60, h=10, \\alpha=0.05$。残差 $e_t=0$，除了 $e_{6} = 1.0, e_{51} = -1.0$。\n    - 案例2：$n=56, h=10, \\alpha=0.05$。对于 $t=0,1,\\dots,55$，残差为 $e_t = \\sin(\\frac{2\\pi t}{7})$。\n    - 案例3：$n=30, h=5, \\alpha=0.05$。对于所有 $t$，残差 $e_t = 0.3$。\n    - 案例4：$n=12, h=10, \\alpha=0.05$。残差 $e_t=0$，除了 $e_{1} = 1.0, e_{12} = -1.0$。\n\n**步骤2：使用提取的已知条件进行验证**\n评估问题的有效性。\n- **科学依据**：该问题基于成熟的时间序列分析统计方法，即学生t检验和 Ljung-Box 检验。弱白噪声的定义和公式、检验统计量及其分布都是标准且正确的。\n- **良态问题**：该问题为每个测试案例提供了所有必要的数据和参数。决策规则明确。每个案例都可以获得唯一的布尔结果。处理零方差退化情况的规范是清晰的，可防止出现除以零的错误。\n- **客观性**：该问题以精确、客观和量化的术语陈述。分类基于将计算出的p值与给定的显著性水平进行比较，这是一个客观的标准。\n\n**步骤3：结论与行动**\n该问题具有科学合理性、良态性和客观性。它不包含逻辑矛盾、未指定的参数或无法形式化的指令。案例2中序列索引（即 $t=0, \\dots, 55$）的轻微模糊性是一个次要的符号问题，可以合理地解释为定义一个包含56个值的0索引序列，这在计算实践中是标准做法。因此，该问题被视为**有效**。将构建一个解决方案。\n\n**解决方案设计**\n\n解决方案将作为一个程序实现，该程序根据弱白噪声的标准评估四个指定的时间序列中的每一个。程序的核心将是一个封装单个时间序列逻辑的函数。该函数将按以下步骤进行。\n\n首先，对于给定的序列 $\\{e_t\\}_{t=1}^n$，我们计算基本的样本统计量：样本量 $n$、样本均值 $\\bar{e} = \\frac{1}{n}\\sum_{t=1}^{n} e_t$ 和离均差平方和 $\\sum_{t=1}^{n}(e_t - \\bar{e})^2$。\n\n首先处理一个特殊情况，如规定所示。如果离均差平方和为零（在浮点允差范围内），这意味着所有 $e_t$ 都是相同的，且等于 $\\bar{e}$。根据问题的约定，只有当 $\\bar{e}=0$ 时，这个退化序列才被认为是弱白噪声。如果方差不为零，则继续进行统计检验。\n\n第一个检验处理零均值条件 $\\mathbb{E}[e_t]=0$。计算学生t统计量：\n$$\nT = \\frac{\\bar{e}}{s/\\sqrt{n}}\n$$\n其中 $s = \\sqrt{\\frac{1}{n-1}\\sum_{t=1}^{n}(e_t - \\bar{e})^2}$ 是无偏样本标准差。然后从自由度为 $n-1$ 的学生t分布计算双边p值 $p_{\\text{mean}}$。\n\n第二个检验处理无自相关条件 $\\operatorname{Cov}(e_t, e_{t-k}) = 0$（对于 $k \\ne 0$）。这通过 Ljung-Box 检验完成。我们首先确定有效最大滞后阶数 $h^\\ast = \\min(h, n-1)$。然后，对于从 $1$ 到 $h^\\ast$ 的每个滞后阶数 $k$，我们计算样本自相关：\n$$\n\\hat{r}_k = \\frac{\\sum_{t=k+1}^{n}(e_t - \\bar{e})(e_{t-k} - \\bar{e})}{\\sum_{t=1}^{n}(e_t - \\bar{e})^2}\n$$\n然后构建 Ljung-Box 统计量 $Q$：\n$$\nQ = n(n+2)\\sum_{k=1}^{h^\\ast} \\frac{\\hat{r}_k^2}{n-k}\n$$\n相应的p值 $p_{\\text{LB}}$ 从自由度为 $h^\\ast$ 的卡方（$\\chi^2$）分布中导出。\n\n最后，应用决策规则。当且仅当 $p_{\\text{mean}} \\ge \\alpha$ 和 $p_{\\text{LB}} \\ge \\alpha$ 两个条件都满足时，序列才被归类为弱白噪声。为问题陈述中提供的四个测试案例中的每一个计算这个布尔结果。每个案例的分析按计划进行：\n- **案例1**：一个稀疏序列，其中两个非零项之和为零。样本均值恰好为零（$p_{\\text{mean}}=1.0$）。非零项相距甚远，因此滞后阶数最高为 $h=10$ 的自相关系数均为零。因此，$Q=0$（$p_{\\text{LB}}=1.0$）。两个检验都通过。\n- **案例2**：一个覆盖整数个周期的完美正弦曲线。样本均值接近零（$p_{\\text{mean}} \\approx 1.0$），但序列具有强周期性。滞后阶数 $k=7$ 处的自相关会很高，导致 $Q$ 统计量很大且 $p_{\\text{LB}}$ 非常小。自相关检验将失败。\n- **案例3**：一个恒定的非零序列。这属于退化方差类别。由于均值非零，根据特殊规则将其归类为非白噪声。\n- **案例4**：一个与案例1类似的稀疏序列。样本均值为零（$p_{\\text{mean}}=1.0$）。非零项位于序列的两端（$e_1, e_{12}$）。它们之间的距离为11。由于我们测试的滞后阶数最高为 $h=10$，它们之间的相互作用未被捕捉，所有相关的样本自相关系数均为零。$Q=0$（$p_{\\text{LB}}=1.0$）。两个检验都通过。\n\n实现将利用 `numpy` 库进行数值运算，并利用 `scipy.stats` 从 $t$ 分布和 $\\chi^2$ 分布中获取 $p$ 值。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import t, chi2\n\ndef is_weak_white_noise(e: np.ndarray, h: int, alpha: float) -> bool:\n    \"\"\"\n    Tests if a time series behaves like weak white noise.\n\n    Args:\n        e: A numpy array representing the time series of residuals.\n        h: The maximum lag for the Ljung-Box test.\n        alpha: The significance level for the tests.\n\n    Returns:\n        True if the series is classified as weak white noise, False otherwise.\n    \"\"\"\n    n = len(e)\n    if n == 0:\n        return True # Convention for empty series\n\n    e_bar = np.mean(e)\n    sum_sq_dev = np.sum((e - e_bar)**2)\n\n    # Degenerate variance handling rule\n    if np.isclose(sum_sq_dev, 0):\n        # Variance is zero, so all elements are equal to the mean.\n        # It's white noise by convention only if the mean is also zero.\n        return np.isclose(e_bar, 0)\n\n    # 1. Mean-zero test (Student's t-test)\n    # Unbiased sample standard deviation\n    s = np.sqrt(sum_sq_dev / (n - 1))\n    \n    # Check for s=0 shouldn't be needed due to sum_sq_dev check, but for robustness:\n    if np.isclose(s, 0):\n        # This case is already covered by the sum_sq_dev check, but as a safeguard.\n        return np.isclose(e_bar, 0)\n        \n    t_statistic = e_bar / (s / np.sqrt(n))\n    df_t = n - 1\n    p_mean = t.sf(np.abs(t_statistic), df=df_t) * 2\n\n    # 2. Autocorrelation test (Ljung-Box)\n    h_star = min(h, n - 1)\n    \n    lb_sum = 0.0\n    for k in range(1, h_star + 1):\n        # Numerator: sum_{i=k to n-1} (e[i] - e_bar) * (e[i-k] - e_bar)\n        # using 0-indexed array 'e'\n        numerator = np.dot(e[k:] - e_bar, e[:-k] - e_bar)\n        r_k = numerator / sum_sq_dev\n        lb_sum += (r_k**2) / (n - k)\n\n    q_statistic = n * (n + 2) * lb_sum\n    df_q = h_star\n    \n    # Handle df_q=0 case (e.g., n=1, so h_star=0)\n    if df_q == 0:\n        p_lb = 1.0 # No autocorrelations to test\n    else:\n        p_lb = chi2.sf(q_statistic, df=df_q)\n\n    # 3. Decision rule\n    return p_mean >= alpha and p_lb >= alpha\n\ndef solve():\n    \"\"\"\n    Solves the problem by applying the white noise test to four specified cases.\n    \"\"\"\n    \n    # Case 1 (happy path: sparse uncorrelated residuals)\n    n1, h1, alpha1 = 60, 10, 0.05\n    e1 = np.zeros(n1)\n    e1[5] = 1.0   # e_6 in 1-based indexing\n    e1[50] = -1.0 # e_51 in 1-based indexing\n    \n    # Case 2 (autocorrelated leftovers from weekly pattern)\n    n2, h2, alpha2 = 56, 10, 0.05\n    t2 = np.arange(n2)\n    e2 = np.sin(2 * np.pi * t2 / 7)\n    \n    # Case 3 (misadjusted constant bias; boundary case with zero variance)\n    n3, h3, alpha3 = 30, 5, 0.05\n    e3 = np.full(n3, 0.3)\n    \n    # Case 4 (small sample, large h close to n; boundary on h)\n    n4, h4, alpha4 = 12, 10, 0.05\n    e4 = np.zeros(n4)\n    e4[0] = 1.0   # e_1 in 1-based indexing\n    e4[11] = -1.0 # e_12 in 1-based indexing\n\n    test_cases = [\n        (e1, h1, alpha1),\n        (e2, h2, alpha2),\n        (e3, h3, alpha3),\n        (e4, h4, alpha4),\n    ]\n\n    results = []\n    for e, h, alpha in test_cases:\n        result = is_weak_white_noise(e, h, alpha)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```"}]}