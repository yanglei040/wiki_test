{"hands_on_practices": [{"introduction": "第一个动手实践将我们的理论讨论置于一个实际且易于理解的情景中：一位自由职业者决定如何设定时薪和工作时长。这里的挑战在于权衡更高工资（这会降低获得工作的机会）与投入时间的机会成本。通过解决这个问题，你将练习运用多变量微积分来最大化一个期望利润函数，这是经济建模中的一项基本技能。[@problem_id:2422477]", "id": "2422477", "problem": "考虑一位风险中性的自由职业者，为单个时期决定小时费率 $w \\ge 0$ 并预留 $h \\ge 0$ 小时的工作时间。该工作者与客户匹配的概率为 $p(w) = \\exp(-\\alpha w)$，其中 $\\alpha > 0$。如果匹配成功，该工作者在所有 $h$ 小时内每小时赚取 $w$，总收入为 $w h$；如果未匹配成功，收入为 $0$。预留 $h$ 小时会产生机会成本 $c(h) = \\frac{\\gamma}{2} h^{2}$（其中 $\\gamma > 0$），无论是否发生匹配，该成本都会产生。\n\n假设存在内部解，且该工作者选择 $(w,h)$ 以最大化期望利润（期望收入减去机会成本），请确定利润最大化的选择 $(w^{\\star}, h^{\\star})$，并以 $\\alpha$ 和 $\\gamma$ 的闭式表达式表示。\n\n您的最终答案必须是单个解析表达式。不要提供不等式或方程式。无需四舍五入。", "solution": "在尝试求解之前，对问题陈述进行验证。\n\n第1步：提取已知条件\n- 决策变量：小时费率 $w \\ge 0$，可用工作时间 $h \\ge 0$。\n- 与客户匹配的概率：$p(w) = \\exp(-\\alpha w)$。\n- 概率函数的参数约束：$\\alpha > 0$。\n- 匹配成功时的收入：$w h$。\n- 未匹配成功时的收入：$0$。\n- 机会成本函数：$c(h) = \\frac{\\gamma}{2} h^{2}$。\n- 成本函数的参数约束：$\\gamma > 0$。\n- 工作者的目标：最大化期望利润。\n- 期望利润的定义：期望收入减去机会成本。\n- 假设：存在内部解，意味着最优选择 $(w^{\\star}, h^{\\star})$ 满足 $w^{\\star} > 0$ 和 $h^{\\star} > 0$。\n- 目标：确定利润最大化的选择 $(w^{\\star}, h^{\\star})$，并以 $\\alpha$ 和 $\\gamma$ 的闭式表达式表示。\n\n第2步：使用提取的已知条件进行验证\n该问题是微观经济理论中的一个标准优化问题，具体涉及不确定性下的劳动供给。\n- **科学依据**：该问题在经济学原理上有充分的依据。在经济建模中，使用指数函数表示成功概率和使用二次函数表示成本是常见的做法，以确保诸如收益递减和边际成本递增等理想属性。风险中性的假设将效用函数简化为货币的线性函数。因此，该问题在科学上和数学上都是合理的。\n- **适定性**：该问题是适定的。它指定了一个目标函数（期望利润），该函数需要关于两个选择变量（$w$和$h$）进行最大化，并受给定的函数形式和参数约束（$\\alpha > 0$，$\\gamma > 0$）的限制。内部解的假设将求解方法指向标准的微分学，确保可以找到唯一解。\n- **客观性**：该问题使用精确、客观的数学语言陈述，没有模糊性或主观论断。\n\n第3步：结论与行动\n该问题有效。它是一个定义明确、有科学依据的优化问题。下面将推导其解。\n\n工作者的期望利润，记为 $\\Pi(w, h)$，是期望收入减去机会成本。期望收入是匹配成功时的收入 $w h$ 乘以匹配成功的概率 $p(w)$，加上未匹配成功时的收入 $0$ 乘以未匹配的概率 $1-p(w)$。机会成本 $c(h)$ 无论结果如何都会产生。\n\n因此，期望利润函数为：\n$$\n\\Pi(w, h) = p(w) \\cdot (wh) + (1 - p(w)) \\cdot 0 - c(h)\n$$\n代入 $p(w)$ 和 $c(h)$ 的给定函数形式：\n$$\n\\Pi(w, h) = \\exp(-\\alpha w) w h - \\frac{\\gamma}{2} h^{2}\n$$\n为了关于 $w$ 和 $h$ 最大化此函数，我们求其一阶偏导数并令其为零。这是一阶临界点条件。问题中关于内部解的假设保证了该点对应于最大利润。\n\n首先，我们对工资 $w$ 求偏导：\n$$\n\\frac{\\partial \\Pi}{\\partial w} = \\frac{\\partial}{\\partial w} \\left( w h \\exp(-\\alpha w) - \\frac{\\gamma}{2} h^{2} \\right)\n$$\n对第一项使用乘法求导法则：\n$$\n\\frac{\\partial \\Pi}{\\partial w} = h \\cdot \\frac{d}{dw}(w \\exp(-\\alpha w)) = h \\left( 1 \\cdot \\exp(-\\alpha w) + w \\cdot (-\\alpha \\exp(-\\alpha w)) \\right)\n$$\n$$\n\\frac{\\partial \\Pi}{\\partial w} = h \\exp(-\\alpha w) (1 - \\alpha w)\n$$\n将此偏导数设为零，得到第一个条件：\n$$\nh \\exp(-\\alpha w) (1 - \\alpha w) = 0\n$$\n\n接下来，我们对工作小时数 $h$ 求偏导：\n$$\n\\frac{\\partial \\Pi}{\\partial h} = \\frac{\\partial}{\\partial h} \\left( w h \\exp(-\\alpha w) - \\frac{\\gamma}{2} h^{2} \\right)\n$$\n$$\n\\frac{\\partial \\Pi}{\\partial h} = w \\exp(-\\alpha w) - \\gamma h\n$$\n将此偏导数设为零，得到第二个条件：\n$$\nw \\exp(-\\alpha w) - \\gamma h = 0\n$$\n\n现在我们得到一个包含两个未知数 $w$ 和 $h$ 的方程组：\n1. $h \\exp(-\\alpha w) (1 - \\alpha w) = 0$\n2. $w \\exp(-\\alpha w) - \\gamma h = 0$\n\n从方程(1)可知，因为我们寻求一个内部解，其中 $h^{\\star} > 0$，并且对于任何有限的 $w$，项 $\\exp(-\\alpha w)$ 都是严格为正的，所以该方程只有在项 $(1 - \\alpha w)$ 等于零时才能成立。\n$$\n1 - \\alpha w = 0\n$$\n解出 $w$ 得到最优工资率 $w^{\\star}$：\n$$\nw^{\\star} = \\frac{1}{\\alpha}\n$$\n因为给定 $\\alpha > 0$，所以 $w^{\\star}$ 是正数，这与内部解的假设一致。\n\n现在，我们将这个最优工资 $w^{\\star}$ 代入方程(2)中，以求出最优工作小时数 $h^{\\star}$：\n$$\n\\left(\\frac{1}{\\alpha}\\right) \\exp\\left(-\\alpha \\left(\\frac{1}{\\alpha}\\right)\\right) - \\gamma h = 0\n$$\n$$\n\\frac{1}{\\alpha} \\exp(-1) - \\gamma h = 0\n$$\n重新整理以解出 $h$：\n$$\n\\gamma h = \\frac{1}{\\alpha} \\exp(-1) = \\frac{1}{\\alpha e}\n$$\n这给出了最优工作小时数 $h^{\\star}$：\n$$\nh^{\\star} = \\frac{1}{\\alpha \\gamma e}\n$$\n因为给定 $\\alpha > 0$ 且 $\\gamma > 0$，所以 $h^{\\star}$ 也是正数，与内部解的假设一致。\n\n因此，利润最大化的选择是 $(w^{\\star}, h^{\\star}) = \\left(\\frac{1}{\\alpha}, \\frac{1}{\\alpha \\gamma e}\\right)$。\n\n为严谨起见，我们可以使用二阶条件来验证这是一个最大值。二阶偏导数的海森矩阵是：\n$$ H(w,h) = \\begin{pmatrix} \\frac{\\partial^2 \\Pi}{\\partial w^2} & \\frac{\\partial^2 \\Pi}{\\partial w \\partial h} \\\\ \\frac{\\partial^2 \\Pi}{\\partial h \\partial w} & \\frac{\\partial^2 \\Pi}{\\partial h^2} \\end{pmatrix} $$\n其分量为：\n$$ \\frac{\\partial^2 \\Pi}{\\partial w^2} = -h\\alpha\\exp(-\\alpha w)(2 - \\alpha w) $$\n$$ \\frac{\\partial^2 \\Pi}{\\partial h^2} = -\\gamma $$\n$$ \\frac{\\partial^2 \\Pi}{\\partial w \\partial h} = \\exp(-\\alpha w)(1 - \\alpha w) $$\n在临界点 $w^{\\star} = 1/\\alpha$ 和 $h^{\\star} = 1/(\\alpha \\gamma e)$ 处：\n$$ \\frac{\\partial^2 \\Pi}{\\partial w^2}\\bigg|_{(w^{\\star},h^{\\star})} = -h^{\\star}\\alpha\\exp(-1)(2 - 1) = -\\frac{1}{\\alpha\\gamma e}\\alpha e^{-1} = -\\frac{1}{\\gamma e^2} < 0 $$\n$$ \\frac{\\partial^2 \\Pi}{\\partial h^2}\\bigg|_{(w^{\\star},h^{\\star})} = -\\gamma < 0 $$\n$$ \\frac{\\partial^2 \\Pi}{\\partial w \\partial h}\\bigg|_{(w^{\\star},h^{\\star})} = \\exp(-1)(1 - 1) = 0 $$\n此时海森矩阵的行列式是：\n$$ D = \\left(-\\frac{1}{\\gamma e^2}\\right)(-\\gamma) - (0)^2 = \\frac{1}{e^2} > 0 $$\n由于行列式 $D$ 为正，且 $\\frac{\\partial^2 \\Pi}{\\partial w^2}$ 为负，因此该临界点是一个局部最大值，符合要求。\n\n利润最大化的选择由推导出的 $w^{\\star}$ 和 $h^{\\star}$ 的表达式给出。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{1}{\\alpha} & \\frac{1}{\\alpha \\gamma e} \\end{pmatrix}}\n$$"}, {"introduction": "未来的竞争威胁如何影响公司今天的定价策略？本练习通过一个两期模型探讨了这个问题，其中垄断者在第二期面临竞争对手进入市场的随机风险。这个实践将引导你使用“逆向归纳法”这一解决动态问题的强大工具，并揭示一个关于决策在时间上是否关联如何影响最优策略的关键洞见。[@problem_id:2422436]", "id": "2422436", "problem": "一家在位企业在两个离散的时期（记为 $t \\in \\{0,1\\}$）销售一种同质、易腐烂的商品。在每个时期 $t$，反市场需求函数是线性的，由价格 $p_t$ 及其对应的需求量 $q_t = A - B p_t$ 给出，其中 $A > 0$ 和 $B > 0$ 是企业已知的参数，且 $p_t \\in [0, A/B]$。该企业的边际成本为常数 $c$，满足 $0 < c < A/B$，且没有固定成本。企业对时期 1 的利润使用贴现因子 $\\beta \\in (0,1)$ 进行贴现。\n\n在时期 1 的定价发生之前，一个竞争对手有 $p \\in [0,1]$ 的概率独立地进入市场。如果竞争对手进入，时期 1 将出现伯特兰竞争（Bertrand competition），两家企业都将价格定在边际成本 $c$，导致在位企业在时期 1 的利润为零。如果竞争对手没有进入（概率为 $1-p$），在位企业在时期 1 仍然是垄断者，并在该时期设定其利润最大化的价格。\n\n在位企业仅在时期 0 开始时选择时期 0 的价格 $p_0$，并且不能对未来的价格做出承诺。每个时期的产量等于在该时期所选价格下的需求量，生产和需求方面没有跨期联系。\n\n在位企业寻求最大化其在 $t \\in \\{0,1\\}$ 期间的预期贴现利润总和。\n\n推导最优时期 0 价格 $p_0^{\\ast}$ 作为 $A$、$B$ 和 $c$ 的函数的封闭形式表达式。以单一解析表达式的形式报告您的最终答案。不需要进行数值四舍五入。", "solution": "该问题要求推导一个在后续时期面临潜在进入的垄断者的最优时期 0 价格 $p_0^{\\ast}$。企业的目标是在两个时期 $t \\in \\{0, 1\\}$ 内最大化其预期贴现利润总和。\n\n首先，我们必须对问题陈述进行验证。\n\n**步骤 1：提取已知条件**\n- 时间时期：$t \\in \\{0,1\\}$\n- 直接需求函数：$q_t = A - B p_t$\n- 需求参数：$A > 0$, $B > 0$\n- 价格范围：$p_t \\in [0, A/B]$\n- 边际成本：$c$，常数，满足 $0 < c < A/B$\n- 固定成本：$0$\n- 贴现因子：$\\beta \\in (0,1)$\n- 竞争对手进入：发生在时期 1 定价之前。\n- 进入概率：$p \\in [0,1]$，独立于在位企业的行动。\n- 进入情况下的结果：时期 1 发生伯特兰竞争，$p_1=c$，在位企业时期 1 利润为 $0$。\n- 没有进入情况下的结果：在位企业在时期 1 是垄断者。\n- 选择变量：时期 0 价格，$p_0$。\n- 目标：最大化 $\\mathbb{E}[\\Pi_0 + \\beta \\Pi_1]$。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题是动态规划和产业组织理论中的一个标准练习。\n- **科学依据**：该模型基于已确立的微观经济学原理，包括垄断定价、伯特兰竞争和预期利润最大化。它是科学上合理的。\n- **良定性**：目标函数和选择变量被清晰定义。参数和随机元素均已指定。对进入概率使用“独立地”一词至关重要，因为它消除了时期 0 价格与进入可能性之间关系的任何潜在模糊性。这确保了问题是良定的。“反市场需求函数是线性的，由价格 $p_t$ 及其对应的需求量 $q_t = A - B p_t$ 给出”这一陈述的措辞稍有不精确，因为 $q_t(p_t)$ 是直接需求函数。然而，其数学关系是明确的，可以反转为 $p_t(q_t) = \\frac{A}{B} - \\frac{1}{B}q_t$，因此这不构成一个缺陷。\n- **客观性**：问题以精确、客观的数学语言陈述。\n\n**步骤 3：结论与行动**\n该问题是有效的。它在经济理论中是一个良定、自洽且可解的问题。我们继续进行求解。\n\n在位企业寻求最大化其总预期贴现利润 $\\mathbb{E}[\\Pi]$，其表达式为：\n$$\n\\mathbb{E}[\\Pi] = \\Pi_0 + \\beta \\mathbb{E}[\\Pi_1]\n$$\n其中 $\\Pi_0$ 是时期 0 的利润，$\\mathbb{E}[\\Pi_1]$ 是从时期 0 开始看的时期 1 的预期利润。这是一个动态问题，适合使用逆向归纳法（backward induction），从时期 1 开始求解。\n\n**时期 1 分析**\n时期 1 的利润取决于竞争对手进入这一随机事件。\n- 如果竞争对手进入（概率为 $p$），市场变为伯特兰双头垄断（Bertrand duopoly）。对于同质商品和相同的恒定边际成本 $c$，唯一的纳什均衡是两家企业都将价格设定为等于边际成本。因此，$p_1 = c$。在该状态下，在位企业的利润为 $\\Pi_1^{\\text{entry}} = (p_1 - c)q_1 = (c - c)q_1 = 0$。\n- 如果竞争对手没有进入（概率为 $1-p$），在位企业仍然是垄断者。它将设定时期 1 的价格 $p_1^M$ 以最大化其时期 1 的利润 $\\Pi_1^M$。时期 1 垄断者的利润函数为：\n$$\n\\Pi_1^M(p_1) = (p_1 - c)q_1 = (p_1 - c)(A - B p_1)\n$$\n为了找到最优垄断价格，我们对 $\\Pi_1^M(p_1)$ 关于 $p_1$ 求一阶导数，并令其等于零：\n$$\n\\frac{d\\Pi_1^M}{dp_1} = \\frac{d}{dp_1}(A p_1 - B p_1^2 - A c + B c p_1) = A - 2B p_1 + B c = 0\n$$\n求解 $p_1$：\n$$\n2B p_1 = A + B c \\implies p_1^M = \\frac{A + B c}{2B}\n$$\n二阶条件 $\\frac{d^2\\Pi_1^M}{dp_1^2} = -2B$，由于 $B > 0$ 故为负，这证实了此价格产生一个最大值。\n时期 1 垄断者对应的最大利润是：\n$$\n\\Pi_1^M = \\left(\\frac{A + B c}{2B} - c\\right)\\left(A - B\\frac{A + B c}{2B}\\right) = \\left(\\frac{A - B c}{2B}\\right)\\left(\\frac{A - B c}{2}\\right) = \\frac{(A - B c)^2}{4B}\n$$\n在进入事件发生之前计算的时期 1 预期利润，是两种状态下利润的加权平均值：\n$$\n\\mathbb{E}[\\Pi_1] = p \\cdot \\Pi_1^{\\text{entry}} + (1-p) \\cdot \\Pi_1^M = p \\cdot 0 + (1-p) \\frac{(A - B c)^2}{4B} = (1-p) \\frac{(A - B c)^2}{4B}\n$$\n\n**时期 0 分析**\n在位企业选择时期 0 的价格 $p_0$，以最大化总预期贴现利润。目标函数是：\n$$\n\\max_{p_0} \\mathbb{E}[\\Pi](p_0) = \\Pi_0(p_0) + \\beta \\mathbb{E}[\\Pi_1]\n$$\n代入 $\\Pi_0$ 和 $\\mathbb{E}[\\Pi_1]$ 的表达式：\n$$\n\\max_{p_0} \\left\\{ (p_0 - c)(A - B p_0) + \\beta (1-p) \\frac{(A - B c)^2}{4B} \\right\\}\n$$\n一个关键的观察是，$p_0$ 的选择对时期 1 的事件或利润没有影响。问题陈述指出竞争对手的进入是“独立”发生的，这意味着概率 $p$ 是一个外生参数，而不是 $p_0$ 的函数。因此，整个第二项 $\\beta \\mathbb{E}[\\Pi_1]$，相对于优化变量 $p_0$ 来说是一个常数。\n因此，最大化总预期贴现利润等同于最大化时期 0 的利润：\n$$\n\\max_{p_0} \\Pi_0(p_0) = \\max_{p_0} (p_0 - c)(A - B p_0)\n$$\n这是一个标准的单时期垄断定价问题。该利润函数的函数形式与为时期 1 垄断者求解的函数形式相同。一阶条件是：\n$$\n\\frac{d\\Pi_0}{dp_0} = A - 2B p_0 + B c = 0\n$$\n求解最优时期 0 价格 $p_0^{\\ast}$：\n$$\np_0^{\\ast} = \\frac{A + B c}{2B}\n$$\n这也可以写作 $p_0^{\\ast} = \\frac{A}{2B} + \\frac{c}{2}$。参数 $\\beta$ 和 $p$ 虽然影响了企业预期利润流的总价值，但由于缺少任何将时期 0 的行动与时期 1 的结果联系起来的渠道（例如限制性定价或学习），它们并不影响时期 0 的最优定价决策。", "answer": "$$\\boxed{\\frac{A + Bc}{2B}}$$"}, {"introduction": "在之前练习的基础上，这个问题引入了一个更复杂、更现实的跨期权衡：品牌稀释。今天销售过多的奢侈品可能会增加当前收入，但会损害品牌的独家形象，从而影响未来的销售。这个动手实践将挑战你对一个动态优化问题进行建模和求解，其中今天的行为直接影响明天的市场状况，这要求你处理一个更复杂的目标函数，以在短期利润和长期价值之间取得平衡。[@problem_id:2422445]", "id": "2422445", "problem": "考虑一个生产单一奢侈品的垄断者，其生产活动分两个离散时期进行，时期索引为 $t \\in \\{1,2\\}$。在每个时期 $t$，该产品的反需求曲线是线性的，由 $p_t(q_t) = A_t - B_t q_t$ 给出，其中 $A_t > 0$ 和 $B_t > 0$ 是参数，$q_t \\ge 0$ 是时期 $t$ 的销售数量。该公司的边际成本为常数 $c \\ge 0$，且在两个时期内保持不变。收入和成本以任意货币单位计价。时间没有物理单位，是无量纲的。跨期权衡由一个贴现因子 $\\beta \\in (0,1)$ 进行折现，该因子以小数（而非百分比）表示。\n\n品牌稀释：大量销售奢侈品可能会损害品牌形象，并降低未来的支付意愿。我们将此效应建模为时期 $2$ 需求截距的向下移动，该移动取决于时期 $1$ 的销售数量超出某个声望阈值数量 $q_{\\text{bar}} \\ge 0$ 的程度。具体来说，时期 $2$ 的截距为\n$$\nA_2^{\\text{eff}}(q_1) = A_2 - d \\cdot \\max\\{0,\\, q_1 - q_{\\text{bar}}\\},\n$$\n其中 $d \\ge 0$ 是稀释敏感度。如果 $q_1 \\le q_{\\text{bar}}$，则没有稀释效应，$A_2^{\\text{eff}}(q_1) = A_2$；如果 $q_1 > q_{\\text{bar}}$，截距以斜率 $-d$ 线性减小。\n\n该垄断者选择时期 $1$ 的 $q_1$ 和时期 $2$ 的 $q_2$ 以最大化利润的贴现总和。时期 $t$ 的利润为\n$$\n\\pi_t(q_t) = \\big(p_t(q_t) - c\\big)\\, q_t = \\big(A_t - B_t q_t - c\\big)\\, q_t,\n$$\n需要注意的是，在时期 $2$ 中，相关的截距是 $A_2^{\\text{eff}}(q_1)$，即 $p_2(q_2) = A_2^{\\text{eff}}(q_1) - B_2 q_2$。总目标函数为\n$$\n\\Pi(q_1,q_2) = \\pi_1(q_1) + \\beta \\, \\pi_2(q_2),\n$$\n约束条件为 $q_1 \\ge 0$ 和 $q_2 \\ge 0$，同时需求上的非负价格隐含条件确保在时期 $t$ 有 $q_t \\le A_t/B_t$，其中时期 $2$ 使用 $A_2^{\\text{eff}}(q_1)$ 代替 $A_2$。\n\n推导与计算的基本原理：\n- 在线性需求下，垄断者在时期 $t$ 的静态利润最大化问题，对于给定的截距 $A$、斜率 $B$ 和成本 $c$，其一阶条件会导出经过充分检验的结果 $q^\\star = \\max\\{0,\\, (A - c)/(2B)\\}$ 和 $p^\\star = (A + c)/2$，前提是 $A > c$。\n- 未来的收益通过将时期 $2$ 的利润乘以 $\\beta$ 来进行贴现。\n\n计算任务：\n- 以纯数学方式进行。您必须通过逆向归纳法计算子博弈完美结果：对于任意固定的 $q_1$，时期 $2$ 的垄断者会根据给定的 $A_2^{\\text{eff}}(q_1)$ 最优地选择 $q_2$；预见到这一点，公司会选择 $q_1$ 以最大化总贴现利润。\n- 假设公司不能以负价格销售，因此 $q_1 \\in [0,\\, A_1/B_1]$，而在时期 $2$，当 $A_2^{\\text{eff}}(q_1) > 0$ 时，$q_2 \\in [0,\\, A_2^{\\text{eff}}(q_1)/B_2]$；否则 $q_2 = 0$。\n- 对以下每个测试用例，计算唯一的利润最大化组合 $(q_1^\\star, q_2^\\star)$，以及相应的均衡价格 $p_1^\\star$ 和 $p_2^\\star$，和总贴现利润 $\\Pi^\\star = \\pi_1(q_1^\\star) + \\beta \\pi_2(q_2^\\star)$。所有标量输出必须是实数。\n\n测试套件（每个元组为 $(A_1, B_1, A_2, B_2, c, q_{\\text{bar}}, d, \\beta)$）：\n- 案例 1：$(A_1, B_1, A_2, B_2, c, q_{\\text{bar}}, d, \\beta) = (100,\\, 1,\\, 120,\\, 1.5,\\, 10,\\, 20,\\, 0.8,\\, 0.95)$。\n- 案例 2：$(A_1, B_1, A_2, B_2, c, q_{\\text{bar}}, d, \\beta) = (100,\\, 1,\\, 120,\\, 1.5,\\, 10,\\, 80,\\, 0.8,\\, 0.95)$。\n- 案例 3：$(A_1, B_1, A_2, B_2, c, q_{\\text{bar}}, d, \\beta) = (50,\\, 1,\\, 8,\\, 1.2,\\, 10,\\, 20,\\, 1.0,\\, 0.9)$。\n- 案例 4：$(A_1, B_1, A_2, B_2, c, q_{\\text{bar}}, d, \\beta) = (80,\\, 1,\\, 100,\\, 0.5,\\, 20,\\, 15,\\, 3.5,\\, 0.9)$。\n\n输出规范：\n- 对每个测试用例，输出列表 $[q_1^\\star, q_2^\\star, p_1^\\star, p_2^\\star, \\Pi^\\star]$，其中每个数字四舍五入到 $6$ 位小数。\n- 您的程序应生成单行输出，其中包含所有案例的结果，以一个包含此类列表的单一列表形式呈现，按上述测试套件的顺序排列，格式为用方括号括起来的逗号分隔列表。\n- 不应从标准输入读取任何内容。所有计算必须在程序内部针对给定案例执行，并且只应打印所需的单行输出。", "solution": "该问题要求计算一个垄断者在两个时期内的利润最大化产量、价格和总利润，同时考虑品牌稀释效应。该问题在微观经济学理论中定义明确且具有科学依据。我们将使用逆向归纳法来求解，以找到子博弈完美均衡。\n\n垄断者的总利润 $\\Pi$ 是时期 1 和时期 2 利润的贴现总和：\n$$ \\Pi(q_1, q_2) = \\pi_1(q_1) + \\beta \\pi_2(q_2) $$\n其中 $\\pi_t(q_t) = (p_t(q_t) - c)q_t$，$p_t(q_t) = A_t - B_t q_t$ 是反需求函数，$c$ 是不变的边际成本，$\\beta$ 是贴现因子。品牌稀释效应通过一个有效的时期 2 需求截距 $A_2^{\\text{eff}}(q_1)$ 来建模，该截距取决于时期 1 的产量 $q_1$：\n$$ A_2^{\\text{eff}}(q_1) = A_2 - d \\cdot \\max\\{0, q_1 - q_{\\text{bar}}\\} $$\n此处，$d$ 是稀释敏感度，$q_{\\text{bar}}$ 是一个声望销售阈值。\n\n**步骤 1：时期 2 的优化（逆向归纳）**\n\n在时期 2，数量 $q_1$ 已经确定。垄断者面临一个静态优化问题，其需求截距为给定的 $A_2^{\\text{eff}}(q_1)$。时期 2 的利润为 $\\pi_2(q_2) = (A_2^{\\text{eff}}(q_1) - B_2 q_2 - c)q_2$。\n关于 $q_2$ 最大化 $\\pi_2$ 的一阶条件得出了标准的垄断产量：\n$$ q_2^\\star(q_1) = \\max\\left\\{0, \\frac{A_2^{\\text{eff}}(q_1) - c}{2B_2}\\right\\} $$\n由此产生的时期 2 的最大化利润，作为 $q_1$ 的函数，是：\n$$ \\pi_2^\\star(q_1) = \\frac{\\left(\\max\\{0, A_2^{\\text{eff}}(q_1) - c\\}\\right)^2}{4B_2} $$\n\n**步骤 2：时期 1 的优化**\n\n预见到时期 2 的最优反应，公司在时期 1 选择 $q_1 \\ge 0$ 以最大化总贴现利润函数，该函数现在仅依赖于 $q_1$：\n$$ \\Pi(q_1) = (A_1 - B_1 q_1 - c)q_1 + \\beta \\pi_2^\\star(q_1) $$\n代入 $\\pi_2^\\star(q_1)$ 和 $A_2^{\\text{eff}}(q_1)$ 的表达式：\n$$ \\Pi(q_1) = (A_1 - B_1 q_1 - c)q_1 + \\frac{\\beta}{4B_2} \\left(\\max\\{0, A_2 - c - d \\cdot \\max\\{0, q_1 - q_{\\text{bar}}\\}\\}\\right)^2 $$\n该目标函数是连续但分段可微的。不可微点（拐点）出现在 $q_1 = q_{\\text{bar}}$ 处，以及可能出现在 $A_2 - c - d(q_1 - q_{\\text{bar}}) = 0$ 的地方，即 $q_1 = q_{\\text{crit}} \\equiv q_{\\text{bar}} + (A_2-c)/d$（对于 $d > 0$ 和 $A_2 > c$）。函数 $\\Pi(q_1)$ 由最多三个二次分段组成。\n\n**步骤 3：寻找全局最大值**\n\n为找到这个连续分段函数的全局最大值，我们必须在所有候选点上对其进行求值。这些点包括每个平滑段内导数为零的点（驻点）以及拐点本身。最优数量 $q_1^\\star$ 的候选集构建如下：\n1.  **边界点和拐点**：点 $q_1=0$（非负约束）、声望阈值 $q_1 = q_{\\text{bar}}$，以及稀释至零利润点 $q_1 = q_{\\text{crit}}$ 都是最优值的潜在候选点。\n2.  **驻点**：我们通过在每个平滑区域内将导数 $\\frac{d\\Pi}{dq_1}$ 设为零来找到驻点。\n    -   对于 $0 \\le q_1 < q_{\\text{bar}}$，目标函数简化，驻点是标准的静态垄断数量 $q_{S1} = (A_1-c)/(2B_1)$。\n    -   对于 $q_{\\text{bar}} < q_1 < q_{\\text{crit}}$，导数会得到一个不同的驻点，我们称之为 $q_{S2}$：\n        $$ q_{S2} = \\frac{2B_2(A_1 - c) - \\beta d(A_2 - c + dq_{\\text{bar}})}{4B_1B_2 - \\beta d^2} $$\n        该点仅在其有效区域内且分母 $4B_1B_2 - \\beta d^2$ 不为零时才为候选点。如果分母为负，目标函数在该段内是局部凸的，最大值必须位于其边界（$q_{\\text{bar}}$ 或 $q_{\\text{crit}}$）上。\n    -   对于 $q_1 > q_{\\text{crit}}$，时期 2 的利润为零。目标函数再次变为时期 1 的利润函数，驻点为 $q_{S1}$。\n\n算法方法是构建一个包含所有这些候选点的集合，确保包括所有拐点和所有相关的可行（$q_1 \\ge 0$）驻点。然后，我们在每个候选点上评估总利润函数 $\\Pi(q_1)$。产生最高利润的 $q_1$ 值即为最优数量 $q_1^\\star$。\n\n**步骤 4：计算最终结果**\n\n一旦确定了最优的 $q_1^\\star$，其余的均衡值计算如下：\n-   时期 1 价格：$p_1^\\star = A_1 - B_1 q_1^\\star$。\n-   时期 2 有效截距：$A_{2, \\text{eff}}^\\star = A_2 - d \\cdot \\max\\{0, q_1^\\star - q_{\\text{bar}}\\}$。\n-   时期 2 数量：$q_2^\\star = \\max\\{0, (A_{2, \\text{eff}}^\\star - c) / (2B_2)\\}$。\n-   时期 2 价格：如果 $q_2^\\star > 0$，$p_2^\\star = (A_{2, \\text{eff}}^\\star + c) / 2$。如果 $q_2^\\star = 0$，市场出清价格是抑制价格（choke price）$p_2^\\star = A_{2, \\text{eff}}^\\star$。\n-   总贴现利润：$\\Pi^\\star = (p_1^\\star - c)q_1^\\star + \\beta (p_2^\\star - c)q_2^\\star$。\n\n这一系统性步骤保证了对于给定的问题结构，能够找到唯一的利润最大化结果。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the two-period monopoly problem with brand dilution for a suite of test cases.\n    \"\"\"\n    test_cases = [\n        # (A1, B1, A2, B2, c, q_bar, d, beta)\n        (100.0, 1.0, 120.0, 1.5, 10.0, 20.0, 0.8, 0.95),\n        (100.0, 1.0, 120.0, 1.5, 10.0, 80.0, 0.8, 0.95),\n        (50.0, 1.0, 8.0, 1.2, 10.0, 20.0, 1.0, 0.9),\n        (80.0, 1.0, 100.0, 0.5, 20.0, 15.0, 3.5, 0.9),\n    ]\n\n    all_results = []\n\n    for params in test_cases:\n        result = _solve_single_case(params)\n        all_results.append([f\"{x:.6f}\" for x in result])\n\n    # Format the final output string as a list of lists.\n    output_str = \"[\" + \",\".join([f\"[{','.join(res)}]\" for res in all_results]) + \"]\"\n    print(output_str)\n\ndef _calculate_total_profit(q1, params):\n    \"\"\"\n    Helper function to calculate total discounted profit for a given q1.\n    \"\"\"\n    A1, B1, A2, B2, c, q_bar, d, beta = params\n\n    if q1 < 0:\n        return -np.inf\n\n    # Period 1 profit\n    pi1 = (A1 - B1 * q1 - c) * q1\n    \n    # Period 2 effective demand intercept\n    A2_eff = A2 - d * max(0, q1 - q_bar)\n\n    # Optimal period 2 profit\n    pi2_opt = 0.0\n    if A2_eff > c:\n        # Standard monopoly profit formula: (A-c)^2 / (4B)\n        pi2_opt = (A2_eff - c)**2 / (4 * B2)\n\n    return pi1 + beta * pi2_opt\n\n\ndef _solve_single_case(params):\n    \"\"\"\n    Solves a single instance of the monopolist problem.\n    \"\"\"\n    A1, B1, A2, B2, c, q_bar, d, beta = params\n\n    # The optimal q1 must be one of the critical points of the piecewise objective function.\n    # We collect all such candidates and evaluate the profit at each.\n    candidates = {0.0, q_bar}\n    \n    # Candidate from static profit maximization in period 1\n    if A1 > c:\n        q_s1 = (A1 - c) / (2 * B1)\n        candidates.add(q_s1)\n\n    # Candidates related to the dilution mechanism\n    if d > 0 and A2 > c:\n        # Kink point where period 2 profit becomes zero due to dilution\n        q_crit = q_bar + (A2 - c) / d\n        candidates.add(q_crit)\n        \n        # Stationary point in the dilution region (q_bar < q1 < q_crit)\n        denom = 4 * B1 * B2 - beta * d**2\n        if abs(denom) > 1e-12: # Avoid division by zero\n            num = 2 * B2 * (A1 - c) - beta * d * (A2 - c + d * q_bar)\n            q_s2 = num / denom\n            candidates.add(q_s2)\n\n    max_profit = -np.inf\n    q1_star = 0.0\n\n    # Feasibility limit for q1 (where price becomes zero)\n    q1_max_feasible = A1 / B1 if B1 > 0 else np.inf\n\n    for q1_cand in candidates:\n        # Only consider physically and economically meaningful candidates\n        if q1_cand < 0 or q1_cand > q1_max_feasible + 1e-9:\n            continue\n        \n        current_profit = _calculate_total_profit(q1_cand, params)\n        \n        if current_profit > max_profit:\n            max_profit = current_profit\n            q1_star = q1_cand\n\n    # Calculate final equilibrium values based on the optimal q1_star\n    p1_star = A1 - B1 * q1_star\n    A2_eff_star = A2 - d * max(0, q1_star - q_bar)\n    \n    if A2_eff_star > c:\n        q2_star = (A2_eff_star - c) / (2 * B2)\n        p2_star = (A2_eff_star + c) / 2\n    else:\n        q2_star = 0.0\n        # If no production, the market clearing price is the choke price\n        p2_star = A2_eff_star\n\n    # Recalculate final total profit for precision\n    pi1_star = (p1_star - c) * q1_star\n    pi2_star = (p2_star - c) * q2_star\n    Pi_star = pi1_star + beta * pi2_star\n\n    return [q1_star, q2_star, p1_star, p2_star, Pi_star]\n\nif __name__ == \"__main__\":\n    solve()\n```"}]}