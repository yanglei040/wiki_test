{"hands_on_practices": [{"introduction": "在深入研究复杂的算法之前，建立对投资组合理论原理的深刻直觉至关重要。本练习 [@problem_id:2409817] 是一个思想实验，旨在阐明多样化的力量。通过分析加入一个高风险、高回报的“彩票式”资产所带来的质性影响，你将更深刻地理解资产的价值不仅取决于其自身特性，更取决于它与现有投资组合的相关性，以及这将如何拓展有效前沿。", "id": "2409817", "problem": "考虑一个由 $N$ 个风险资产组成的投资域，其期望超额收益向量为 $\\boldsymbol{\\mu} \\in \\mathbb{R}^N$，正定协方差矩阵为 $\\boldsymbol{\\Sigma} \\in \\mathbb{R}^{N \\times N}$。投资组合为完全投资，且可以进行空头交易，即投资组合权重 $\\boldsymbol{w} \\in \\mathbb{R}^N$ 满足 $\\mathbf{1}^\\top \\boldsymbol{w} = 1$，其中 $\\mathbf{1}$ 是所有分量为1的$N$维向量。均值-方差有效前沿是满足以下条件的投资组合的轨迹：对于每个目标期望超额收益 $\\mu^\\star \\in \\mathbb{R}$，在约束条件 $\\boldsymbol{\\mu}^\\top \\boldsymbol{w} = \\mu^\\star$ 和 $\\mathbf{1}^\\top \\boldsymbol{w} = 1$ 下，最小化投资组合方差 $\\boldsymbol{w}^\\top \\boldsymbol{\\Sigma} \\boldsymbol{w}$。\n\n现在，通过增加一个额外的风险资产 $L$ 来扩展该投资域。资产 $L$ 的期望超额收益为 $\\mu_L \\in \\mathbb{R}$，方差为 $\\sigma_L^2 \\in \\mathbb{R}_{++}$，与原始 $N$ 个资产的协方差向量为 $\\boldsymbol{c} \\in \\mathbb{R}^N$。假设：\n- $\\mu_L$ 的绝对值严格大于 $\\boldsymbol{\\mu}$ 的任何分量的绝对值，\n- $\\sigma_L^2$ 严格大于 $\\boldsymbol{\\Sigma}$ 的最大特征值，\n- 资产 $L$ 与原始资产之间的两两相关性一致地小，即存在 $\\bar{\\rho} \\in (0,1)$ 且 $\\bar{\\rho} \\leq 0.2$，使得对于每个 $i \\in \\{1,\\dots,N\\}$，都有 $\\lvert c_i \\rvert \\leq \\bar{\\rho} \\,\\sigma_L \\,\\sigma_i$，其中 $\\sigma_i^2$ 表示资产 $i$ 的方差。\n\n在这些假设下，比较添加资产 $L$ 前后的有效前沿。哪个陈述最能描述“彩票型”资产 $L$ 对有效前沿形状和规模的影响？\n\nA. 在每个目标期望收益水平上，新的有效前沿都严格优于旧的有效前沿，即对于所有的 $\\mu^\\star$，可达到的最小方差都严格低于之前。\n\nB. 新的有效前沿弱势优于旧的有效前沿；它绝不会位于旧前沿的上方，并在最小方差端附近与之重合，但在足够高的目标期望收益处明显向外扩展。在两个投资域中，均值-标准差平面上的有效前沿都是一条凸双曲线。\n\nC. 因为资产 $L$ 的方差非常高，新的有效前沿变得非凸并带有一个拐点，并且对于给定的目标期望收益，可能表现出多个局部方差最小值。\n\nD. 扩展后投资域中的最小方差投资组合必然会给资产 $L$ 分配一个大的正权重，以利用其高期望收益，同时通过分散化来降低方差，从而使整个前沿大幅向下移动。", "solution": "用户提供了一个关于均值-方差投资组合优化领域的问题。我将首先验证问题陈述的有效性，然后进行详细解答。\n\n### 第1步：提取已知条件\n- **原始投资域**：$N$ 个风险资产，其期望超额收益向量为 $\\boldsymbol{\\mu} \\in \\mathbb{R}^N$，正定协方差矩阵为 $\\boldsymbol{\\Sigma} \\in \\mathbb{R}^{N \\times N}$。\n- **投资组合约束**：投资组合为完全投资，权重 $\\boldsymbol{w} \\in \\mathbb{R}^N$ 满足 $\\mathbf{1}^\\top \\boldsymbol{w} = 1$。允许卖空。\n- **有效前沿定义**：对于给定的目标期望超额收益 $\\mu^\\star = \\boldsymbol{\\mu}^\\top \\boldsymbol{w}$，最小化方差 $\\boldsymbol{w}^\\top \\boldsymbol{\\Sigma} \\boldsymbol{w}$ 的投资组合的轨迹。\n- **扩展后投资域**：增加了一个风险资产 $L$。\n- **资产 $L$ 的属性**：\n    - 期望超额收益：$\\mu_L \\in \\mathbb{R}$，且对于所有 $i \\in \\{1,\\dots,N\\}$，有 $|\\mu_L| > |\\mu_i|$。\n    - 方差：$\\sigma_L^2 \\in \\mathbb{R}_{++}$（严格为正），且 $\\sigma_L^2 > \\lambda_{\\text{max}}(\\boldsymbol{\\Sigma})$，其中 $\\lambda_{\\text{max}}(\\boldsymbol{\\Sigma})$ 是 $\\boldsymbol{\\Sigma}$ 的最大特征值。\n    - 与原始资产的协方差：$\\boldsymbol{c} \\in \\mathbb{R}^N$。\n    - 相关性属性：存在 $\\bar{\\rho} \\in (0,1)$ 且 $\\bar{\\rho} \\leq 0.2$，使得对于每个 $i \\in \\{1,\\dots,N\\}$，有 $|c_i| \\leq \\bar{\\rho} \\, \\sigma_L \\, \\sigma_i$，其中 $\\sigma_i^2 = \\boldsymbol{\\Sigma}_{ii}$。\n- **问题**：描述增加资产 $L$ 对有效前沿的影响。\n\n### 第2步：使用提取的已知条件进行验证\n该问题在标准的 Markowitz 均值-方差优化框架内是定义明确的。\n- **科学依据**：所使用的概念——期望收益、协方差、投资组合权重和有效前沿——都是现代投资组合理论的基础。该优化问题是一个标准的二次规划问题。问题在科学上是合理的。\n- **适定性**：原始问题涉及在先行约束下最小化一个严格凸的二次型（$\\boldsymbol{w}^\\top \\boldsymbol{\\Sigma} \\boldsymbol{w}$，因为 $\\boldsymbol{\\Sigma}$ 是正定的）。这保证了对于每个可达到的目标收益 $\\mu^\\star$ 都有唯一解。对于扩展后的投资域，新的协方差矩阵为 $\\boldsymbol{\\Sigma}_{\\text{aug}} = \\begin{pmatrix} \\boldsymbol{\\Sigma} & \\boldsymbol{c} \\\\ \\boldsymbol{c}^\\top & \\sigma_L^2 \\end{pmatrix}$。为使问题保持适定性，$\\boldsymbol{\\Sigma}_{\\text{aug}}$ 必须是正定的。$\\sigma_L^2$ 很大且协方差 $\\boldsymbol{c}$ 很小的条件使得舒尔补 $\\sigma_L^2 - \\boldsymbol{c}^\\top \\boldsymbol{\\Sigma}^{-1} \\boldsymbol{c}$ 很可能为正，这保证了 $\\boldsymbol{\\Sigma}_{\\text{aug}}$ 是正定的。问题是适定的。\n- **客观性和清晰度**：问题使用了标准的数学术语。描述性术语“彩票型”通过高期望收益绝对值和高方差的数学属性得到了即时和客观的定义。问题是客观且陈述清晰的。\n- **完整性和一致性**：问题为定性分析提供了所有必要的信息。在所提供的数据或假设中没有明显的矛盾。\n\n### 第3步：结论与行动\n问题陈述有效。我现在将进行推导和选项评估。\n\n### 推导与选项分析\n\n有效前沿是在给定期望收益水平下提供最小可能方差的投资组合集合。原始投资域包含 $N$ 个资产，扩展后的投资域包含 $N+1$ 个资产。\n\n**1. 扩展的一般原则**\n由 $N+1$ 个资产可以构成的投资组合集合是可由原始 $N$ 个资产构成的投资组合集合的超集。任何来自原始投资域的投资组合 $\\boldsymbol{w}$ 均可在扩展后的投资域中表示为 $\\boldsymbol{w}_{\\text{aug}} = (\\boldsymbol{w}^\\top, 0)^\\top$。这意味着对于原始投资域中任何可达到的目标期望收益 $\\mu^\\star$，相同的投资组合（以及因此相同的方差）在扩展后的投资域中也是可达到的。扩展后投资域中的优化过程将找到一个方差小于或等于该值的投资组合。\n因此，对于任何 $\\mu^\\star$，新的最小方差 $\\sigma_{\\text{new}}^2(\\mu^\\star)$ 必须小于或等于旧的最小方差 $\\sigma_{\\text{old}}^2(\\mu^\\star)$。\n$$\n\\sigma_{\\text{new}}^2(\\mu^\\star) \\leq \\sigma_{\\text{old}}^2(\\mu^\\star)\n$$\n这种关系被称为弱势占优。在标准的均值-标准差平面中，新的有效前沿位于旧的有效前沿的左侧或其上。\n\n**2. 有效前沿的形状**\n在一个资产投资域中，当投资组合是通过为给定均值回报最小化方差而形成，且仅受完全投资约束（$\\mathbf{1}^\\top \\boldsymbol{w} = 1$）时，最终的有效前沿在均值-方差（$\\mu^\\star, \\sigma^2$）平面上是一条抛物线。其方程形式为 $\\sigma^2 = a(\\mu^\\star)^2 + b\\mu^\\star + c$，其中常数 $a, b, c$ 由资产参数确定，且 $a > 0$。在均值-标准差（$\\mu^\\star, \\sigma$）平面上，这个点的轨迹构成了双曲线的上半部分，它是一条凸曲线。这是一个标准结果，并适用于原始和扩展后的投资域，因为问题的底层数学结构没有改变。\n\n**3. 资产 L 特定属性的影响**\n资产 $L$ 被描述为“彩票型”资产，具有高期望收益绝对值 $|\\mu_L|$ และ高方差 $\\sigma_L^2$，但与其它资产的相关性较低。\n\n- **对最小方差投资组合 (MVP) 的影响**：全局最小方差投资组合是有效前沿上具有最低可能方差的投资组合。它的构建仅依赖于协方差矩阵和全1向量，而不依赖于期望收益。其目标是纯粹的方差最小化。像资产 $L$ 这样具有极高方差的资产，对于 MVP 来说通常没有吸引力。虽然其低相关性提供了分散化收益，但非常大的 $\\sigma_L^2$ 项是一个显著的惩罚。因此，资产 $L$ 在新 MVP 中的最优权重 $w_{L, \\text{MVP}}$ 将会很小。新资产的权重小，导致 MVP 的方差和期望收益变化也很小。因此，新双曲线的顶点将非常接近旧双曲线的顶点。\n\n- **对高收益投资组合的影响**：为了实现一个绝对值较大的目标期望收益 $\\mu^\\star$（接近 $\\mu_L$），投资组合必须在具有高期望收益的资产上持有显著的头寸。在扩展后的投资域中，这个资产就是 $L$。随着 $|\\mu^\\star|$ 的增加，分配给资产 $L$ 的权重也必须增加。资产 $L$ 与原始 $N$ 个资产的低相关性提供了可观的分散化收益，随着资产 $L$ 权重的增加，这种收益变得更加明显。这意味着，对于高目标收益，包含资产 $L$ 所带来的方差降低将是显著的。在这些高收益水平上，新的前沿将显著地位于旧前沿的左侧（即方差更低）。\n\n**4. 严格占优 vs. 弱势占优**\n新的前沿严格优于旧的前沿（$\\sigma_{\\text{new}}^2(\\mu^\\star) < \\sigma_{\\text{old}}^2(\\mu^\\star)$），除非资产 $L$ 是冗余的，或者恰好完美地落在原始有效前沿上。如果扩展后的协方差矩阵 $\\boldsymbol{\\Sigma}_{\\text{aug}}$ 是正定的，那么资产就是非冗余的，这一点被问题隐含地假设了。新的前沿和旧的前沿将在一个特定的目标回报 $\\mu^\\star$ 上重合，当且仅当在该 $\\mu^\\star$ 下，扩展后投资域中的最优投资组合在资产 $L$ 上的权重为零。这种情况只在资产 $L$ 满足一个由原始前沿上的投资组合决定的特定线性定价关系时才会发生。这种情况最多只对一个 $\\mu^\\star$ 值成立（除非资产L是冗余的）。因此，声称在*每个*目标回报上都严格占优是一个过于强烈的陈述，因为单一点的相切是可能的。\n\n### 选项评估\n\n**A. 在每个目标期望收益水平上，新的有效前沿都严格优于旧的有效前沿，即对于所有的 $\\mu^\\star$，可达到的最小方差都严格低于之前。**\n**不正确**。如上所述，虽然新的前沿几乎在所有地方都严格更优，但新旧前沿之间在单一点上相切在数学上是可能的。因此，不能声称在*每个*点都严格占优。这个陈述过于强烈。\n\n**B. 新的有效前沿弱势优于旧的有效前沿；它绝不会位于旧前沿的上方，并在最小方差端附近与之重合，但在足够高的目标期望收益处明显向外扩展。在两个投资域中，均值-标准差平面上的有效前沿都是一条凸双曲线。**\n**正确**。这个陈述准确地抓住了分析的所有关键方面：\n- “弱势优于旧的有效前沿；它绝不会位于旧前沿的上方”：正确，这是扩展的一般原则。\n- “在最小方差端附近与之重合”：这是一个定性描述。如前所论证，资产 $L$ 在 MVP 中的权重很小，因此两条前沿在其顶点附近会非常接近。“重合”可能被宽泛地用来表示“相切或非常接近”，这抓住了资产 $L$ 对低风险投资组合的微小影响。\n- “在足够高的目标期望收益处明显向外扩展”：正确，高收益、低相关性的资产 $L$ 的好处在追求高收益时最为明显。\n- “有效前沿...是凸双曲线”：正确，这是允许卖空时有效前沿的标准形状。\n\n**C. 因为资产 $L$ 的方差非常高，新的有效前沿变得非凸并带有一个拐点，并且对于给定的目标期望收益，可能表现出多个局部方差最小值。**\n**不正确**。该问题是一个带有正定协方差矩阵的约束二次最小化问题。这类问题为每个目标收益产生唯一的全局最小值和一个凸前沿。拐点和非凸性是由不同类型的约束（如无卖空约束）或不同的目标函数引起的，这些在此问题中都不存在。\n\n**D. 扩展后投资域中的最小方差投资组合必然会给资产 $L$ 分配一个大的正权重，以利用其高期望收益，同时通过分散化来降低方差，从而使整个前沿大幅向下移动。**\n**不正确**。这个陈述包含两个基本错误。首先，最小方差投资组合是为了最小化方差而构建的，与期望收益无关；它不会“利用高期望收益”。其次，因为资产 $L$ 的方差非常高，它在 MVP 中的权重将是小的，而不是大的。大的权重会增加方差，这与 MVP 的目标相反。因此，前沿在其顶点附近的移动将是小的，而不是大的。", "answer": "$$\\boxed{B}$$"}, {"introduction": "现在，让我们从理论转向在现实条件下进行实际操作。大多数现实世界的投资授权都禁止卖空，这一约束从根本上改变了有效前沿的形状。这个动手练习 [@problem_id:2383613] 将引导你完成计算这一受约束前沿的过程，引入“角点投资组合”的关键概念，并展示整个前沿是如何由这些角点组合而成的。", "id": "2383613", "problem": "考虑一个带有无卖空约束的均值-方差投资组合选择问题。设有$n$种风险资产，其期望收益向量为$\\boldsymbol{\\mu} \\in \\mathbb{R}^n$，正定协方差矩阵为$\\boldsymbol{\\Sigma} \\in \\mathbb{R}^{n \\times n}$。一个投资组合由权重$\\boldsymbol{w} \\in \\mathbb{R}^n$表示，满足$\\boldsymbol{1}^\\top \\boldsymbol{w} = 1$和$\\boldsymbol{w} \\succeq \\boldsymbol{0}$。对于一个目标期望收益$r \\in \\mathbb{R}$，均值-方差有效投资组合通过求解以下凸优化问题得到：在满足约束条件$\\boldsymbol{1}^\\top \\boldsymbol{w} = 1$、$\\boldsymbol{\\mu}^\\top \\boldsymbol{w} = r$和$\\boldsymbol{w} \\succeq \\boldsymbol{0}$的情况下，最小化方差$ \\boldsymbol{w}^\\top \\boldsymbol{\\Sigma} \\boldsymbol{w}$。\n\n角点投资组合（也称临界投资组合）被定义为在目标收益为$r$时的有效投资组合，在该点，有效不等式约束的集合发生变化，即随着$r$的变化，$\\boldsymbol{w}$的至少一个分量达到$0$或从$0$变为正数。在两个相邻的角点投资组合之间，权重严格为正的资产集合保持不变。\n\n您的任务是：\n- 从上述基本定义出发，实现一个算法，该算法能够：\n  1. 在$\\boldsymbol{1}^\\top \\boldsymbol{w} = 1$和$\\boldsymbol{w} \\succeq \\boldsymbol{0}$的约束下，计算最小方差投资组合，并记录其期望收益$r_{\\mathrm{mv}} = \\boldsymbol{\\mu}^\\top \\boldsymbol{w}_{\\mathrm{mv}}$。\n  2. 通过在一个$r$值的网格上求解在$\\boldsymbol{1}^\\top \\boldsymbol{w} = 1$、$\\boldsymbol{\\mu}^\\top \\boldsymbol{w} = r$和$\\boldsymbol{w} \\succeq \\boldsymbol{0}$约束下的方差最小化问题，构建目标收益$r \\in [r_{\\mathrm{mv}}, \\max_i \\mu_i]$范围内的有效前沿。\n  3. 通过检测有效资产集（严格正权重的资产索引）发生变化的收益水平来识别角点投资组合。对每个检测到的变化点，通过对$r$进行二分法来精确其位置，使变化点在$r$上的定位容差在$10^{-6}$以内。\n  4. 通过计算证明以下性质：对于任何目标收益为$r$的有效投资组合，如果$r$位于两个相邻角点投资组合的目标收益$r_{\\ell}$和$r_u$之间（其中$r_{\\ell} \\le r \\le r_u$），则其最优权重$\\boldsymbol{w}(r)$在数值容差范围内等于一个凸组合$\\tau \\boldsymbol{w}(r_u) + (1-\\tau)\\boldsymbol{w}(r_\\ell)$，其中$\\tau \\in [0,1]$的选择使得组合后的投资组合的期望收益为$r$。\n- 在您的算法中，请使用以下容差约定：\n  - 在确定有效集时，将任何小于或等于$10^{-8}$的权重视为零。\n  - 在检查两个权重向量是否相等时，接受的最大绝对偏差至多为$5 \\times 10^{-4}$。\n\n您必须实现您的算法，并将其应用于以下测试套件，其中每个测试用例指定了$(\\boldsymbol{\\mu}, \\boldsymbol{\\Sigma})$：\n\n- 测试用例 1（两种资产）：\n  - $\\boldsymbol{\\mu} = [\\,0.08,\\, 0.12\\,]$。\n  - $\\boldsymbol{\\Sigma} = \\begin{bmatrix} 0.04 & 0.006 \\\\ 0.006 & 0.09 \\end{bmatrix}$。\n\n- 测试用例 2（三种资产，其中一种被构造为劣势资产）：\n  - $\\boldsymbol{\\mu} = [\\,0.06,\\, 0.10,\\, 0.03\\,]$。\n  - $\\boldsymbol{\\Sigma} = \\begin{bmatrix}\n  0.0422 & 0.0134 & 0.0418 \\\\\n  0.0134 & 0.0343 & 0.0276 \\\\\n  0.0418 & 0.0276 & 0.1062\n  \\end{bmatrix}$。\n\n- 测试用例 3（三种资产，均为有效资产）：\n  - $\\boldsymbol{\\mu} = [\\,0.06,\\, 0.11,\\, 0.08\\,]$。\n  - $\\boldsymbol{\\Sigma} = \\begin{bmatrix}\n  0.02 & 0.015 & 0.005 \\\\\n  0.015 & 0.05 & 0.01 \\\\\n  0.005 & 0.01 & 0.03\n  \\end{bmatrix}$。\n\n对于每个测试用例，您必须：\n- 报告在有效前沿$r \\in [r_{\\mathrm{mv}}, \\max_i \\mu_i]$上检测到的角点投资组合总数。\n- 通过在$[r_{\\mathrm{mv}}, \\max_i \\mu_i]$范围内抽取至少5个均匀间隔的目标收益，并检查每个有效投资组合是否在其相邻角点投资组合的凸组合的指定容差范围内，来验证凸组合属性。将这些检查结果聚合为每个测试用例的单个布尔值，当且仅当所有抽样的目标收益都通过检查时，该值为真。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，结果按以下顺序排列：\n$[\\,\\text{corner\\_count\\_1},\\, \\text{convex\\_ok\\_1},\\, \\text{corner\\_count\\_2},\\, \\text{convex\\_ok\\_2},\\, \\text{corner\\_count\\_3},\\, \\text{convex\\_ok\\_3}\\,]$,\n其中每个角点数量为整数，每个凸性检查为布尔值。此问题不涉及物理单位，所有收益均为小数（例如，写$0.12$而不是$12$ percent）。", "solution": "所呈现的问题是计算金融中与Markowitz均值-方差优化相关的标准练习。它要求在无卖空约束（$\\boldsymbol{w} \\succeq \\boldsymbol{0}$）下为一组风险资产构建有效前沿。此任务本质上是一个凸二次规划（QP）问题。问题陈述在科学上是合理的、自洽的并且是适定的，因为目标函数$\\boldsymbol{w}^\\top \\boldsymbol{\\Sigma} \\boldsymbol{w}$是严格凸的（给定$\\boldsymbol{\\Sigma}$是正定的），并且对于任何可行的目标收益$r$，约束条件定义了一个非空紧凸集。因此，存在唯一解。我们着手直接实现所要求的算法。\n\n核心优化问题表述如下：\n$$\n\\begin{aligned}\n& \\underset{\\boldsymbol{w} \\in \\mathbb{R}^n}{\\text{minimize}}\n& & \\frac{1}{2} \\boldsymbol{w}^\\top \\boldsymbol{\\Sigma} \\boldsymbol{w} \\\\\n& \\text{subject to}\n& & \\boldsymbol{1}^\\top \\boldsymbol{w} = 1, \\\\\n& & & \\boldsymbol{\\mu}^\\top \\boldsymbol{w} = r, \\\\\n& & & w_i \\ge 0 \\quad \\text{for } i = 1, \\dots, n.\n\\end{aligned}\n$$\n这里，$\\boldsymbol{w}$是投资组合权重向量，$\\boldsymbol{\\mu}$是期望收益向量，$\\boldsymbol{\\Sigma}$是协方差矩阵，而$r$是目标期望收益。我们使用`scipy.optimize.minimize`提供的序列最小二乘规划（`SLSQP`）方法来求解给定参数$(\\boldsymbol{\\mu}, \\boldsymbol{\\Sigma}, r)$下的这个QP问题。\n\n根据问题说明，该算法按三个主要阶段进行。\n\n首先，确立有效前沿的相关范围。下界是在无卖空约束下全局最小方差投资组合（GMVP）的期望收益$r_{\\mathrm{mv}}$。这个投资组合$\\boldsymbol{w}_{\\mathrm{mv}}$通过求解不含目标收益约束（$\\boldsymbol{\\mu}^\\top \\boldsymbol{w} = r$）的QP问题得到。上界是可能的最大期望收益$r_{\\max} = \\max_i \\mu_i$，这是通过将100%的投资分配给期望收益最高的单个资产来实现的。有效前沿是目标收益$r \\in [r_{\\mathrm{mv}}, r_{\\max}]$的最优投资组合集合。\n\n其次，识别角点投资组合。角点投资组合对应于有效前沿上权重严格为正的资产集合（即有效集）发生变化的点。我们寻找它们的步骤如下：\n1. 在区间$[r_{\\mathrm{mv}}, r_{\\max}]$上生成一个包含1001个目标收益的精细网格。\n2. 对于此网格中的每个收益$r_j$，我们求解QP问题以找到最优权重$\\boldsymbol{w}(r_j)$。我们将有效集定义为$w_i(r_j) > 10^{-8}$的索引$i$的集合。\n3. 我们扫描该网格，并识别计算出的有效集有差异的相邻点$(r_j, r_{j+1})$。这样的区间必然包含一个角点投资组合。\n4. 对于每个识别出的区间，执行二分搜索以找到有效集发生变化的临界收益$r_c$。搜索过程不断精炼$r_c$的位置，直到搜索区间的宽度小于$10^{-6}$。\n5. 最终的角点投资组合列表包括GMVP、最大收益投资组合以及通过二分搜索找到的所有唯一投资组合。该列表按收益排序并进行去重，以处理从多个网格区间找到相同角点的情况。然后报告这些唯一角点投资组合的总数。\n\n第三，我们通过计算验证双基金分离定理，该定理指出，任何位于两个相邻角点投资组合之间的有效投资组合都是这两个角点投资组合的凸组合。验证过程如下：\n1. 在整个范围$[r_{\\mathrm{mv}}, r_{\\max}]$上生成至少5个均匀间隔的目标收益样本$\\{r_k\\}$。\n2. 对于每个$r_k$，我们直接使用QP求解器计算最优投资组合$\\boldsymbol{w}_{actual}(r_k)$。\n3. 我们确定将$r_k$框定在其中的两个相邻角点投资组合，即$(r_\\ell, \\boldsymbol{w}_\\ell)$和$(r_u, \\boldsymbol{w}_u)$，满足$r_\\ell \\le r_k \\le r_u$。\n4. 我们使用凸组合$\\boldsymbol{w}_{theory}(r_k) = (1-\\tau) \\boldsymbol{w}_\\ell + \\tau \\boldsymbol{w}_u$来计算理论投资组合$\\boldsymbol{w}_{theory}(r_k)$，其中插值因子$\\tau = (r_k - r_\\ell) / (r_u - r_\\ell)$确保了该组合的期望收益为$r_k$。\n5. 然后我们检查$\\boldsymbol{w}_{actual}(r_k)$和$\\boldsymbol{w}_{theory}(r_k)$是否在指定的数值容差内相等。如果它们对应权重之间的最大绝对差$\\max_i |w_{actual,i}(r_k) - w_{theory,i}(r_k)|$不超过$5 \\times 10^{-4}$，则检查通过。\n6. 当且仅当此条件对所有抽样收益均成立时，该测试用例的总体验证才被视为成功（True）。\n\n这个全面的程序被系统地应用于所有测试用例，以生成所需的结果。", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import minimize\n\ndef solve_qp(target_r, mu, Sigma, n):\n    \"\"\"Solves the quadratic programming problem for a given target return.\"\"\"\n    objective = lambda w: w.T @ Sigma @ w\n    w0 = np.ones(n) / n\n    constraints = [\n        {'type': 'eq', 'fun': lambda w: np.sum(w) - 1.0},\n        {'type': 'eq', 'fun': lambda w: w.T @ mu - target_r}\n    ]\n    bounds = tuple((0, None) for _ in range(n))\n    \n    result = minimize(objective, w0, method='SLSQP', bounds=bounds, constraints=constraints, tol=1e-9)\n    # The problem is constructed to be feasible, so success is expected.\n    return result.x\n\ndef process_case(mu, Sigma):\n    \"\"\"\n    Processes a single test case: finds corner portfolios and verifies the\n    convex combination property.\n    \"\"\"\n    n = len(mu)\n    weight_tol = 1e-8\n    bisection_tol = 1e-6\n    vector_comp_tol = 5e-4\n\n    # 1. Find the global minimum variance portfolio (GMVP) with no short-selling\n    objective_gmvp = lambda w: w.T @ Sigma @ w\n    constraints_gmvp = [{'type': 'eq', 'fun': lambda w: np.sum(w) - 1.0}]\n    bounds_gmvp = tuple((0, None) for _ in range(n))\n    res_gmvp = minimize(objective_gmvp, np.ones(n) / n, method='SLSQP', bounds=bounds_gmvp, constraints=constraints_gmvp, tol=1e-9)\n    w_mv = res_gmvp.x\n    r_mv = w_mv.T @ mu\n\n    # 2. Define the efficient frontier range\n    r_max = np.max(mu)\n    w_max_idx = np.argmax(mu)\n\n    # 3. Grid search to find intervals containing corner portfolios\n    grid_size = 1001\n    r_grid = np.linspace(r_mv, r_max, grid_size)\n    active_sets_grid = []\n    for r_val in r_grid:\n        w = solve_qp(r_val, mu, Sigma, n)\n        active_set = frozenset(np.where(w > weight_tol)[0])\n        active_sets_grid.append(active_set)\n\n    # 4. Use bisection to refine corner portfolio locations\n    found_corner_returns = []\n    for i in range(grid_size - 1):\n        if active_sets_grid[i] != active_sets_grid[i+1]:\n            r_low, r_high = r_grid[i], r_grid[i+1]\n            active_low = active_sets_grid[i]\n            \n            while (r_high - r_low) > bisection_tol:\n                r_mid = (r_low + r_high) / 2\n                w_mid = solve_qp(r_mid, mu, Sigma, n)\n                active_mid = frozenset(np.where(w_mid > weight_tol)[0])\n                if active_mid == active_low:\n                    r_low = r_mid\n                else:\n                    r_high = r_mid\n            found_corner_returns.append((r_low + r_high) / 2)\n\n    # 5. Consolidate and de-duplicate corner portfolios\n    all_corner_returns = sorted(list(set([r_mv] + found_corner_returns + [r_max])))\n    \n    unique_corner_portfolios = []\n    if all_corner_returns:\n        last_r = -np.inf\n        for r in all_corner_returns:\n            if r - last_r > 1e-5: # De-duplication tolerance\n                w = solve_qp(r, mu, Sigma, n)\n                unique_corner_portfolios.append({'r': r, 'w': w})\n                last_r = r\n    \n    # If the GMVP is the max return asset, there's only one portfolio\n    if len(unique_corner_portfolios) == 0:\n        unique_corner_portfolios.append({'r': r_mv, 'w': w_mv})\n    \n    corner_count = len(unique_corner_portfolios)\n\n    # 6. Verify the convex combination property\n    convex_ok = True\n    num_samples = 5\n    sample_returns = np.linspace(r_mv, r_max, num_samples)\n    \n    corner_rs = np.array([cp['r'] for cp in unique_corner_portfolios])\n    corner_ws = np.array([cp['w'] for cp in unique_corner_portfolios])\n\n    if corner_count < 2: # Only one portfolio, property is trivially true\n        return corner_count, True\n\n    for r_sample in sample_returns:\n        w_actual = solve_qp(r_sample, mu, Sigma, n)\n        \n        idx_u = np.searchsorted(corner_rs, r_sample)\n\n        if idx_u == 0:\n             w_theory = corner_ws[0]\n        elif idx_u == len(corner_rs):\n             w_theory = corner_ws[-1]\n        else:\n            r_l, w_l = corner_rs[idx_u - 1], corner_ws[idx_u - 1]\n            r_u, w_u = corner_rs[idx_u], corner_ws[idx_u]\n            \n            if np.isclose(r_u, r_l):\n                tau = 0.0 if np.isclose(r_sample, r_l) else 1.0\n            else:\n                tau = (r_sample - r_l) / (r_u - r_l)\n            \n            w_theory = (1 - tau) * w_l + tau * w_u\n        \n        if np.max(np.abs(w_actual - w_theory)) > vector_comp_tol:\n            convex_ok = False\n            break\n\n    return corner_count, convex_ok\n\n\ndef solve():\n    test_cases = [\n        {\n            \"mu\": np.array([0.08, 0.12]),\n            \"Sigma\": np.array([[0.04, 0.006], [0.006, 0.09]])\n        },\n        {\n            \"mu\": np.array([0.06, 0.10, 0.03]),\n            \"Sigma\": np.array([\n                [0.0422, 0.0134, 0.0418],\n                [0.0134, 0.0343, 0.0276],\n                [0.0418, 0.0276, 0.1062]\n            ])\n        },\n        {\n            \"mu\": np.array([0.06, 0.11, 0.08]),\n            \"Sigma\": np.array([\n                [0.02, 0.015, 0.005],\n                [0.015, 0.05, 0.01],\n                [0.005, 0.01, 0.03]\n            ])\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        mu_vec = case[\"mu\"]\n        Sigma_mat = case[\"Sigma\"]\n        \n        # Check for positive definiteness as a matter of principle\n        if not np.all(np.linalg.eigvals(Sigma_mat) > 0):\n             raise ValueError(\"Covariance matrix is not positive definite.\")\n        \n        corner_count, convex_ok = process_case(mu_vec, Sigma_mat)\n        results.append(corner_count)\n        results.append(convex_ok)\n\n    # Final print statement must match the problem's required format exactly.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```"}, {"introduction": "标准的均值-方差优化常被批评为“垃圾进，垃圾出”模型，对其输入参数中的估计误差高度敏感。这最后一个练习 [@problem_id:2409743] 通过引入鲁棒优化的框架来解决这一关键弱点。你将学习如何构建和解决一个协方差矩阵不确定的投资组合问题，从而创建出对现实世界的不确定性更具韧性的解决方案。", "id": "2409743", "problem": "给定一个稳健的均值-方差优化 (MVO) 问题，其中协方差矩阵并非精确已知，但已知其位于一个围绕名义估计值的弗罗贝尼乌斯范数不确定性球内。考虑 $n=3$ 种风险资产，其预期超额收益向量为 $\\mu \\in \\mathbb{R}^{3}$，名义协方差矩阵为 $\\Sigma_{0} \\in \\mathbb{R}^{3 \\times 3}$。协方差矩阵是不确定的，并被约束在集合\n$$\n\\mathcal{U}(\\delta) \\;=\\; \\left\\{ \\Sigma \\in \\mathbb{S}_{+}^{3} \\;:\\; \\left\\| \\Sigma - \\Sigma_{0} \\right\\|_{F} \\le \\delta \\right\\},\n$$\n中，其中 $\\delta \\ge 0$ 是一个给定的半径，$\\mathbb{S}_{+}^{3}$ 表示对称半正定 $3 \\times 3$ 矩阵的集合，$\\|\\cdot\\|_{F}$ 表示弗罗贝尼乌斯范数。\n\n一个投资组合是一个权重向量 $x \\in \\mathbb{R}^{3}$，满足完全投资约束 $\\mathbf{1}^{\\top} x = 1$，其中 $\\mathbf{1}$ 是全为1的向量。允许卖空。对于给定的风险厌恶参数 $\\gamma > 0$，考虑以下稳健 MVO 问题\n$$\n\\min_{x \\in \\mathbb{R}^{3}} \\;\\; \\frac{\\gamma}{2} \\;\\sup_{\\Sigma \\in \\mathcal{U}(\\delta)} \\; x^{\\top} \\Sigma x \\;-\\; \\mu^{\\top} x\n\\quad \\text{以} \\quad \\mathbf{1}^{\\top} x = 1 \\text{为约束}。\n$$\n\n使用以下数据，这些数据在所有测试用例中都是固定的：\n- 资产品种数量 $n = 3$。\n- 预期超额收益（以小数单位表示）：$\\mu = \\begin{bmatrix} 0.12 \\\\ 0.10 \\\\ 0.07 \\end{bmatrix}$。\n- 名义协方差矩阵：\n$$\n\\Sigma_{0} \\;=\\;\n\\begin{bmatrix}\n0.0100 & 0.0018 & 0.0011 \\\\\n0.0018 & 0.0064 & 0.0013 \\\\\n0.0011 & 0.0013 & 0.0025\n\\end{bmatrix}.\n$$\n\n对于每个指定的测试用例，程序必须计算上述稳健 MVO 问题的唯一最优解 $x^{\\star}$，并将其报告为一个包含三个实数的列表，每个实数四舍五入到六位小数。\n\n测试套件：\n1. 情况 A（名义边界）：$\\gamma = 5.0$，$\\delta = 0.0$。\n2. 情况 B（中等稳健性）：$\\gamma = 5.0$，$\\delta = 0.020$。\n3. 情况 C（强稳健性）：$\\gamma = 5.0$，$\\delta = 0.050$。\n4. 情况 D（高风险厌恶与稳健性）：$\\gamma = 20.0$，$\\delta = 0.020$。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔列表。列表中的每个元素对应一个测试用例，其本身也是一个由方括号括起来的、包含三个投资组合权重的逗号分隔列表。所有数字必须四舍五入到六位小数。例如，要求的格式是\n$[\\,[w_{1,1},w_{1,2},w_{1,3}],\\,[w_{2,1},w_{2,2},w_{2,3}],\\,[w_{3,1},w_{3,2},w_{3,3}],\\,[w_{4,1},w_{4,2},w_{4,3}]\\,]$,\n其中 $w_{k,i}$ 表示第 $k$ 个测试用例中的第 $i$ 个权重。不涉及单位，数字必须以实数小数表示，而不是百分比。", "solution": "问题陈述已经过验证。\n\n**步骤1：提取已知条件**\n- 资产品种数量：$n = 3$。\n- 预期超额收益向量：$\\mu = \\begin{bmatrix} 0.12 \\\\ 0.10 \\\\ 0.07 \\end{bmatrix}$。\n- 名义协方差矩阵：\n$$\n\\Sigma_{0} \\;=\\;\n\\begin{bmatrix}\n0.0100 & 0.0018 & 0.0011 \\\\\n0.0018 & 0.0064 & 0.0013 \\\\\n0.0011 & 0.0013 & 0.0025\n\\end{bmatrix}.\n$$\n- 协方差不确定性集合：$\\mathcal{U}(\\delta) \\;=\\; \\left\\{ \\Sigma \\in \\mathbb{S}_{+}^{3} \\;:\\; \\left\\| \\Sigma - \\Sigma_{0} \\right\\|_{F} \\le \\delta \\right\\}$，其中 $\\mathbb{S}_{+}^{3}$ 是对称半正定 $3 \\times 3$ 矩阵的集合，$\\| \\cdot \\|_{F}$ 是弗罗贝尼乌斯范数。\n- 投资组合约束：$\\mathbf{1}^{\\top} x = 1$。\n- 稳健均值-方差优化 (MVO) 问题：\n$$\n\\min_{x \\in \\mathbb{R}^{3}} \\;\\; \\frac{\\gamma}{2} \\;\\sup_{\\Sigma \\in \\mathcal{U}(\\delta)} \\; x^{\\top} \\Sigma x \\;-\\; \\mu^{\\top} x\n\\quad \\text{以} \\quad \\mathbf{1}^{\\top} x = 1 \\text{为约束}。\n$$\n- 测试用例由参数对 $(\\gamma, \\delta)$ 定义：\n  1. 情况 A: $\\gamma = 5.0$, $\\delta = 0.0$。\n  2. 情况 B: $\\gamma = 5.0$, $\\delta = 0.020$。\n  3. 情况 C: $\\gamma = 5.0$, $\\delta = 0.050$。\n  4. 情况 D: $\\gamma = 20.0$, $\\delta = 0.020$。\n\n**步骤2：验证提取的已知条件**\n该问题具有科学依据，是适定且客观的。这是稳健投资组合优化（计算金融学的一个子领域）中的一个标准表述。所有参数都已明确定义，数据一致。名义协方差矩阵 $\\Sigma_0$ 是对称正定的（其特征值约为 $0.0107$、$0.0059$ 和 $0.0023$），因此它属于 $\\mathbb{S}_{+}^{3}$。问题表述在数学上是精确的，并允许推导出唯一解。未发现任何不当之处。\n\n**步骤3：结论与行动**\n该问题被判定为有效。将推导解答。\n\n**解答推导**\n指定的稳健 MVO 问题是一个极小化极大问题：\n$$\n\\min_{x \\in \\mathbb{R}^{3}} \\left( \\frac{\\gamma}{2} \\sup_{\\Sigma \\in \\mathcal{U}(\\delta)} x^{\\top} \\Sigma x -\\mu^{\\top} x \\right)\n\\quad \\text{以} \\quad \\mathbf{1}^{\\top} x = 1 \\text{为约束}。\n$$\n为解决此问题，我们首先分析内部的最大化问题，该问题旨在为固定的投资组合 $x$ 寻求最坏情况下的投资组合方差：\n$$\n\\sup_{\\Sigma \\in \\mathcal{U}(\\delta)} x^{\\top} \\Sigma x = \\sup_{\\Sigma} \\left\\{ x^{\\top} \\Sigma x \\mid \\Sigma \\in \\mathbb{S}_{+}^{3}, \\|\\Sigma - \\Sigma_{0}\\|_{F} \\le \\delta \\right\\}.\n$$\n我们可以使用迹算子和矩阵内积 $\\langle A, B \\rangle_{F} = \\text{Tr}(A^{\\top}B)$ 来表示二次型 $x^{\\top} \\Sigma x$。由于 $x^{\\top}\\Sigma x$ 是一个标量，可得 $x^{\\top}\\Sigma x = \\text{Tr}(x^{\\top}\\Sigma x) = \\text{Tr}(\\Sigma x x^{\\top})$。由于 $\\Sigma$ 和 $xx^\\top$ 是对称的，这等价于 $\\langle \\Sigma, x x^{\\top} \\rangle_{F}$。\n\n令 $\\Delta = \\Sigma - \\Sigma_0$。关于 $\\Sigma$ 的最大化问题可以重写为关于对称扰动矩阵 $\\Delta$ 的最大化问题：\n$$\n\\sup_{\\Delta} \\left\\{ x^{\\top}(\\Sigma_0 + \\Delta)x \\mid \\|\\Delta\\|_{F} \\le \\delta, \\Sigma_0+\\Delta \\in \\mathbb{S}_{+}^{3}, \\Delta \\in \\mathbb{S}^{3} \\right\\},\n$$\n其中 $\\mathbb{S}^{3}$ 是 $3 \\times 3$ 对称矩阵的集合。\n目标函数为 $x^{\\top}\\Sigma_0 x + x^{\\top}\\Delta x = x^{\\top}\\Sigma_0 x + \\langle \\Delta, x x^{\\top} \\rangle_{F}$。项 $x^{\\top}\\Sigma_0 x$ 相对于 $\\Delta$ 是常数，因此我们必须求解：\n$$\nx^{\\top}\\Sigma_0 x + \\sup_{\\Delta} \\left\\{ \\langle \\Delta, x x^{\\top} \\rangle_{F} \\mid \\|\\Delta\\|_{F} \\le \\delta, \\Sigma_0+\\Delta \\in \\mathbb{S}_{+}^{3}, \\Delta \\in \\mathbb{S}^{3} \\right\\}.\n$$\n根据弗罗贝尼乌斯内积的柯西-施瓦茨不等式，当 $\\Delta$ 与矩阵 $xx^{\\top}$ 对齐时，在 $\\|\\Delta\\|_{F} \\le \\delta$ 的约束下，$\\langle \\Delta, x x^{\\top} \\rangle_{F}$ 的上确界得以实现。最优扰动为 $\\Delta^{\\star} = \\delta \\frac{x x^{\\top}}{\\|x x^{\\top}\\|_{F}}$。\n秩为1的矩阵 $x x^{\\top}$ 的弗罗贝尼乌斯范数是：\n$$\n\\|x x^{\\top}\\|_{F} = \\sqrt{\\text{Tr}\\left((x x^{\\top})^{\\top}(x x^{\\top})\\right)} = \\sqrt{\\text{Tr}\\left(x x^{\\top} x x^{\\top}\\right)} = \\sqrt{\\text{Tr}\\left(x(x^{\\top}x)x^{\\top}\\right)} = \\sqrt{(x^{\\top}x)\\text{Tr}(x x^{\\top})} = \\sqrt{\\|x\\|_{2}^2 \\|x\\|_{2}^2} = \\|x\\|_{2}^2,\n$$\n其中 $\\|x\\|_2$ 是 $x$ 的欧几里得范数。\n因此，最优扰动为 $\\Delta^{\\star} = \\frac{\\delta}{\\|x\\|_{2}^2} x x^{\\top}$。相应的最坏情况协方差矩阵是 $\\Sigma^{\\star} = \\Sigma_0 + \\frac{\\delta}{\\|x\\|_{2}^2} x x^{\\top}$。由于 $\\Sigma_0$ 是半正定的，且 $xx^{\\top}$ 也是半正定的，它们的（非负权重）加权和确保了 $\\Sigma^\\star \\in \\mathbb{S}_{+}^{3}$。因此，对 $\\Sigma$ 的半正定性约束被松弛问题的解自动满足，可以忽略。\n\n内积项的最大值是 $\\langle \\Delta^{\\star}, x x^{\\top} \\rangle_{F} = \\delta \\|x x^{\\top}\\|_{F} = \\delta \\|x\\|_{2}^2$。\n最坏情况下的方差是：\n$$\n\\sup_{\\Sigma \\in \\mathcal{U}(\\delta)} x^{\\top} \\Sigma x = x^{\\top}\\Sigma_0 x + \\delta \\|x\\|_{2}^2.\n$$\n将此结果代回 MVO 问题，我们得到一个等价的标准二次规划问题：\n$$\n\\min_{x \\in \\mathbb{R}^{3}} \\;\\; \\frac{\\gamma}{2} \\left( x^{\\top}\\Sigma_0 x + \\delta \\|x\\|_{2}^2 \\right) - \\mu^{\\top} x\n\\quad \\text{以} \\quad \\mathbf{1}^{\\top} x = 1 \\text{为约束}。\n$$\n注意到 $\\|x\\|_{2}^2 = x^{\\top}Ix$，其中 $I$ 是单位矩阵，目标函数可以重写为：\n$$\nf(x) = \\frac{\\gamma}{2} x^{\\top}(\\Sigma_0 + \\delta I)x - \\mu^{\\top} x.\n$$\n我们定义稳健协方差矩阵 $\\tilde{\\Sigma} = \\Sigma_0 + \\delta I$。现在问题变成了一个标准的 MVO 问题：\n$$\n\\min_{x \\in \\mathbb{R}^{3}} \\;\\; \\frac{\\gamma}{2} x^{\\top}\\tilde{\\Sigma}x - \\mu^{\\top} x\n\\quad \\text{以} \\quad \\mathbf{1}^{\\top} x = 1 \\text{为约束}。\n$$\n这是一个带线性等式约束的凸优化问题，我们使用拉格朗日乘子法来求解。拉格朗日函数是：\n$$\n\\mathcal{L}(x, \\lambda) = \\frac{\\gamma}{2} x^{\\top}\\tilde{\\Sigma}x - \\mu^{\\top} x + \\lambda(1 - \\mathbf{1}^{\\top} x).\n$$\n通过将梯度设置为零，可以得到最优性的一阶必要条件：\n$$\n\\nabla_x \\mathcal{L} = \\gamma \\tilde{\\Sigma}x - \\mu - \\lambda\\mathbf{1} = 0\n$$\n$$\n\\nabla_\\lambda \\mathcal{L} = 1 - \\mathbf{1}^{\\top} x = 0\n$$\n从第一个方程中，我们求解 $x$。由于 $\\Sigma_0$ 是正定的且 $\\delta \\ge 0$，$\\tilde{\\Sigma}$ 也是正定的，因此是可逆的。\n$$\n\\gamma \\tilde{\\Sigma}x = \\mu + \\lambda\\mathbf{1} \\implies x = \\frac{1}{\\gamma} \\tilde{\\Sigma}^{-1} (\\mu + \\lambda\\mathbf{1}).\n$$\n我们将这个 $x$ 的表达式代入预算约束 $\\mathbf{1}^{\\top}x = 1$：\n$$\n\\mathbf{1}^{\\top} \\left( \\frac{1}{\\gamma} \\tilde{\\Sigma}^{-1} (\\mu + \\lambda\\mathbf{1}) \\right) = 1\n$$\n$$\n\\mathbf{1}^{\\top}\\tilde{\\Sigma}^{-1}\\mu + \\lambda(\\mathbf{1}^{\\top}\\tilde{\\Sigma}^{-1}\\mathbf{1}) = \\gamma.\n$$\n为了求解 $\\lambda$，我们定义标量：\n$$\nA = \\mathbf{1}^{\\top}\\tilde{\\Sigma}^{-1}\\mathbf{1}, \\quad B = \\mathbf{1}^{\\top}\\tilde{\\Sigma}^{-1}\\mu.\n$$\n关于 $\\lambda$ 的方程变为 $B + \\lambda A = \\gamma$，解得：\n$$\n\\lambda = \\frac{\\gamma - B}{A}.\n$$\n唯一的最优投资组合 $x^{\\star}$ 可通过先计算 $\\lambda$，然后将其代入 $x$ 的表达式中求得。\n\n**算法**\n对于每个具有参数 $(\\gamma, \\delta)$ 的测试用例：\n1. 构建稳健协方差矩阵 $\\tilde{\\Sigma} = \\Sigma_0 + \\delta I$，其中 $I$ 是 $3 \\times 3$ 的单位矩阵。\n2. 计算其逆矩阵 $\\tilde{\\Sigma}^{-1}$。\n3. 计算标量 $A = \\mathbf{1}^{\\top}\\tilde{\\Sigma}^{-1}\\mathbf{1}$ 和 $B = \\mu^{\\top}\\tilde{\\Sigma}^{-1}\\mathbf{1}$。注意，由于 $\\tilde{\\Sigma}^{-1}$ 是对称的，$\\mu^{\\top}\\tilde{\\Sigma}^{-1}\\mathbf{1} = \\mathbf{1}^{\\top}\\tilde{\\Sigma}^{-1}\\mu$。\n4. 计算拉格朗日乘子 $\\lambda = \\frac{\\gamma - B}{A}$。\n5. 计算最优权重向量 $x^{\\star} = \\frac{1}{\\gamma} \\tilde{\\Sigma}^{-1}(\\mu + \\lambda\\mathbf{1})$。\n6. 报告 $x^{\\star}$ 的分量，四舍五入到六位小数。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the robust mean-variance optimization problem for a given set of test cases.\n    \"\"\"\n\n    # --- Fixed Parameters from Problem Statement ---\n    # Number of assets\n    n = 3\n    # Expected excess returns vector (mu)\n    mu = np.array([[0.12], [0.10], [0.07]])\n    # Nominal covariance matrix (Sigma_0)\n    sigma_0 = np.array([\n        [0.0100, 0.0018, 0.0011],\n        [0.0018, 0.0064, 0.0013],\n        [0.0011, 0.0013, 0.0025]\n    ])\n    # Vector of ones for the budget constraint\n    ones = np.ones((n, 1))\n    # Identity matrix\n    identity = np.identity(n)\n\n    # --- Test Suite ---\n    test_cases = [\n        # (gamma, delta)\n        (5.0, 0.0),       # Case A\n        (5.0, 0.020),     # Case B\n        (5.0, 0.050),     # Case C\n        (20.0, 0.020)     # Case D\n    ]\n\n    results_as_strings = []\n\n    for gamma, delta in test_cases:\n        # Step 1: Construct the robust covariance matrix\n        sigma_tilde = sigma_0 + delta * identity\n\n        # Step 2: Compute its inverse\n        sigma_tilde_inv = np.linalg.inv(sigma_tilde)\n\n        # Step 3: Calculate scalars A and B for solving for lambda\n        # A = 1^T * inv(Sigma_tilde) * 1\n        A_matrix = ones.T @ sigma_tilde_inv @ ones\n        A = A_matrix[0, 0]\n        \n        # B = 1^T * inv(Sigma_tilde) * mu\n        B_matrix = ones.T @ sigma_tilde_inv @ mu\n        B = B_matrix[0, 0]\n\n        # Step 4: Compute the Lagrange multiplier lambda\n        lambda_val = (gamma - B) / A\n\n        # Step 5: Calculate the optimal portfolio weights x_star\n        # x_star = (1/gamma) * inv(Sigma_tilde) * (mu + lambda * 1)\n        x_star_vec = (1 / gamma) * sigma_tilde_inv @ (mu + lambda_val * ones)\n\n        # Format the result string for the current case\n        # Flatten the column vector to a 1D array for easier formatting\n        x_star_flat = x_star_vec.flatten()\n        # Create a string representation like \"[w1,w2,w3]\" with 6 decimal places\n        case_result_str = (\n            f\"[{x_star_flat[0]:.6f},\"\n            f\"{x_star_flat[1]:.6f},\"\n            f\"{x_star_flat[2]:.6f}]\"\n        )\n        results_as_strings.append(case_result_str)\n\n    # Final print statement in the exact required format: [[w1,w2,w3],[...],...]\n    print(f\"[{','.join(results_as_strings)}]\")\n\nsolve()\n```"}]}