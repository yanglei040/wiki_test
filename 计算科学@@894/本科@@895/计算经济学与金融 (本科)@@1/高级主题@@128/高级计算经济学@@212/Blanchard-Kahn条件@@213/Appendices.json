{"hands_on_practices": [{"introduction": "深入理解Blanchard-Kahn条件不仅仅是计算和比较特征值的数量。本练习将引导你从第一性原理出发，通过显式地使用系统的稳定特征向量，亲手推导出前瞻性变量和预定变量之间的鞍路径关系 $p_t = F x_t$。这个过程将揭示稳定流行如何从根本上定义了唯一的非爆发性经济路径，让你领会到条件的深层几何与经济含义。[@problem_id:2376637]", "id": "2376637", "problem": "考虑一个线性化的、确定性的理性预期 (RE) 系统，该系统包含一个预定状态变量和一个前瞻性控制变量，汇集在向量 $y_t \\equiv \\begin{pmatrix} x_t \\\\ p_t \\end{pmatrix}$ 中。其运动定律为\n$$\nE_t \\, y_{t+1} \\;=\\; A \\, y_t, \\quad \\text{其中 } A \\;=\\; \\begin{pmatrix} 1.2 & 0.5 \\\\ 0.3 & 0.4 \\end{pmatrix}.\n$$\n假设 $x_t$ 在时间 $t$ 是预定变量，而 $p_t$ 是一个跳跃 (前瞻性) 变量。使用 Blanchard-Kahn (BK) 条件的定义以及线性算子的特征值和特征向量的性质，在不借助任何快捷公式的情况下，完成以下任务：\n- 验证该系统满足 BK 条件。\n- 手动推导由与 $A$ 的非爆炸性根相关联的稳定流形所蕴含的唯一鞍点路径关系 $p_t = F \\, x_t$。你的推导必须明确使用 $A$ 的特征值和特征向量，以及对 $p_t$ 具有非爆炸性动态的要求。\n- 报告 $F$ 的值。\n\n将你的最终数值答案四舍五入到四位有效数字。", "solution": "所提出的问题具有科学依据、提法恰当且完整。它描述了线性理性预期模型分析中的一个标准练习，这是现代宏观经济学的一个核心主题。所有必要的组成部分——系统的运动定律、变量的分类以及具体问题——都已提供，没有含糊不清或矛盾之处。因此，我们可以着手求解。\n\n该系统由线性理性预期方程 $E_t \\, y_{t+1} = A \\, y_t$ 描述，其中 $y_t \\equiv \\begin{pmatrix} x_t \\\\ p_t \\end{pmatrix}$ 且矩阵 $A$ 已给出为 $A = \\begin{pmatrix} 1.2 & 0.5 \\\\ 0.3 & 0.4 \\end{pmatrix}$。变量 $x_t$ 是预定变量，意味着其在时间 $t$ 的值在时间 $t-1$ 就已知道。变量 $p_t$ 是一个非预定变量或“跳跃”变量，意味着其在时间 $t$ 的值可以对在时间 $t$ 到达的新信息做出反应。\n\n首先，我们必须验证 Blanchard-Kahn (BK) 条件，以确定是否存在唯一、稳定的解路径。BK 条件指出，矩阵 $A$ 的模大于 1 的特征值的数量必须等于系统中跳跃变量的数量。在本例中，我们有 1 个跳跃变量 $p_t$。因此，为了存在唯一的鞍点路径，矩阵 $A$ 必须恰好有 1 个模大于 1 的特征值。\n\n我们通过求解特征方程 $\\det(A - \\lambda I) = 0$ 来求特征值，其中 $I$ 是 $2 \\times 2$ 的单位矩阵。\n$$\n\\det\\left(\\begin{pmatrix} 1.2 & 0.5 \\\\ 0.3 & 0.4 \\end{pmatrix} - \\lambda \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}\\right) = 0\n$$\n$$\n\\det\\begin{pmatrix} 1.2 - \\lambda & 0.5 \\\\ 0.3 & 0.4 - \\lambda \\end{pmatrix} = 0\n$$\n$$\n(1.2 - \\lambda)(0.4 - \\lambda) - (0.5)(0.3) = 0\n$$\n$$\n0.48 - 1.6\\lambda + \\lambda^2 - 0.15 = 0\n$$\n$$\n\\lambda^2 - 1.6\\lambda + 0.33 = 0\n$$\n使用二次公式 $\\lambda = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}$，我们求得特征值为：\n$$\n\\lambda = \\frac{1.6 \\pm \\sqrt{(-1.6)^2 - 4(1)(0.33)}}{2} = \\frac{1.6 \\pm \\sqrt{2.56 - 1.32}}{2} = \\frac{1.6 \\pm \\sqrt{1.24}}{2}\n$$\n两个特征值是：\n不稳定 (爆炸性) 特征值 $\\lambda_u$:\n$$\n\\lambda_u = \\frac{1.6 + \\sqrt{1.24}}{2} \\approx \\frac{1.6 + 1.11355}{2} \\approx 1.35678\n$$\n以及稳定 (非爆炸性) 特征值 $\\lambda_s$:\n$$\n\\lambda_s = \\frac{1.6 - \\sqrt{1.24}}{2} \\approx \\frac{1.6 - 1.11355}{2} \\approx 0.24323\n$$\n由于 $|\\lambda_u| > 1$ 且 $|\\lambda_s| < 1$，恰好有一个不稳定特征值。这个数量与跳跃变量的数量 ($1$) 相匹配。因此，Blanchard-Kahn 条件得到满足，存在一条唯一的、稳定的鞍点路径。\n\n接下来，我们推导这个鞍点路径关系。系统的通解可以表示为矩阵 $A$ 的特征向量的线性组合。设 $v_u$ 和 $v_s$ 分别是对应于 $\\lambda_u$ 和 $\\lambda_s$ 的特征向量。在任何时间 $t$ 的解都具有 $y_t = c_1 (\\lambda_u)^t v_u + c_2 (\\lambda_s)^t v_s$ 的形式，其中 $c_1$ 和 $c_2$ 是常数。为了使系统在 $t \\to \\infty$ 时避免爆炸性行为，与不稳定特征值 $\\lambda_u$ 相关联的项必须被消除。这需要将其系数 $c_1$ 设置为 $0$。\n\n这一约束迫使解向量 $y_t = \\begin{pmatrix} x_t \\\\ p_t \\end{pmatrix}$ 位于稳定流形上，稳定流形是由稳定特征向量 $v_s$ 张成的子空间。因此，对于任何时间 $t$，向量 $y_t$ 必须与 $v_s$ 共线。这意味着其分量 $x_t$ 和 $p_t$ 之间存在一个固定的比例关系。\n\n我们通过求解方程 $(A - \\lambda_s I)v_s = 0$ 来求稳定特征向量 $v_s = \\begin{pmatrix} v_{sx} \\\\ v_{sp} \\end{pmatrix}$：\n$$\n\\begin{pmatrix} 1.2 - \\lambda_s & 0.5 \\\\ 0.3 & 0.4 - \\lambda_s \\end{pmatrix} \\begin{pmatrix} v_{sx} \\\\ v_{sp} \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}\n$$\n从该矩阵方程的第二行，我们得到关系式：\n$$\n0.3 v_{sx} + (0.4 - \\lambda_s) v_{sp} = 0\n$$\n这给出了稳定特征向量各分量的比率：\n$$\n\\frac{v_{sp}}{v_{sx}} = -\\frac{0.3}{0.4 - \\lambda_s}\n$$\n由于解向量 $y_t = \\begin{pmatrix} x_t \\\\ p_t \\end{pmatrix}$ 必须与 $v_s$ 平行，其分量的比率必须相同：\n$$\n\\frac{p_t}{x_t} = \\frac{v_{sp}}{v_{sx}}\n$$\n这导出了鞍点路径关系 $p_t = F x_t$，其中系数 $F$ 由下式给出：\n$$\nF = -\\frac{0.3}{0.4 - \\lambda_s}\n$$\n我们现在代入稳定特征值 $\\lambda_s = \\frac{1.6 - \\sqrt{1.24}}{2}$ 的表达式：\n$$\nF = -\\frac{0.3}{0.4 - \\left(\\frac{1.6 - \\sqrt{1.24}}{2}\\right)} = -\\frac{0.3}{\\frac{2(0.4) - (1.6 - \\sqrt{1.24})}{2}} = -\\frac{0.6}{0.8 - 1.6 + \\sqrt{1.24}}\n$$\n$$\nF = -\\frac{0.6}{-0.8 + \\sqrt{1.24}}\n$$\n现在，我们计算数值。使用 $\\sqrt{1.24} \\approx 1.11355287$：\n$$\nF \\approx -\\frac{0.6}{-0.8 + 1.11355287} = -\\frac{0.6}{0.31355287} \\approx -1.9135607...\n$$\n将此结果四舍五入到四位有效数字，得到 $F \\approx -1.914$。", "answer": "$$\\boxed{-1.914}$$"}, {"introduction": "在应用经济学中，理论模型很少以可以直接进行BK分析的标准一阶形式出现。本练习将处理一个常见的挑战：包含时滞的动态模型，例如存在“建设周期”（time-to-build）的投资。你将学习通过引入辅助变量，将一个高阶差分系统转化为标准的矩阵状态空间形式，这是任何动态模型分析者都必须掌握的关键技巧。[@problem_id:2376631]", "id": "2376631", "problem": "考虑以下带有投资建设周期的线性理性预期（RE）模型，其中在 $t$ 时期决定的投资仅在 $t+2$ 时期增加资本存量：\n$$\nq_{t} = \\phi \\, \\mathbb{E}_{t} q_{t+1} + \\psi \\, k_{t},\n$$\n$$\nk_{t+2} = \\alpha \\, k_{t+1} + \\gamma \\, q_{t}.\n$$\n此处，$q_{t}$ 是一个前瞻性变量，$k_{t}$ 是一个先决变量，且不存在外生冲击。参数为\n$$\n\\alpha = \\frac{1}{2}, \\quad \\phi = \\frac{1}{2}, \\quad \\gamma = 1, \\quad \\psi = 0.\n$$\n构建一个适用于应用Blanchard-Kahn（BK）条件的一阶状态空间表示，其形式为\n$$\n\\mathbb{E}_{t} s_{t+1} = F s_{t},\n$$\n通过引入您认为必要的任何辅助状态变量来解决投资建设周期项。仅基于该表示，计算 $F$ 的模严格大于 $1$ 的特征值的数量。将此数量以单个实数值的形式给出。无需四舍五入。", "solution": "该问题要求为一个在资本积累中具有两期投资建设周期的模型，构建一个一阶状态空间表示。根本问题是 $k_{t+2}$ 的出现，这使得系统无法成为时间上的一阶系统。一种标准方法是定义一个辅助变量，将前导项移动一期，并使系统在一阶上闭合。\n\n从给定的方程开始：\n$$\nq_{t} = \\phi \\, \\mathbb{E}_{t} q_{t+1} + \\psi \\, k_{t},\n$$\n$$\nk_{t+2} = \\alpha \\, k_{t+1} + \\gamma \\, q_{t}.\n$$\n引入辅助先决变量 $m_{t} \\equiv k_{t+1}$。那么根据定义有 $m_{t+1} = k_{t+2}$，运动定律变为\n$$\nm_{t+1} = \\alpha \\, m_{t} + \\gamma \\, q_{t}.\n$$\n我们还有一个将 $k_{t}$ 和 $m_{t}$ 向前联系一期的恒等式：\n$$\nk_{t+1} = m_{t}.\n$$\n将内生变量收集到向量 $s_{t} \\equiv \\begin{pmatrix} m_{t} \\\\ k_{t} \\\\ q_{t} \\end{pmatrix}$ 中。通过将每个方程写成关于 $\\mathbb{E}_{t} s_{t+1}$ 和 $s_{t}$ 的线性形式，来将系统表示为预期一阶形式 $\\mathbb{E}_{t} s_{t+1} = F s_{t}$。\n\n这三个方程可以写为：\n1. 恒等式 $k_{t+1} - m_{t} = 0$ 变为\n$$\n\\mathbb{E}_{t} k_{t+1} - m_{t} = 0.\n$$\n2. 投资建设周期定律 $m_{t+1} - \\alpha m_{t} - \\gamma q_{t} = 0$ 变为\n$$\n\\mathbb{E}_{t} m_{t+1} - \\alpha m_{t} - \\gamma q_{t} = 0.\n$$\n3. 前瞻方程 $q_{t} - \\phi \\mathbb{E}_{t} q_{t+1} - \\psi k_{t} = 0$ 变为\n$$\n-\\phi \\, \\mathbb{E}_{t} q_{t+1} + q_{t} - \\psi \\, k_{t} = 0.\n$$\n这些可以写成矩阵形式 $A \\, \\mathbb{E}_{t} s_{t+1} = B \\, s_{t}$，其中\n$$\nA =\n\\begin{pmatrix}\n0 & 1 & 0 \\\\\n1 & 0 & 0 \\\\\n0 & 0 & -\\phi\n\\end{pmatrix}, \\quad\nB =\n\\begin{pmatrix}\n1 & 0 & 0 \\\\\n\\alpha & 0 & \\gamma \\\\\n0 & -\\psi & 1\n\\end{pmatrix}.\n$$\n由于当 $\\phi \\neq 0$ 时，$\\det(A) = \\phi \\neq 0$，因此 $A$ 是可逆的，状态空间转移矩阵为\n$$\nF = A^{-1} B.\n$$\n计算 $A^{-1}$。注意到 $A$ 的左上角 $2 \\times 2$ 分块是置换矩阵，右下角元素是 $-\\phi$，可得\n$$\nA^{-1} =\n\\begin{pmatrix}\n0 & 1 & 0 \\\\\n1 & 0 & 0 \\\\\n0 & 0 & -\\frac{1}{\\phi}\n\\end{pmatrix}.\n$$\n因此\n$$\nF = A^{-1} B =\n\\begin{pmatrix}\n\\alpha & 0 & \\gamma \\\\\n1 & 0 & 0 \\\\\n0 & \\frac{\\psi}{\\phi} & -\\frac{1}{\\phi}\n\\end{pmatrix}.\n$$\n代入参数值 $\\alpha = \\frac{1}{2}$，$\\phi = \\frac{1}{2}$，$\\gamma = 1$，和 $\\psi = 0$：\n$$\nF =\n\\begin{pmatrix}\n\\frac{1}{2} & 0 & 1 \\\\\n1 & 0 & 0 \\\\\n0 & 0 & -2\n\\end{pmatrix}.\n$$\n该矩阵是分块上三角矩阵，左上角有一个 $2 \\times 2$ 的分块，右下角有一个 $1 \\times 1$ 的分块。因此，其特征值即为对角分块的特征值。对于 $2 \\times 2$ 的分块\n$$\n\\begin{pmatrix}\n\\frac{1}{2} & 0 \\\\\n1 & 0\n\\end{pmatrix},\n$$\n特征多项式为\n$$\n\\lambda^{2} - \\frac{1}{2} \\lambda = \\lambda \\left(\\lambda - \\frac{1}{2}\\right),\n$$\n特征值为 $\\lambda_{1} = 0$ 和 $\\lambda_{2} = \\frac{1}{2}$。$1 \\times 1$ 的分块贡献了特征值 $\\lambda_{3} = -2$。\n\n这些特征值的模分别为 $|0| = 0$，$\\left|\\frac{1}{2}\\right| = \\frac{1}{2}$，和 $|-2| = 2$。恰好有一个特征值的模严格大于 $1$。因此，所求的数量是 $1$。", "answer": "$$\\boxed{1}$$"}, {"introduction": "Blanchard-Kahn条件的应用暗含一个重要前提：我们已知经济的“真实”模型。这个高级练习将探讨一个关键问题：当我们不知道真实模型时会发生什么？通过模拟一个决策者使用过度简化模型进行预测的场景 ($\\mathbb{E}_{t}[y_{t+1}] = S_{b} y_{t}$)，我们将看到看似稳定的信念在与更复杂的经济现实交互时，如何可能导致爆发性的动态后果，从而揭示了正确设定模型的极端重要性。[@problem_id:2376591]", "id": "2376591", "problem": "决策者使用一个过分简化的线性理性预期模型来设计和评估政策，而真实经济遵循一个更复杂的模型。考虑形如 $A \\, \\mathbb{E}_{t}[y_{t+1}] + C \\, y_{t} = D \\, y_{t-1} + \\Psi \\, \\varepsilon_{t}$ 的线性系统，其中 $y_{t} \\in \\mathbb{R}^{n}$ 是内生变量向量，$\\varepsilon_{t} \\in \\mathbb{R}^{m}$ 是一个均值为零的单步预测新息向量，$A, C, D \\in \\mathbb{R}^{n \\times n}$，以及 $\\Psi \\in \\mathbb{R}^{n \\times m}$。假设新息在 $t=0$ 时是一次性的，此后为零，并假设 $y_{-1} = 0$。决策者关于未来变量的信念由一个稳定的线性预测规则 $\\mathbb{E}_{t}[y_{t+1}] = S_{b} \\, y_{t}$ 表示，其中给定矩阵 $S_{b} \\in \\mathbb{R}^{n \\times n}$ 的谱半径严格小于1。\n\n您的任务是：\n\n1. 对每个模型（简化模型和真实模型），判断是否存在唯一的有界理性预期解。您的判断应仅基于矩阵束 $(C - \\lambda D)$ 的模严格大于1的广义特征值数量与前瞻性变量数量（定义为 $A$ 的秩）之间的比较。此步骤的输出必须是每个模型对应的布尔值。\n2. 当代理人（和决策者）使用过分简化的模型的预测规则形成预期时，模拟真实模型所隐含的时间路径。在所述的预测规则和真实模型下，$y_{t}$ 的运动定律通过在每个时间 $t$ 求解静态系统得到：\n   $$(C + A S_{b}) \\, y_{t} = D \\, y_{t-1} + \\Psi \\, \\varepsilon_{t},$$\n   由此得出\n   $$y_{t} = \\left(C + A S_{b}\\right)^{-1} D \\, y_{t-1} \\quad \\text{对于} \\quad t \\ge 1 \\quad \\text{且} \\quad \\varepsilon_{t} = 0,$$\n   以及\n   $$y_{0} = \\left(C + A S_{b}\\right)^{-1} \\Psi \\, \\varepsilon_{0} \\quad \\text{给定} \\quad y_{-1}=0.$$\n   使用 $T = 40$ 个时期的时间范围，并为每个测试用例报告一个浮点数，该浮点数等于在所有分量和所有时间 $t \\in \\{0, 1, \\dots, T\\}$ 上的最大绝对值。\n3. 您的程序必须将所有测试用例的结果汇总到包含列表的列表的单行中。对于每个测试用例，输出三元组 $[\\text{BK\\_simplified}, \\text{BK\\_true}, \\text{metric}]$，其中 $\\text{BK\\_simplified}$ 和 $\\text{BK\\_true}$ 是步骤1中的布尔值，$\\text{metric}$ 是步骤2中的浮点数。\n\n为以下测试套件实现您的解决方案。在所有情况下，维度为 $n = 2$，信念矩阵为\n$$S_{b} = \\begin{bmatrix} 0.5 & 0.1 \\\\ 0.0 & 0.6 \\end{bmatrix},$$\n时间范围为 $T = 40$，初始新息为一维，其值为\n$$\\varepsilon_{0} = \\begin{bmatrix} 1.0 \\end{bmatrix}.$$\n\n- 测试用例1（简化模型满足 Blanchard-Kahn 条件；真实模型不满足，存在不确定性）：\n  - 简化模型：\n    $$A_{S} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}, \\quad\n      C_{S} = \\begin{bmatrix} 1.2 & 0.0 \\\\ 0.0 & 1.1 \\end{bmatrix}, \\quad\n      D_{S} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}.$$\n  - 真实模型：\n    $$A_{T} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}, \\quad\n      C_{T} = \\begin{bmatrix} 1.2 & 0.0 \\\\ 0.0 & 0.8 \\end{bmatrix}, \\quad\n      D_{T} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}, \\quad\n      \\Psi_{T} = \\begin{bmatrix} 0.5 \\\\ 0.25 \\end{bmatrix}.$$\n\n- 测试用例2（简化模型和真实模型均满足 Blanchard-Kahn 条件）：\n  - 简化模型：\n    $$A_{S} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}, \\quad\n      C_{S} = \\begin{bmatrix} 1.2 & 0.0 \\\\ 0.0 & 1.1 \\end{bmatrix}, \\quad\n      D_{S} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}.$$\n  - 真实模型：\n    $$A_{T} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 0 \\end{bmatrix}, \\quad\n      C_{T} = \\begin{bmatrix} 1.3 & 0.0 \\\\ 0.2 & 0.7 \\end{bmatrix}, \\quad\n      D_{T} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}, \\quad\n      \\Psi_{T} = \\begin{bmatrix} 0.5 \\\\ 0.25 \\end{bmatrix}.$$\n\n- 测试用例3（简化模型满足 Blanchard-Kahn 条件；真实模型不满足，无解）：\n  - 简化模型：\n    $$A_{S} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}, \\quad\n      C_{S} = \\begin{bmatrix} 1.2 & 0.0 \\\\ 0.0 & 1.1 \\end{bmatrix}, \\quad\n      D_{S} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}.$$\n  - 真实模型：\n    $$A_{T} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 0 \\end{bmatrix}, \\quad\n      C_{T} = \\begin{bmatrix} 1.4 & 0.0 \\\\ 0.0 & 1.2 \\end{bmatrix}, \\quad\n      D_{T} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}, \\quad\n      \\Psi_{T} = \\begin{bmatrix} 0.5 \\\\ 0.25 \\end{bmatrix}.$$\n\n定义和要求：\n\n- 前瞻性变量的数量定义为 $\\text{rank}(A)$。\n- 广义特征值是求解 $\\det(C - \\lambda D) = 0$ 的 $\\lambda \\in \\mathbb{C}$。\n- 当且仅当模严格大于1的特征值数量等于前瞻性变量的数量时，存在唯一的有界理性预期解。\n- 对每个测试用例，计算：\n  1. $\\text{BK\\_simplified}$: 布尔值，指示简化模型是否允许唯一的有界解。\n  2. $\\text{BK\\_true}$: 布尔值，指示真实模型是否允许唯一的有界解。\n  3. $\\text{metric}$: 在信念 $\\mathbb{E}_{t}[y_{t+1}] = S_{b} y_{t}$ 下，当给定 $\\varepsilon_{0}$ 且对于 $t \\ge 1$ 时 $\\varepsilon_{t} = 0$ 的情况下，模拟真实模型时 $y_{t}$ 在 $t \\in \\{0,1,\\dots,40\\}$ 上的最大绝对分量。\n\n最终输出格式：\n\n- 您的程序应生成单行输出，其中包含一个含三个结果（每个测试用例一个）的列表，每个结果本身都是 $[\\text{BK\\_simplified}, \\text{BK\\_true}, \\text{metric}]$ 形式的列表。例如，打印的行必须如下所示\n  $$[\\,[\\text{True},\\text{False},x_{1}],\\,[\\text{True},\\text{True},x_{2}],\\,[\\text{True},\\text{False},x_{3}]\\,],$$\n  其中 $x_{1}, x_{2}, x_{3}$ 是由您的代码计算出的浮点数。", "solution": "所提出的问题是计算经济学中的一个有效练习，具体涉及线性理性预期模型的分析。该问题具有科学依据、提法恰当且客观。我们将给出一个完整的解决方案。\n\n该问题要求对三个测试用例完成两个不同的任务：首先，基于Blanchard-Kahn (BK) 条件，为“简化”模型和“真实”模型确定有界理性预期（RE）解的存在性和唯一性；其次，在经济代理人使用从“简化”模型导出的固定的、可能错误的预测规则来形成预期的假设下，模拟“真实”模型的动态过程。\n\n线性理性预期模型的一般形式由下式给出：\n$$A \\, \\mathbb{E}_{t}[y_{t+1}] + C \\, y_{t} = D \\, y_{t-1} + \\Psi \\, \\varepsilon_{t}$$\n其中 $y_{t} \\in \\mathbb{R}^{n}$ 是内生变量向量，$\\varepsilon_{t}$ 是独立同分布的零均值新息向量，$A, C, D \\in \\mathbb{R}^{n \\times n}$ 是参数矩阵。\n\n**第一部分：Blanchard-Kahn 条件验证**\n\n唯一、稳定（非爆炸性）的理性预期解的存在性使用 Blanchard-Kahn (BK) 确定性条件进行评估。该条件将前瞻性变量的数量与系统特征方程的不稳定根的数量联系起来。\n\n问题指定前瞻性变量的数量由 $k = \\text{rank}(A)$ 给出。\n系统的特征根是矩阵束 $(C, D)$ 的广义特征值 $\\lambda$，它们求解方程 $\\det(C - \\lambda D) = 0$。如果一个特征值 $\\lambda$ 的模严格大于1，即 $|\\lambda| > 1$，则认为它是不稳定的。令 $n_u$ 为这类不稳定特征值的数量。\n\n唯一且稳定的RE解的BK条件是，前瞻性变量的数量必须恰好等于不稳定特征值的数量：\n$$k = n_u$$\n如果 $k < n_u$，则不存在稳定解。如果 $k > n_u$，则存在无穷多个稳定解（不确定性）。\n\n我们将此条件应用于每个测试用例中的每个模型（简化模型和真实模型）。\n\n**第二部分：在错误信念下的模拟**\n\n第二个任务是模拟真实经济的动态路径。然而，代理人并不使用真实模型的理性预期解来形成预测。相反，他们使用一个简单的、固定的信念规则，由 $\\mathbb{E}_{t}[y_{t+1}] = S_{b} y_{t}$ 给出，其中 $S_{b}$ 是一个稳定矩阵（所有特征值的模都小于1）。\n\n我们将此信念规则代入真实模型的结构方程：\n$$A_T (S_{b} y_{t}) + C_T y_{t} = D_T y_{t-1} + \\Psi_T \\varepsilon_{t}$$\n对 $y_t$ 进行整理，得到在这些信念下的运动定律：\n$$(C_T + A_T S_{b}) y_{t} = D_T y_{t-1} + \\Psi_T \\varepsilon_{t}$$\n$$y_{t} = (C_T + A_T S_{b})^{-1} (D_T y_{t-1} + \\Psi_T \\varepsilon_{t})$$\n问题指定在 $t=0$ 时有一次性冲击 $\\varepsilon_0$ 且对于所有 $t \\ge 1$ 都有 $\\varepsilon_t=0$。初始条件是 $y_{-1}=0$。\n因此，系统的路径确定如下：\n对于 $t=0$：\n$$y_{0} = (C_T + A_T S_{b})^{-1} \\Psi_T \\varepsilon_{0}$$\n对于 $t \\ge 1$:\n$$y_{t} = M y_{t-1}, \\quad \\text{其中} \\quad M = (C_T + A_T S_{b})^{-1} D_T$$\n我们从 $t=0$ 到 $t=40$ 模拟这个路径，共 $T=40$ 个时期。所要求的度量指标是在整个模拟范围内，在 $y_t$ 的所有分量上观察到的最大绝对值：\n$$\\text{metric} = \\max_{t \\in \\{0, 1, \\dots, T\\}, i \\in \\{1, \\dots, n\\}} |(y_t)_i|$$\n\n我们现在为每个测试用例执行这些计算。在所有情况下，$n=2$，$T=40$，$\\varepsilon_0 = \\begin{bmatrix} 1.0 \\end{bmatrix}$，以及 $S_{b} = \\begin{bmatrix} 0.5 & 0.1 \\\\ 0.0 & 0.6 \\end{bmatrix}$。\n\n**测试用例 1**\n简化模型: $A_S = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}$, $C_S = \\begin{bmatrix} 1.2 & 0.0 \\\\ 0.0 & 1.1 \\end{bmatrix}$, $D_S = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}$。\n真实模型: $A_T = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}$, $C_T = \\begin{bmatrix} 1.2 & 0.0 \\\\ 0.0 & 0.8 \\end{bmatrix}$, $D_T = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}$, $\\Psi_T = \\begin{bmatrix} 0.5 \\\\ 0.25 \\end{bmatrix}$。\n\n-   $\\text{BK\\_simplified}$: $k = \\text{rank}(A_S) = 2$。$(C_S, D_S)$ 的特征值为 $\\{1.2, 1.1\\}$。两者的模都 $>1$，所以 $n_u=2$。由于 $k=n_u$，条件成立。$\\text{BK\\_simplified} = \\text{True}$。\n-   $\\text{BK\\_true}$: $k = \\text{rank}(A_T) = 2$。$(C_T, D_T)$ 的特征值为 $\\{1.2, 0.8\\}$。只有一个的模 $>1$，所以 $n_u=1$。由于 $k \\neq n_u$，条件不成立（不确定性）。$\\text{BK\\_true} = \\text{False}$。\n-   $\\text{metric}$: 运动定律由 $M = (C_T + A_T S_b)^{-1} D_T$ 驱动。系统是稳定的，最大绝对值出现在 $t=0$。计算得出 $y_0 \\approx \\begin{bmatrix} 0.2836 \\\\ 0.1786 \\end{bmatrix}$。度量指标约为 $0.2836134453781513$。\n\n**测试用例 2**\n简化模型: 与用例1相同。$\\text{BK\\_simplified} = \\text{True}$。\n真实模型: $A_T = \\begin{bmatrix} 1 & 0 \\\\ 0 & 0 \\end{bmatrix}$, $C_T = \\begin{bmatrix} 1.3 & 0.0 \\\\ 0.2 & 0.7 \\end{bmatrix}$, $D_T = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}$, $\\Psi_T = \\begin{bmatrix} 0.5 \\\\ 0.25 \\end{bmatrix}$。\n\n-   $\\text{BK\\_simplified}$: True，如上。\n-   $\\text{BK\\_true}$: $k = \\text{rank}(A_T) = 1$。$(C_T, D_T)$ 的特征值为 $\\{1.3, 0.7\\}$。只有一个的模 $>1$，所以 $n_u=1$。由于 $k=n_u$，条件成立。$\\text{BK\\_true} = \\text{True}$。\n-   $\\text{metric}$: 运动定律矩阵 $M = (C_T + A_T S_b)^{-1} D_T$ 有一个模大于1的特征值。系统不稳定并会爆炸。在 $T=40$ 个时期内的模拟将产生一个很大的值，受限于时间范围。度量指标约为 $1.205 \\times 10^{10}$。\n\n**测试用例 3**\n简化模型: 与用例1相同。$\\text{BK\\_simplified} = \\text{True}$。\n真实模型: $A_T = \\begin{bmatrix} 1 & 0 \\\\ 0 & 0 \\end{bmatrix}$, $C_T = \\begin{bmatrix} 1.4 & 0.0 \\\\ 0.0 & 1.2 \\end{bmatrix}$, $D_T = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix}$, $\\Psi_T = \\begin{bmatrix} 0.5 \\\\ 0.25 \\end{bmatrix}$。\n\n-   $\\text{BK\\_simplified}$: True, as above.\n-   $\\text{BK\\_true}$: $k = \\text{rank}(A_T) = 1$。$(C_T, D_T)$ 的特征值为 $\\{1.4, 1.2\\}$。两者的模都 $>1$，所以 $n_u=2$。由于 $k \\neq n_u$，条件不成立（无解）。$\\text{BK\\_true} = \\text{False}$。\n-   $\\text{metric}$: 运动定律矩阵 $M = (C_T + A_T S_b)^{-1} D_T$ 的所有特征值的模都小于1。系统是稳定的。最大绝对值出现在 $t=0$。计算得出 $y_0 \\approx \\begin{bmatrix} 0.2522 \\\\ 0.2083 \\end{bmatrix}$。度量指标约为 $0.25219298245614034$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import eig\n\ndef solve():\n    \"\"\"\n    Solves the problem by analyzing Blanchard-Kahn conditions and simulating\n    a linear rational expectations model under misspecified beliefs.\n    \"\"\"\n\n    # Common parameters for all test cases\n    S_b = np.array([[0.5, 0.1], [0.0, 0.6]])\n    eps0 = np.array([[1.0]])\n    T = 40\n\n    test_cases = [\n        {\n            \"name\": \"Case 1\",\n            \"A_S\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"C_S\": np.array([[1.2, 0.0], [0.0, 1.1]]),\n            \"D_S\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"A_T\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"C_T\": np.array([[1.2, 0.0], [0.0, 0.8]]),\n            \"D_T\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"Psi_T\": np.array([[0.5], [0.25]]),\n        },\n        {\n            \"name\": \"Case 2\",\n            \"A_S\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"C_S\": np.array([[1.2, 0.0], [0.0, 1.1]]),\n            \"D_S\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"A_T\": np.array([[1.0, 0.0], [0.0, 0.0]]),\n            \"C_T\": np.array([[1.3, 0.0], [0.2, 0.7]]),\n            \"D_T\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"Psi_T\": np.array([[0.5], [0.25]]),\n        },\n        {\n            \"name\": \"Case 3\",\n            \"A_S\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"C_S\": np.array([[1.2, 0.0], [0.0, 1.1]]),\n            \"D_S\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"A_T\": np.array([[1.0, 0.0], [0.0, 0.0]]),\n            \"C_T\": np.array([[1.4, 0.0], [0.0, 1.2]]),\n            \"D_T\": np.array([[1.0, 0.0], [0.0, 1.0]]),\n            \"Psi_T\": np.array([[0.5], [0.25]]),\n        },\n    ]\n\n    def check_bk_condition(A, C, D):\n        \"\"\"\n        Checks if the Blanchard-Kahn condition for a unique stable solution holds.\n        \"\"\"\n        num_forward_looking = np.linalg.matrix_rank(A)\n        try:\n            # right=False to solve lambda*D*x = C*x\n            # We want to solve det(C - lambda*D) = 0, so we need generalized eigenvalues\n            # of (C, D). scipy.linalg.eig solves A*v = lambda*B*v.\n            # So, we pass C for A and D for B.\n            eigenvalues = eig(C, D, right=False)\n        except np.linalg.LinAlgError:\n            # This can happen if D is singular.\n            # We must handle potentially infinite eigenvalues.\n            # A more robust solver from a specialized library would be needed for\n            # general cases, but for this problem, eig is sufficient.\n            # For this problem set, all D matrices are identity, so this path is not taken.\n            return False # Failsafe\n            \n        num_unstable_roots = np.sum(np.abs(eigenvalues) > 1.0)\n        return num_forward_looking == num_unstable_roots\n\n    def simulate_and_get_metric(A_T, C_T, D_T, Psi_T, S_b, eps0, T):\n        \"\"\"\n        Simulates the true model under the specified belief rule and finds the metric.\n        \"\"\"\n        # Law of motion: y_t = (C_T + A_T S_b)^-1 * (D_T y_{t-1} + Psi_T eps_t)\n        F = C_T + A_T @ S_b\n        try:\n            F_inv = np.linalg.inv(F)\n        except np.linalg.LinAlgError:\n            # F is singular, system is not well-defined. Return NaN.\n            return np.nan\n        \n        # Initial state y_0 (given y_-1 = 0)\n        y0 = F_inv @ Psi_T @ eps0\n        \n        # Transition matrix for t >= 1\n        M = F_inv @ D_T\n        \n        y_history = [y0]\n        y_current = y0\n        \n        # Simulate for T periods (from t=1 to t=T)\n        for _ in range(T):\n            y_next = M @ y_current\n            y_history.append(y_next)\n            y_current = y_next\n            \n        # The metric is the max absolute value over all components and all time\n        max_abs_val = np.max(np.abs(np.array(y_history)))\n        return max_abs_val\n\n    results = []\n    for case in test_cases:\n        bk_simplified = check_bk_condition(case[\"A_S\"], case[\"C_S\"], case[\"D_S\"])\n        bk_true = check_bk_condition(case[\"A_T\"], case[\"C_T\"], case[\"D_T\"])\n        metric = simulate_and_get_metric(\n            case[\"A_T\"], case[\"C_T\"], case[\"D_T\"], case[\"Psi_T\"], S_b, eps0, T\n        )\n        results.append([bk_simplified, bk_true, metric])\n\n    # Format the final output string precisely as requested.\n    # The output should not contain spaces after commas.\n    string_results = [f\"[{res[0]},{res[1]},{res[2]}]\" for res in results]\n    print(f\"[{','.join(string_results)}]\")\n\nsolve()\n```"}]}