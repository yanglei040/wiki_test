{"hands_on_practices": [{"introduction": "我们的第一个实践练习将深入探讨著名的默顿投资组合问题，这是连续时间金融学的基石。通过应用哈密尔顿-雅可比-贝尔曼（HJB）方程，您将为一位具有对数效用的投资者，分析并推导出其最优的恒定投资策略。这项练习对于掌握随机控制问题的求解机制，以及理解市场参数如何影响最优决策至关重要。[@problem_id:2416529]", "id": "2416529", "problem": "考虑一个包含两种资产的连续时间、无摩擦的金融市场。一种无风险资产（货币市场账户）$B_{t}$ 的演化遵循 $dB_{t} = r B_{t} \\, dt$，其中 $r \\ge 0$ 为恒定的无风险利率。一种风险资产 $S_{t}$ 遵循几何布朗运动，由 $dS_{t} = S_{t} \\left( \\mu \\, dt + \\sigma \\, dW_{t} \\right)$ 给出，其中 $\\mu > r$ 和 $\\sigma > 0$ 是常数，$\\{ W_{t} \\}_{t \\ge 0}$ 是在一个满足通常条件的带流概率空间上的标准布朗运动。一位初始财富为 $W_{0} = w > 0$ 的投资者选择一个消费过程 $\\{ c_{t} \\}_{t \\ge 0}$ 和一个投资组合过程 $\\{ \\pi_{t} \\}_{t \\ge 0}$，其中 $\\pi_{t}$ 表示在时间 $t$ 投资于风险资产的财富比例，剩余的比例 $1 - \\pi_{t}$ 投资于无风险资产。财富的演化如下：\n$$\ndW_{t} = \\left[ r W_{t} + \\pi_{t} W_{t} (\\mu - r) - c_{t} \\right] dt + \\pi_{t} W_{t} \\sigma \\, dW_{t},\n$$\n同时满足可行性要求，即对所有 $t \\ge 0$，几乎必然地有 $W_{t} \\ge 0$ 和 $c_{t} \\ge 0$，并且 $\\{ \\pi_{t}, c_{t} \\}$ 是循序可测和可积的，从而保证随机积分是良定的。\n\n投资者的消费偏好是时间可分的，其瞬时效用函数为 $U(c) = \\ln(c)$，主观贴现率为 $\\delta > 0$。目标是最大化期望贴现效用\n$$\n\\sup_{\\{ \\pi_{t}, c_{t} \\}_{t \\ge 0}} \\; \\mathbb{E} \\left[ \\int_{0}^{\\infty} \\exp(-\\delta t) \\, \\ln(c_{t}) \\, dt \\right].\n$$\n\n确定解决此问题的投资于风险资产的唯一恒定（不随时间和财富变化）最优财富比例 $\\pi^{\\star}$。请用 $\\mu$、$r$ 和 $\\sigma$ 将您的最终答案表示为单一的闭式解析表达式。无需四舍五入。答案中不要包含单位。", "solution": "所提出的问题是连续时间金融学中一个经典的、良定的问题，具体来说是无限时间 horizon下的 Merton 投资组合问题。该问题具有科学依据，数学上是良定的，并且所有参数和目标都陈述得清晰而精确。因此，它被认为是一个有效的问题。我们将使用动态规划方法来解决它，这会引出 Hamilton-Jacobi-Bellman (HJB) 方程。\n\n设 $J(W)$ 为值函数，表示当前财富为 $W$ 的投资者可实现的最大期望效用。由于是无限时间 horizon 和恒定参数，值函数与时间 $t$ 无关。其定义如下：\n$$\nJ(W) = \\sup_{\\{ \\pi_{t}, c_{t} \\}_{t \\ge 0}} \\; \\mathbb{E} \\left[ \\int_{0}^{\\infty} \\exp(-\\delta t) \\, \\ln(c_{t}) \\, dt \\;\\middle|\\; W_{0}=W \\right]\n$$\n状态变量是财富 $W_{t}$，控制变量是消费 $c_{t}$ 和投资于风险资产的财富比例 $\\pi_{t}$。财富的动态由以下随机微分方程给出：\n$$\ndW_{t} = \\left[ r W_{t} + \\pi_{t} W_{t} (\\mu - r) - c_{t} \\right] dt + \\pi_{t} W_{t} \\sigma \\, dW_{t}\n$$\n这个随机最优控制问题的 Hamilton-Jacobi-Bellman 方程是：\n$$\n\\delta J(W) = \\sup_{c \\ge 0, \\pi} \\left\\{ \\ln(c) + J'(W) \\left[ r W + \\pi W (\\mu - r) - c \\right] + \\frac{1}{2} J''(W) \\left( \\pi W \\sigma \\right)^{2} \\right\\}\n$$\n其中 $J'(W) = \\frac{dJ}{dW}$ 且 $J''(W) = \\frac{d^{2}J}{dW^{2}}$。左侧的 $\\delta J(W)$ 项代表最优策略必须产生的“流量价值”，以在时间上与总价值 $J(W)$ 相匹配，其中 $\\delta$ 是贴现率。右侧是消费的瞬时效用 $\\ln(c)$与值函数的期望瞬时变化之和的最大化，后者通过将过程的生成元应用于 $J(W)$ 得到。\n\n为了找到最优控制，我们对上确界内部的表达式关于 $c$ 和 $\\pi$ 求一阶条件。\n首先，对消费 $c$ 求导：\n$$\n\\frac{\\partial}{\\partial c} \\left( \\ln(c) - c J'(W) \\right) = \\frac{1}{c} - J'(W) = 0\n$$\n这得到最优消费规则：\n$$\nc^{\\star}(W) = \\frac{1}{J'(W)}\n$$\n二阶条件为 $-\\frac{1}{c^{2}} < 0$，这确认了它是一个最大值。\n\n接着，对投资组合比例 $\\pi$ 求导：\n$$\n\\frac{\\partial}{\\partial \\pi} \\left( J'(W) \\pi W (\\mu - r) + \\frac{1}{2} J''(W) \\pi^{2} W^{2} \\sigma^{2} \\right) = J'(W) W (\\mu - r) + J''(W) \\pi W^{2} \\sigma^{2} = 0\n$$\n解出 $\\pi$，我们得到最优投资组合规则：\n$$\n\\pi^{\\star}(W) = - \\frac{J'(W) W (\\mu - r)}{J''(W) W^{2} \\sigma^{2}} = - \\frac{\\mu - r}{\\sigma^{2}} \\frac{J'(W)}{W J''(W)}\n$$\n二阶条件要求 $J''(W) W^{2} \\sigma^{2} < 0$。由于 $W^{2} > 0$ 且 $\\sigma^{2} > 0$，这要求 $J''(W) < 0$。这与凹值函数相符，对于风险规避的投资者来说，这是符合预期的。\n\n问题的结构，即效用是对数形式且财富动态是乘性的，暗示值函数解的形式为：\n$$\nJ(W) = A \\ln(W) + B\n$$\n其中 $A$ 和 $B$ 是待定常数。凹性要求 $J''(W) < 0$ 意味着 $A > 0$。\n这个猜测的值函数的导数是：\n$$\nJ'(W) = \\frac{A}{W}\n$$\n$$\nJ''(W) = -\\frac{A}{W^{2}}\n$$\n将这些导数代入最优投资组合比例 $\\pi^{\\star}(W)$ 的表达式中：\n$$\n\\pi^{\\star} = - \\frac{\\mu - r}{\\sigma^{2}} \\frac{A/W}{W(-A/W^{2})} = - \\frac{\\mu - r}{\\sigma^{2}} \\frac{A/W}{-A/W} = \\frac{\\mu - r}{\\sigma^{2}}\n$$\n这个结果是一个常数，与财富 $W$ 和时间 $t$ 无关，这与问题要求的“唯一恒定最优比例”是一致的。问题只要求这个比例。\n\n为了完整起见，我们可以通过将最优控制和值函数的拟设代回 HJB 方程来确定常数 $A$。\n最优消费为 $c^{\\star} = \\frac{1}{J'(W)} = \\frac{W}{A}$。\nHJB 方程变为：\n$$\n\\delta (A \\ln(W) + B) = \\ln\\left(\\frac{W}{A}\\right) + \\frac{A}{W}\\left[ rW + \\left(\\frac{\\mu - r}{\\sigma^{2}}\\right)W(\\mu-r) - \\frac{W}{A} \\right] + \\frac{1}{2}\\left(-\\frac{A}{W^{2}}\\right)\\left(\\frac{\\mu - r}{\\sigma^{2}}\\right)^{2} W^{2} \\sigma^{2}\n$$\n简化表达式：\n$$\n\\delta A \\ln(W) + \\delta B = (\\ln(W) - \\ln(A)) + A\\left[r + \\frac{(\\mu-r)^{2}}{\\sigma^{2}} - \\frac{1}{A}\\right] - \\frac{A}{2}\\frac{(\\mu-r)^{2}}{\\sigma^{2}}\n$$\n$$\n\\delta A \\ln(W) + \\delta B = \\ln(W) - \\ln(A) + Ar + \\frac{A(\\mu-r)^{2}}{\\sigma^{2}} - 1 - \\frac{A(\\mu-r)^{2}}{2\\sigma^{2}}\n$$\n$$\n\\delta A \\ln(W) + \\delta B = \\ln(W) + \\left[ - \\ln(A) - 1 + Ar + \\frac{A(\\mu-r)^{2}}{2\\sigma^{2}} \\right]\n$$\n为了使此方程对所有 $W > 0$ 都成立，两边 $\\ln(W)$ 的系数和常数项必须相等。\n令 $\\ln(W)$ 的系数相等：\n$$\n\\delta A = 1 \\implies A = \\frac{1}{\\delta}\n$$\n由于 $\\delta > 0$，我们有 $A > 0$，这与我们早先对凹性的要求一致。\n常数 $B$ 的解的存在性证实了我们拟设的有效性，但它的值对于回答问题并非必要。投资于风险资产的最优财富比例仅取决于市场参数 $\\mu$、$r$ 和 $\\sigma$。\n\n因此，最终答案是为 $\\pi^{\\star}$ 推导出的常数表达式。", "answer": "$$\n\\boxed{\\frac{\\mu - r}{\\sigma^{2}}}\n$$"}, {"introduction": "在建立分析基础之后，本实践练习将转向计算实现。您将通过实施推导出的最优消费和投资组合规则的公式，来解决具有恒定相对风险厌恶（CRRA）效用的默顿问题，这是一种更普遍的偏好结构。该练习旨在弥合理论模型与实际定量结果之间的鸿沟，这在计算经济学和金融学中是一项至关重要的技能。[@problem_id:2414704]", "id": "2414704", "problem": "考虑一个无限期连续时间消费-投资问题。一位财富为 $w(t)$ 的代表性投资者，在每个时刻 $t \\ge 0$ 选择一个非负的消费率 $c(t) \\ge 0$ 和一个分配给风险资产的投资组合份额 $\\theta(t) \\in \\mathbb{R}$（其余部分投资于无风险资产）。无风险资产的恒定利率为 $r \\in \\mathbb{R}$，风险资产的恒定期望收益为 $\\mu \\in \\mathbb{R}$，波动率为 $\\sigma &gt; 0$。该投资者具有恒定相对风险厌恶（CRRA）偏好，其相对风险厌恶系数为 $\\gamma &gt; 0, \\gamma \\ne 1$，主观贴现率为 $\\rho &gt; 0$。瞬时消费效用为 $u(c) = \\frac{c^{1-\\gamma}}{1-\\gamma}$。财富过程遵循以下 Itô 随机微分方程\n$$\ndw(t) = \\big((r + \\theta(t)(\\mu - r))\\,w(t) - c(t)\\big)\\,dt + \\theta(t)\\,\\sigma\\,w(t)\\,dB(t),\n$$\n其中 $B(t)$ 是一个标准布朗运动。令 $V(w)$ 表示价值函数。此问题的 Hamilton-Jacobi-Bellman (HJB) 方程（Hamilton-Jacobi-Bellman (HJB)）为\n$$\n0 = \\sup_{c \\ge 0,\\ \\theta \\in \\mathbb{R}} \\left\\{ \\frac{c^{1-\\gamma}}{1-\\gamma} + V'(w)\\big((r + \\theta(\\mu - r))\\,w - c\\big) + \\frac{1}{2} V''(w)\\,\\theta^2 \\sigma^2 w^2 - \\rho V(w) \\right\\}.\n$$\n\n假设原始参数 $(r,\\mu,\\sigma,\\rho,\\gamma)$ 不随时间变化，且最优策略是平稳的并且对财富是齐次的。定义最优消费-财富比 $k^\\star := \\frac{c^\\star}{w}$ 和最优风险份额 $\\theta^\\star$。对于下面的每一组参数，计算由 HJB 最优性条件所蕴含的实数对 $(k^\\star,\\theta^\\star)$。您的程序应按测试集的顺序返回结果。\n\n测试集（每个元组为 $(\\rho,\\gamma,r,\\mu,\\sigma)$）：\n- 测试 1：$(0.05,\\,2.0,\\,0.02,\\,0.06,\\,0.2)$\n- 测试 2：$(0.04,\\,3.0,\\,0.02,\\,0.02,\\,0.25)$\n- 测试 3：$(0.06,\\,0.5,\\,0.01,\\,0.07,\\,0.3)$\n- 测试 4：$(0.04,\\,10.0,\\,0.03,\\,0.05,\\,0.2)$\n\n答案要求：\n- 对于每个测试，输出一个列表 $[k^\\star,\\theta^\\star]$，其中两个条目均需精确到 $6$ 位小数。\n- 将所有测试的结果汇总到一行，格式为一个用方括号括起来的逗号分隔列表。例如，总的输出格式必须是 $[[a_1,b_1],[a_2,b_2],[a_3,b_3],[a_4,b_4]]$，其中每个 $a_i$ 和 $b_i$ 都是精确到 $6$ 位小数的实数。", "solution": "用户提出了一个连续时间金融学的问题，具体来说是 Merton 投资组合问题。我的任务是验证其科学和数学上的完整性，如果有效，则推导解决方案并以计算方式实现它。\n\n### 步骤 1：提取已知条件\n问题提供了以下信息：\n-   **投资者目标**：最大化消费带来的终生期望效用。\n-   **期限**：无限期，连续时间 $t \\in [0, \\infty)$。\n-   **状态变量**：财富 $w(t)$。\n-   **控制变量**：消费率 $c(t) \\ge 0$，风险资产的投资组合份额 $\\theta(t) \\in \\mathbb{R}$。\n-   **资产**：\n    -   无风险资产，恒定利率 $r \\in \\mathbb{R}$。\n    -   风险资产，恒定期望收益 $\\mu \\in \\mathbb{R}$，波动率 $\\sigma > 0$。\n-   **财富动态（SDE）**：$dw(t) = \\big((r + \\theta(t)(\\mu - r))\\,w(t) - c(t)\\big)\\,dt + \\theta(t)\\,\\sigma\\,w(t)\\,dB(t)$。\n-   **偏好**：恒定相对风险厌恶（CRRA）效用 $u(c) = \\frac{c^{1-\\gamma}}{1-\\gamma}$，其中相对风险厌恶系数 $\\gamma > 0, \\gamma \\ne 1$，主观贴现率 $\\rho > 0$。\n-   **价值函数与 HJB 方程**：价值函数表示为 $V(w)$，其支配性的 Hamilton-Jacobi-Bellman (HJB) 方程是：\n    $$\n    0 = \\sup_{c \\ge 0,\\ \\theta \\in \\mathbb{R}} \\left\\{ \\frac{c^{1-\\gamma}}{1-\\gamma} + V'(w)\\big((r + \\theta(\\mu - r))\\,w - c\\big) + \\frac{1}{2} V''(w)\\,\\theta^2 \\sigma^2 w^2 - \\rho V(w) \\right\\}\n    $$\n-   **解的形式**：假设最优策略是平稳且齐次的，定义了最优消费-财富比 $k^\\star := \\frac{c^\\star}{w}$ 和最优风险份额 $\\theta^\\star$。\n-   **测试集**：提供了一组四个参数元组 $(\\rho,\\gamma,r,\\mu,\\sigma)$ 用于计算。\n    -   测试 1：$(0.05,\\,2.0,\\,0.02,\\,0.06,\\,0.2)$\n    -   测试 2：$(0.04,\\,3.0,\\,0.02,\\,0.02,\\,0.25)$\n    -   测试 3：$(0.06,\\,0.5,\\,0.01,\\,0.07,\\,0.3)$\n    -   测试 4：$(0.04,\\,10.0,\\,0.03,\\,0.05,\\,0.2)$\n\n### 步骤 2：使用已知条件进行验证\n对该问题进行验证。\n-   **科学依据**：该问题是 Merton 投资组合问题的经典表述，是金融经济学中的一个基础模型。它坚实地基于随机微积分、最优控制理论和微观经济效用理论的原理。该问题在科学上是合理的。\n-   **适定性**：该问题是适定的。对于给定的 CRRA 效用函数和线性资产动态，已知存在唯一且稳定的最优控制解，前提是满足某些横截性条件（此处已隐式假设）。\n-   **客观性**：该问题使用精确的数学语言陈述，没有任何主观或模棱两可的术语。\n-   **完整性与一致性**：所有必需的参数和函数形式都已提供。内部没有矛盾。\n\n### 步骤 3：结论与行动\n该问题被判定为有效。它是数学金融学中一个标准的、定义明确的问题。我现在将进行完整的求解。\n\n### 基于原理的求解推导\n\n通过求解 HJB 方程来找到最优控制变量 $c$ 和 $\\theta$ 的解。这是通过对上确界内部的项应用最大化的一阶条件（FOCs）来实现的。\n\n1.  **一阶条件（FOCs）**：\n    我们将哈密尔顿量分别对 $c$ 和 $\\theta$ 求偏导，并令其等于零。\n\n    关于消费 $c$ 的一阶条件：\n    $$ \\frac{\\partial}{\\partial c} \\left( \\frac{c^{1-\\gamma}}{1-\\gamma} - V'(w)c \\right) = c^{-\\gamma} - V'(w) = 0 $$\n    $$ \\implies c^\\star(w) = (V'(w))^{-1/\\gamma} $$\n\n    关于风险份额 $\\theta$ 的一阶条件：\n    $$ \\frac{\\partial}{\\partial \\theta} \\left( V'(w)\\theta(\\mu-r)w + \\frac{1}{2}V''(w)\\theta^2\\sigma^2w^2 \\right) = V'(w)(\\mu-r)w + V''(w)\\theta\\sigma^2w^2 = 0 $$\n    $$ \\implies \\theta^\\star(w) = -\\frac{V'(w)(\\mu-r)w}{V''(w)\\sigma^2w^2} = -\\frac{\\mu-r}{\\sigma^2w} \\frac{V'(w)}{V''(w)} $$\n    二阶条件要求 $V''(w) < 0$，这证实了价值函数必须是凹的，与风险厌恶相一致。\n\n2.  **价值函数猜想**：\n    鉴于 CRRA 效用和问题的尺度不变性，我们推测价值函数的解具有以下形式：\n    $$ V(w) = A \\frac{w^{1-\\gamma}}{1-\\gamma} $$\n    其中 $A > 0$ 为某个常数。其导数为：\n    $$ V'(w) = A w^{-\\gamma} $$\n    $$ V''(w) = -\\gamma A w^{-\\gamma - 1} $$\n\n3.  **求解最优控制**：\n    将价值函数的导数代入 $c^\\star$ 和 $\\theta^\\star$ 的一阶条件。\n\n    对于最优消费-财富比 $k^\\star$：\n    $$ c^\\star(w) = (A w^{-\\gamma})^{-1/\\gamma} = A^{-1/\\gamma}w $$\n    最优消费是财富的一个恒定比例。我们将此比例定义为 $k^\\star$：\n    $$ k^\\star = \\frac{c^\\star}{w} = A^{-1/\\gamma} $$\n\n    对于最优风险份额 $\\theta^\\star$：\n    $$ \\theta^\\star = -\\frac{\\mu-r}{\\sigma^2w} \\frac{A w^{-\\gamma}}{-\\gamma A w^{-\\gamma - 1}} = \\frac{\\mu-r}{\\gamma\\sigma^2w} \\frac{w^{-\\gamma}}{w^{-\\gamma-1}} = \\frac{\\mu-r}{\\gamma\\sigma^2w} w = \\frac{\\mu-r}{\\gamma\\sigma^2} $$\n    最优风险份额 $\\theta^\\star$ 是一个常数，与财富无关。\n\n4.  **求解 HJB 方程**：\n    将最优控制（$c^\\star = k^\\star w$, $\\theta^\\star$）和价值函数猜想代入 HJB 方程。优化后，HJB 方程为：\n    $$ \\rho V(w) = \\frac{(c^\\star)^{1-\\gamma}}{1-\\gamma} + V'(w)\\left[(r + \\theta^\\star(\\mu-r))w - c^\\star\\right] + \\frac{1}{2}V''(w)(\\theta^\\star)^2\\sigma^2w^2 $$\n    与最优投资组合相关的项简化为：\n    $$ V'(w)(r + \\theta^\\star(\\mu-r))w + \\frac{1}{2}V''(w)(\\theta^\\star)^2\\sigma^2w^2 = V'(w)w \\left( r + \\frac{(\\mu-r)^2}{2\\gamma\\sigma^2} \\right) $$\n    与消费相关的项简化为：\n    $$ \\frac{(c^\\star)^{1-\\gamma}}{1-\\gamma} - V'(w)c^\\star = \\frac{(k^\\star w)^{1-\\gamma}}{1-\\gamma} - (Aw^{-\\gamma})(k^\\star w) = \\frac{(A^{-1/\\gamma}w)^{1-\\gamma}}{1-\\gamma} - A k^\\star w^{1-\\gamma} $$\n    $$ = \\frac{A^{-(1-\\gamma)/\\gamma}w^{1-\\gamma}}{1-\\gamma} - A (A^{-1/\\gamma}) w^{1-\\gamma} = \\frac{A^{-1/\\gamma} A w^{1-\\gamma}}{1-\\gamma} - A^{1-1/\\gamma} w^{1-\\gamma} = A^{1-1/\\gamma}w^{1-\\gamma}\\left(\\frac{1}{1-\\gamma} - 1\\right) = A^{1-1/\\gamma}w^{1-\\gamma}\\frac{\\gamma}{1-\\gamma} $$\n    使用 $k^\\star = A^{-1/\\gamma}$，此式为 $k^\\star A w^{1-\\gamma} \\frac{\\gamma}{1-\\gamma}$。\n\n    完整的 HJB 方程变为：\n    $$ \\rho A \\frac{w^{1-\\gamma}}{1-\\gamma} = k^\\star A w^{1-\\gamma} \\frac{\\gamma}{1-\\gamma} + A w^{1-\\gamma} \\left( r + \\frac{(\\mu-r)^2}{2\\gamma\\sigma^2} \\right) $$\n    两边同除以 $A w^{1-\\gamma}$：\n    $$ \\frac{\\rho}{1-\\gamma} = \\frac{k^\\star \\gamma}{1-\\gamma} + r + \\frac{(\\mu-r)^2}{2\\gamma\\sigma^2} $$\n    两边同乘以 $(1-\\gamma)$：\n    $$ \\rho = k^\\star \\gamma + (1-\\gamma)\\left( r + \\frac{(\\mu-r)^2}{2\\gamma\\sigma^2} \\right) $$\n    现在，求解 $k^\\star$：\n    $$ k^\\star \\gamma = \\rho - (1-\\gamma)r - \\frac{(1-\\gamma)(\\mu-r)^2}{2\\gamma\\sigma^2} $$\n    $$ k^\\star = \\frac{1}{\\gamma}\\left[ \\rho - (1-\\gamma)r - \\frac{(1-\\gamma)(\\mu-r)^2}{2\\gamma\\sigma^2} \\right] $$\n\n5.  **用于计算的最终公式**：\n    最优的恒定风险份额为：\n    $$ \\theta^\\star = \\frac{\\mu - r}{\\gamma \\sigma^2} $$\n    最优的恒定消费-财富比为：\n    $$ k^\\star = \\frac{1}{\\gamma}\\left[ \\rho - (1-\\gamma)r - \\frac{(1-\\gamma)(\\mu-r)^2}{2\\gamma\\sigma^2} \\right] $$\n    现在将这些公式应用于每个测试用例。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the optimal consumption-wealth ratio (k_star) and\n    risky asset share (theta_star) in the Merton's portfolio problem\n    for a given set of parameters.\n    \"\"\"\n    \n    # Test suite: each tuple is (rho, gamma, r, mu, sigma)\n    test_cases = [\n        (0.05, 2.0, 0.02, 0.06, 0.2),   # Test 1\n        (0.04, 3.0, 0.02, 0.02, 0.25),  # Test 2\n        (0.06, 0.5, 0.01, 0.07, 0.3),   # Test 3\n        (0.04, 10.0, 0.03, 0.05, 0.2),  # Test 4\n    ]\n\n    results = []\n    for case in test_cases:\n        rho, gamma, r, mu, sigma = case\n\n        # Ensure parameters are floats for precision\n        rho, gamma, r, mu, sigma = float(rho), float(gamma), float(r), float(mu), float(sigma)\n\n        # Calculate the optimal risky share theta_star\n        # theta_star = (mu - r) / (gamma * sigma^2)\n        try:\n            theta_star = (mu - r) / (gamma * sigma**2)\n        except ZeroDivisionError:\n            # Handle cases where sigma or gamma are zero, although problem constraints are > 0\n            theta_star = float('nan')\n\n        # Calculate the optimal consumption-wealth ratio k_star\n        # k_star = (1/gamma) * [rho - (1-gamma)*r - ((1-gamma)*(mu-r)^2) / (2*gamma*sigma^2)]\n        mu_minus_r_sq = (mu - r)**2\n        try:\n            term3 = (1 - gamma) * mu_minus_r_sq / (2 * gamma * sigma**2)\n            k_star = (1 / gamma) * (rho - (1 - gamma) * r - term3)\n        except ZeroDivisionError:\n            k_star = float('nan')\n\n        # The problem asks for the pair [k_star, theta_star]\n        results.append([k_star, theta_star])\n\n    # Format the final output string exactly as required.\n    # Each number is rounded to exactly 6 decimal places.\n    formatted_results = []\n    for k, t in results:\n        formatted_results.append(f\"[{k:.6f},{t:.6f}]\")\n    \n    final_output_string = f\"[{','.join(formatted_results)}]\"\n    \n    # Final print statement in the exact required format.\n    print(final_output_string)\n\nsolve()\n```"}, {"introduction": "为了展示最优控制的多功能性，我们最后的实践将跳出金融领域，进入一个更贴近生活的场景：优化学习时间。您将把学生的学习过程建模为一个受控的随机过程，并使用HJB框架来寻找能最大化期望绩点（GPA）的时间分配策略。这个问题展示了如何将同样强大的数学工具应用于解决各种动态优化挑战。[@problem_id:2416576]", "id": "2416576", "problem": "考虑一个学生在固定的时间区间 $[0,T]$ 内，将连续的学习时间分配给两门科目，科目索引为 $i \\in \\{1,2\\}$。设 $X_i(t)$ 表示学生在时间 $t$ 对科目 $i$ 的理解程度，并设 $u(t) \\in [0,1]$ 表示在时间 $t$ 投入到科目1的瞬时学习精力的比例（因此科目2获得 $1-u(t)$ 的比例）。理解程度的动态过程被建模为受控的 Itô 过程\n$$\n\\mathrm{d}X_1(t) = \\left(-b_1 X_1(t) + a_1 u(t)\\right)\\mathrm{d}t + \\sigma_1 \\mathrm{d}W_1(t), \\quad\n\\mathrm{d}X_2(t) = \\left(-b_2 X_2(t) + a_2 \\left(1 - u(t)\\right)\\right)\\mathrm{d}t + \\sigma_2 \\mathrm{d}W_2(t),\n$$\n其中 $W_1(t)$ 和 $W_2(t)$ 是相互独立的标准布朗运动，$a_1,a_2 \\ge 0$ 是学习效率系数，$b_1,b_2 \\ge 0$ 是遗忘率，$\\sigma_1,\\sigma_2 \\ge 0$ 是波动率参数。期末平均学分绩（GPA）的代理模型被建模为线性收益\n$$\nG = \\varphi_1 X_1(T) + \\varphi_2 X_2(T),\n$$\n权重 $\\varphi_1,\\varphi_2 > 0$。目标是选择一个容许控制 $u(\\cdot)$，该控制是可测的且适应于由 $(W_1,W_2)$ 生成的滤子（filtration），以最大化预期期末GPA $\\mathbb{E}[G]$。\n\n您的任务是编写一个完整的、可运行的程序，对于下面每个参数集，在给定初始状态 $(X_1(0),X_2(0)) = (x_{10},x_{20})$ 的情况下，计算最优预期期末GPA $\\sup_{u(\\cdot)\\in[0,1]} \\mathbb{E}[G]$。题目不涉及角度，也没有物理单位；将所有数值答案报告为浮点数。\n\n请使用以下参数值测试集。对于每个测试用例 $k$，参数按以下顺序排列\n$(a_1,a_2,b_1,b_2,\\sigma_1,\\sigma_2,\\varphi_1,\\varphi_2,T,x_{10},x_{20})$：\n\n- 测试1（一般情况）：$(1.0,0.8,0.2,0.3,0.3,0.2,2.0,1.5,2.0,0.5,0.7)$。\n- 测试2（边界情况，零时间区间）：$(1.0,1.2,0.1,0.3,0.0,0.0,1.0,1.0,0.0,1.0,2.0)$。\n- 测试3（边际效率相等，遗忘率相同）：$(1.0,0.4,0.5,0.5,0.5,0.1,1.0,2.5,3.0,0.0,0.0)$。\n- 测试4（最优分配中的内部切换）：$(1.0,1.0,0.2,1.0,0.2,0.4,1.0,2.0,2.0,0.0,0.0)$。\n- 测试5（一门科目学习率为零，另一门科目遗忘率为零）：$(0.0,1.0,0.3,0.0,0.7,0.5,1.0,1.0,1.5,0.2,0.1)$。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的、以逗号分隔的结果列表（例如，$[3.141593,2.718282]$），其中第 $k$ 个条目是测试 $k$ 的最优预期期末GPA，每个条目都报告为四舍五入到六位小数的浮点数。", "solution": "在尝试任何解法之前，需要对问题陈述进行验证。\n\n步骤1：提取已知条件\n- 状态变量：$X_1(t)$，$X_2(t)$。\n- 控制变量：$u(t) \\in [0,1]$。\n- 状态动态方程：\n$$\n\\mathrm{d}X_1(t) = \\left(-b_1 X_1(t) + a_1 u(t)\\right)\\mathrm{d}t + \\sigma_1 \\mathrm{d}W_1(t)\n$$\n$$\n\\mathrm{d}X_2(t) = \\left(-b_2 X_2(t) + a_2 \\left(1 - u(t)\\right)\\right)\\mathrm{d}t + \\sigma_2 \\mathrm{d}W_2(t)\n$$\n- $W_1(t), W_2(t)$ 是独立标准布朗运动。\n- 参数：$a_1, a_2, b_1, b_2, \\sigma_1, \\sigma_2 \\ge 0$，$\\varphi_1, \\varphi_2 > 0$。\n- 时间区间：$[0, T]$。\n- 期末收益：$G = \\varphi_1 X_1(T) + \\varphi_2 X_2(T)$。\n- 目标：最大化 $\\mathbb{E}[G]$。\n- 初始状态：$(X_1(0), X_2(0)) = (x_{10}, x_{20})$。\n- 测试用例：提供了五组不同的参数集。\n\n步骤2：使用提取的已知条件进行验证\n- **科学依据**：该问题是一个标准的随机最优控制问题，具有线性动态（受控的 Ornstein-Uhlenbeck 过程）和线性目标函数。这是金融工程和经济学中一个成熟的模型，被称为 Merton 型问题。它在数学上和科学上都是合理的。\n- **适定性**：该问题是适定的。动态是线性的，目标是线性的，且控制被约束在一个紧集上。适用于此类问题的标准存在唯一性定理。Hamilton-Jacobi-Bellman (HJB) 框架可直接应用。\n- **客观性**：问题陈述具有精确的数学定义，没有歧义或主观内容。\n- **缺陷分析**：该问题不违反任何基本原理，不是比喻性的，是完整和一致的，不是物理上不可行的，结构良好，并且是科学上可验证的。所有指定参数都在有效范围内。\n\n步骤3：结论与行动\n问题是**有效的**。将推导解答。\n\n该问题旨在寻找学习时间 $u(t)$ 的最优分配，以最大化预期期末GPA。这是一个连续时间随机最优控制问题。解决此类问题的标准方法是 Hamilton-Jacobi-Bellman (HJB) 方程。\n\n设 $V(t, x_1, x_2)$ 为值函数，表示在给定状态 $(X_1(t), X_2(t)) = (x_1, x_2)$ 下的最大预期期末GPA。\n$$ V(t, x_1, x_2) = \\sup_{u(\\cdot) \\in [0,1]} \\mathbb{E}_{t,x_1,x_2} \\left[ \\varphi_1 X_1(T) + \\varphi_2 X_2(T) \\right] $$\n值函数必须满足由收益函数给出的终端条件：\n$$ V(T, x_1, x_2) = \\varphi_1 x_1 + \\varphi_2 x_2 $$\n此问题的 HJB 方程为：\n$$ \\frac{\\partial V}{\\partial t} + \\sup_{u \\in [0,1]} \\left\\{ \\left(-b_1 x_1 + a_1 u\\right) \\frac{\\partial V}{\\partial x_1} + \\left(-b_2 x_2 + a_2(1-u)\\right) \\frac{\\partial V}{\\partial x_2} + \\frac{1}{2} \\sigma_1^2 \\frac{\\partial^2 V}{\\partial x_1^2} + \\frac{1}{2} \\sigma_2^2 \\frac{\\partial^2 V}{\\partial x_2^2} \\right\\} = 0 $$\n交叉导数项不存在，因为布朗运动 $W_1(t)$ 和 $W_2(t)$ 是相互独立的。\n\n鉴于动态方程和终端条件的线性结构，我们为值函数提出一个线性拟设（ansatz）：\n$$ V(t, x_1, x_2) = p_1(t) x_1 + p_2(t) x_2 + q(t) $$\n偏导数如下：\n$$ \\frac{\\partial V}{\\partial t} = p_1'(t) x_1 + p_2'(t) x_2 + q'(t), \\quad \\frac{\\partial V}{\\partial x_1} = p_1(t), \\quad \\frac{\\partial V}{\\partial x_2} = p_2(t), \\quad \\frac{\\partial^2 V}{\\partial x_1^2} = 0, \\quad \\frac{\\partial^2 V}{\\partial x_2^2} = 0 $$\n一个关键的观察是二阶导数均为零。因此，涉及 $\\sigma_1$ 和 $\\sigma_2$ 的项在 HJB 方程中消失了。这意味着最优控制和期望值与波动率参数无关，这是具有线性目标（风险中性）问题的一个特征。\n\n将导数代入 HJB 方程：\n$$ p_1' x_1 + p_2' x_2 + q' + \\sup_{u \\in [0,1]} \\left\\{ (-b_1 x_1 + a_1 u) p_1 + (-b_2 x_2 + a_2(1-u)) p_2 \\right\\} = 0 $$\n我们可以分离出包含控制变量 $u$ 的项：\n$$ (p_1' - b_1 p_1) x_1 + (p_2' - b_2 p_2) x_2 + q' + a_2 p_2 + \\sup_{u \\in [0,1]} \\left\\{ u \\left( a_1 p_1 - a_2 p_2 \\right) \\right\\} = 0 $$\n为了使该方程对所有 $x_1, x_2$ 均成立，$x_1$ 和 $x_2$ 的系数必须为零。这为 $p_1(t)$ 和 $p_2(t)$ 产生了一个常微分方程（ODE）组：\n$$ p_1'(t) - b_1 p_1(t) = 0 \\implies p_1'(t) = b_1 p_1(t) $$\n$$ p_2'(t) - b_2 p_2(t) = 0 \\implies p_2'(t) = b_2 p_2(t) $$\n从终端条件 $V(T, x_1, x_2) = \\varphi_1 x_1 + \\varphi_2 x_2$，我们得到常微分方程的终端条件：$p_1(T) = \\varphi_1$ 和 $p_2(T) = \\varphi_2$。我们还设置 $q(T)=0$。\n求解这些逆时 ODE 得到：\n$$ p_1(t) = \\varphi_1 e^{-b_1(T-t)} $$\n$$ p_2(t) = \\varphi_2 e^{-b_2(T-t)} $$\n最优控制 $u^*(t)$ 的选择是为了最大化项 $u(a_1 p_1(t) - a_2 p_2(t))$。这是关于 $u \\in [0,1]$ 的一个线性函数。因此，最优控制具有“砰-砰”（bang-bang）性质：\n$$ u^*(t) = \\begin{cases} 1 & \\text{若 } a_1 p_1(t) - a_2 p_2(t) > 0 \\\\ 0 & \\text{若 } a_1 p_1(t) - a_2 p_2(t) < 0 \\\\ \\text{任意 } u \\in [0,1] & \\text{若 } a_1 p_1(t) - a_2 p_2(t) = 0 \\end{cases} $$\n切换函数 $S(t) = a_1 p_1(t) - a_2 p_2(t)$ 决定了资源分配。上确界的值为 $\\max(a_1 p_1(t) - a_2 p_2(t), 0)$。\nHJB 方程的剩余部分给出了 $q(t)$ 的 ODE：\n$$ q'(t) + a_2 p_2(t) + \\max(a_1 p_1(t) - a_2 p_2(t), 0) = 0 $$\n这可以简化为：\n$$ q'(t) + \\max(a_1 p_1(t), a_2 p_2(t)) = 0 $$\n从 $t$ 到 $T$ 积分，并设 $q(T)=0$，我们得到 $q(t)$：\n$$ q(t) = \\int_t^T \\max(a_1 p_1(\\tau), a_2 p_2(\\tau)) d\\tau $$\n我们要求的量是时间 $t=0$ 时的值函数 $V(0, x_{10}, x_{20})$：\n$$ V(0, x_{10}, x_{20}) = p_1(0)x_{10} + p_2(0)x_{20} + q(0) $$\n代入 $p_1(0)$，$p_2(0)$ 和 $q(0)$ 的表达式：\n$$ \\sup \\mathbb{E}[G] = \\varphi_1 e^{-b_1 T} x_{10} + \\varphi_2 e^{-b_2 T} x_{20} + \\int_0^T \\max\\left(a_1 \\varphi_1 e^{-b_1(T-\\tau)}, a_2 \\varphi_2 e^{-b_2(T-\\tau)}\\right) d\\tau $$\n要计算该积分，我们必须找到最大值函数内部的两个函数是否相等以及在何处相等。设 $f_1(\\tau) = a_1 \\varphi_1 e^{-b_1(T-\\tau)}$ 和 $f_2(\\tau) = a_2 \\varphi_2 e^{-b_2(T-\\tau)}$。当 $f_1(\\tau^*) = f_2(\\tau^*)$ 时，存在一个潜在的切换时间 $\\tau^* \\in [0,T]$。\n如果 $b_1 \\neq b_2$ 且 $a_1, a_2, \\varphi_1, \\varphi_2 > 0$，这发生在：\n$$ \\tau^* = T - \\frac{1}{b_1 - b_2} \\ln\\left(\\frac{a_1 \\varphi_1}{a_2 \\varphi_2}\\right) $$\n如果 $0 < \\tau^* < T$，则积分被分成两部分。否则，其中一个函数在整个区间 $[0,T]$ 上占优。每个分量函数的积分都可以解析计算。设 $C_i = a_i\\varphi_i$。对于 $b_i \\neq 0$，不定积分为 $\\int C_i e^{-b_i(T-\\tau)} d\\tau = \\frac{C_i}{b_i} e^{-b_i(T-\\tau)}$。对于 $b_i=0$，积分为 $\\int C_i d\\tau = C_i \\tau$。最终的最优预期GPA通过将初始状态的贡献与控制积分的计算值相加得到。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the student's optimal study allocation problem for a given set of test cases.\n    \"\"\"\n\n    test_cases = [\n        # (a1, a2, b1, b2, sigma1, sigma2, phi1, phi2, T, x10, x20)\n        (1.0, 0.8, 0.2, 0.3, 0.3, 0.2, 2.0, 1.5, 2.0, 0.5, 0.7),  # Test 1\n        (1.0, 1.2, 0.1, 0.3, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 2.0),  # Test 2\n        (1.0, 0.4, 0.5, 0.5, 0.5, 0.1, 1.0, 2.5, 3.0, 0.0, 0.0),  # Test 3\n        (1.0, 1.0, 0.2, 1.0, 0.2, 0.4, 1.0, 2.0, 2.0, 0.0, 0.0),  # Test 4\n        (0.0, 1.0, 0.3, 0.0, 0.7, 0.5, 1.0, 1.0, 1.5, 0.2, 0.1),  # Test 5\n    ]\n\n    results = []\n    for params in test_cases:\n        result = calculate_optimal_gpa(params)\n        results.append(f\"{result:.6f}\")\n\n    print(f\"[{','.join(results)}]\")\n\ndef calculate_optimal_gpa(params):\n    \"\"\"\n    Calculates the optimal expected GPA for a single set of parameters.\n    The formula is V(0, x10, x20) = p1(0)*x10 + p2(0)*x20 + q(0),\n    where:\n    p1(0) = phi1 * exp(-b1*T)\n    p2(0) = phi2 * exp(-b2*T)\n    q(0) = integral from 0 to T of max(f1(tau), f2(tau)) d(tau)\n    f1(tau) = a1*phi1*exp(-b1*(T-tau))\n    f2(tau) = a2*phi2*exp(-b2*(T-tau))\n    \"\"\"\n    (a1, a2, b1, b2, _, _, phi1, phi2, T, x10, x20) = params\n\n    # Contribution from the initial state\n    initial_gpa = phi1 * np.exp(-b1 * T) * x10 + phi2 * np.exp(-b2 * T) * x20\n\n    if T == 0:\n        return initial_gpa\n\n    # Helper function to compute the definite integral of f_i(tau) from c to d\n    def integrate_f(a, b, phi, T_val, c, d):\n        if d <= c:\n            return 0.0\n        \n        # Marginal effectiveness\n        C = a * phi\n        if C == 0:\n            return 0.0\n\n        if b == 0:\n            return C * (d - c)\n        else:\n            # Integral of C*exp(-b*(T-tau)) dtau is (C/b)*exp(-b*(T-tau))\n            val_at_d = (C / b) * np.exp(-b * (T_val - d))\n            val_at_c = (C / b) * np.exp(-b * (T_val - c))\n            return val_at_d - val_at_c\n\n    # Contribution from the optimal control\n    control_integral = 0.0\n    \n    C1 = a1 * phi1\n    C2 = a2 * phi2\n\n    # If one subject has zero marginal effectiveness, always focus on the other\n    if C1 <= 0:\n        control_integral = integrate_f(a2, b2, phi2, T, 0, T)\n    elif C2 <= 0:\n        control_integral = integrate_f(a1, b1, phi1, T, 0, T)\n    # Case with identical decay rates\n    elif b1 == b2:\n        if C1 >= C2:\n            control_integral = integrate_f(a1, b1, phi1, T, 0, T)\n        else:\n            control_integral = integrate_f(a2, b2, phi2, T, 0, T)\n    # General case with different decay rates\n    else:\n        # Switching time tau_star is where f1(tau) = f2(tau)\n        tau_star = T - np.log(C1 / C2) / (b1 - b2)\n\n        if tau_star <= 0:\n            # Switch is at or before t=0. One function dominates over [0,T].\n            # h(tau) = f1/f2 is monotonic. Sign at tau=0 determines dominance.\n            if b1 > b2:  # h(tau) is increasing. f1>f2 for tau > tau_star.\n                control_integral = integrate_f(a1, b1, phi1, T, 0, T)\n            else:  # b1 < b2, h(tau) is decreasing. f2>f1 for tau > tau_star.\n                control_integral = integrate_f(a2, b2, phi2, T, 0, T)\n        elif tau_star >= T:\n            # Switch is at or after t=T. One function dominates over [0,T].\n            if b1 > b2: # h(tau) is increasing. f2>f1 for tau < tau_star.\n                control_integral = integrate_f(a2, b2, phi2, T, 0, T)\n            else: # b1 < b2, h(tau) is decreasing. f1>f2 for tau < tau_star.\n                control_integral = integrate_f(a1, b1, phi1, T, 0, T)\n        else:\n            # Interior switch at tau_star. Integral is split.\n            if b1 > b2: # h increases, f2>f1 before tau_star, f1>f2 after\n                integ1 = integrate_f(a2, b2, phi2, T, 0, tau_star)\n                integ2 = integrate_f(a1, b1, phi1, T, tau_star, T)\n                control_integral = integ1 + integ2\n            else: # b1 < b2, h decreases, f1>f2 before, f2>f1 after\n                integ1 = integrate_f(a1, b1, phi1, T, 0, tau_star)\n                integ2 = integrate_f(a2, b2, phi2, T, tau_star, T)\n                control_integral = integ1 + integ2\n\n    return initial_gpa + control_integral\n\nif __name__ == '__main__':\n    solve()\n\n```"}]}