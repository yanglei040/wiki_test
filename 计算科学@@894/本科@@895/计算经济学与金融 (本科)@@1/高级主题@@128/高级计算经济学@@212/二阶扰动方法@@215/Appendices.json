{"hands_on_practices": [{"introduction": "在我们应用二阶微扰法之前，首先必须掌握计算模型动态所需的核心二阶导数。本练习将引导你为具有不同生产函数（Cobb-Douglas 与 CES）的经济体推导这些关键导数，让你亲身体验模型的深层结构（如替代弹性）如何直接影响资本的风险调整漂移等关键动态特性。这是一个基本功的训练，为你后续更复杂的应用打下坚实的微积分基础。[@problem_id:2428838]", "id": "2428838", "problem": "考虑一个离散时间的资本积累经济，其劳动供给为非弹性，并归一化为1。设资本的运动定律由映射 $g$ 给出，定义为 $k_{t+1} = g(k_t,s_t)$，其中 $k_t$ 是时间 $t$ 的资本，$s_t$ 是时间 $t$ 的技术冲击。技术 $z_t$ 以乘法形式进入，即 $z_t = \\exp(s_t)$。资本积累映射为\n$$\ng(k,s) = \\bar{s}\\,\\exp(s)\\,F(k) + (1 - \\delta)\\,k,\n$$\n其中 $\\bar{s} \\in (0,1)$ 是一个恒定的储蓄率，$\\delta \\in (0,1)$ 是折旧率。生产函数 $F$ 是恒定替代弹性（CES）函数，劳动为单位量，其参数为替代弹性 $\\sigma \\in (0,\\infty)$ 和份额参数 $\\nu \\in (0,1)$，形式如下。对于 $\\sigma \\neq 1$，令 $\\rho = 1 - \\frac{1}{\\sigma}$ 并定义\n$$\nF(k) = \\left(\\nu\\,k^{\\rho} + (1-\\nu)\\right)^{\\tfrac{1}{\\rho}}.\n$$\n对于 $\\sigma = 1$，将生产函数解释为 Cobb–Douglas 极限\n$$\nF(k) = k^{\\nu}.\n$$\n假设外生技术冲击遵循一个平稳的一阶自回归（AR(1)）过程，$s_{t+1} = \\varphi\\, s_t + \\sigma_{\\varepsilon}\\,\\varepsilon_{t+1}$，其中 $|\\varphi|<1$，$\\sigma_{\\varepsilon} > 0$，且 $\\varepsilon_{t+1}$ 是独立同分布的标准正态随机变量，其均值为零，方差为一。\n\n在水平值上进行分析，并关注于一个确定性稳态 $(\\bar{k},\\bar{s})$，其中 $\\bar{s} = 0$ 且技术水平恒定为 $\\exp(\\bar{s}) = 1$。确定性稳态 $\\bar{k}>0$ 由在 $\\bar{s}=0$ 下的不动点条件定义：\n$$\n\\bar{k} = \\bar{s}\\,F(\\bar{k}) + (1-\\delta)\\,\\bar{k},\n$$\n这等价于\n$$\n\\delta\\,\\bar{k} = \\bar{s}\\,F(\\bar{k}).\n$$\n\n将映射 $g$ 在稳态 $(\\bar{k},0)$ 处的二阶偏导数定义为 $g_{kk}(\\bar{k},0) = \\left.\\frac{\\partial^2 g}{\\partial k^2}\\right|_{(k,s)=(\\bar{k},0)}$、$g_{ks}(\\bar{k},0) = \\left.\\frac{\\partial^2 g}{\\partial k\\,\\partial s}\\right|_{(k,s)=(\\bar{k},0)}$ 和 $g_{ss}(\\bar{k},0) = \\left.\\frac{\\partial^2 g}{\\partial s^2}\\right|_{(k,s)=(\\bar{k},0)}$。对于随机环境，将 $s_t$ 的无条件方差近似为其平稳值 $\\mathbb{V}\\mathrm{ar}(s_t) = \\sigma_{\\varepsilon}^2/(1-\\varphi^2)$。使用 $\\exp(s)$ 在 $s=0$ 附近的二阶泰勒展开，将稳态下预期下一期资本中由风险引致的漂移修正定义为\n$$\n\\Delta(\\bar{k}) = \\frac{1}{2}\\,g_{ss}(\\bar{k},0)\\,\\frac{\\sigma_{\\varepsilon}^2}{1-\\varphi^2}.\n$$\n\n您的任务是，对于下面测试套件中的每一组参数，计算确定性稳态 $\\bar{k}$，然后评估如上定义的 $g_{kk}(\\bar{k},0)$、$g_{ks}(\\bar{k},0)$、$g_{ss}(\\bar{k},0)$ 以及漂移修正 $\\Delta(\\bar{k})$。\n\n测试套件：\n- 案例A（Cobb–Douglas基准）：$\\bar{s} = 0.2$, $\\delta = 0.08$, $\\nu = 0.33$, $\\sigma = 1.0$, $\\varphi = 0.9$, $\\sigma_{\\varepsilon} = 0.02$。\n- 案例B（较小弹性）：$\\bar{s} = 0.2$, $\\delta = 0.08$, $\\nu = 0.33$, $\\sigma = 0.8$, $\\varphi = 0.9$, $\\sigma_{\\varepsilon} = 0.02$。\n- 案例C（更小弹性）：$\\bar{s} = 0.2$, $\\delta = 0.08$, $\\nu = 0.33$, $\\sigma = 0.5$, $\\varphi = 0.9$, $\\sigma_{\\varepsilon} = 0.02$。\n- 案例D（近似Cobb–Douglas）：$\\bar{s} = 0.2$, $\\delta = 0.08$, $\\nu = 0.33$, $\\sigma = 0.99$, $\\varphi = 0.9$, $\\sigma_{\\varepsilon} = 0.02$。\n\n答案格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的、以逗号分隔的结果列表。每个案例的结果本身必须是一个包含四个实数 $[g_{kk}(\\bar{k},0), g_{ks}(\\bar{k},0), g_{ss}(\\bar{k},0), \\Delta(\\bar{k})]$ 的列表，并严格遵循此顺序。将这四个案例的四元素列表聚合为一个外部列表，并保持A、B、C、D的案例顺序。例如，输出应类似于 $[[a_1,b_1,c_1,d_1],[a_2,b_2,c_2,d_2],[a_3,b_3,c_3,d_3],[a_4,b_4,c_4,d_4]]$，其中每个 $a_i,b_i,c_i,d_i$ 都是一个实数。", "solution": "我们首先对问题陈述进行形式化验证。\n\n### 第1步：提取已知条件\n\n所给的问题陈述包含以下定义、参数和条件：\n- 资本运动定律：$k_{t+1} = g(k_t,s_t)$。\n- 资本积累映射：$g(k,s) = \\bar{s}\\,\\exp(s)\\,F(k) + (1 - \\delta)\\,k$。\n- 常量和参数：储蓄率 $\\bar{s} \\in (0,1)$，折旧率 $\\delta \\in (0,1)$，替代弹性 $\\sigma \\in (0,\\infty)$，份额参数 $\\nu \\in (0,1)$。\n- 生产函数 $F(k)$：\n  - 对于 $\\sigma \\neq 1$：$F(k) = \\left(\\nu\\,k^{\\rho} + (1-\\nu)\\right)^{\\tfrac{1}{\\rho}}$，其中 $\\rho = 1 - \\frac{1}{\\sigma}$。\n  - 对于 $\\sigma = 1$：$F(k) = k^{\\nu}$ (Cobb–Douglas 极限)。\n- 外生冲击过程：$s_{t+1} = \\varphi\\, s_t + \\sigma_{\\varepsilon}\\,\\varepsilon_{t+1}$，其中 $|\\varphi|<1$，$\\sigma_{\\varepsilon} > 0$，且 $\\varepsilon_{t+1} \\sim \\mathcal{N}(0,1)$。\n- 确定性稳态：$(\\bar{k}, \\bar{s})$，其中 $\\bar{s} = 0$，且 $\\bar{k} > 0$ 满足条件 $\\delta\\,\\bar{k} = \\bar{s}\\,F(\\bar{k})$。\n- 待计算量：$g(k,s)$ 在稳态 $(\\bar{k},0)$ 处求值的二阶偏导数：$g_{kk}(\\bar{k},0)$，$g_{ks}(\\bar{k},0)$ 和 $g_{ss}(\\bar{k},0)$。\n- 冲击过程的无条件方差：$\\mathbb{V}\\mathrm{ar}(s_t) = \\sigma_{\\varepsilon}^2/(1-\\varphi^2)$。\n- 风险引致的漂移修正：$\\Delta(\\bar{k}) = \\frac{1}{2}\\,g_{ss}(\\bar{k},0)\\,\\frac{\\sigma_{\\varepsilon}^2}{1-\\varphi^2}$。\n- 测试套件：指定了四个用于计算的参数集（A, B, C, D）。\n\n### 第2步：使用提取的已知条件进行验证\n\n我们现在根据既定标准评估问题的有效性。\n- **科学依据**：该问题设定在一个标准的新古典增长模型框架内，该模型具有恒定储蓄率和随机技术，这是现代宏观经济学的一个基本构造。恒定替代弹性（CES）生产函数和一阶自回归（AR(1)）冲击过程是标准的、易于理解的组成部分。为进行二阶近似而计算导数的任务是计算经济学中分析风险影响的核心技术。因此，该问题在科学上是合理的。\n- **适定性**：问题是以数学精度指定的。稳态条件 $\\delta\\,\\bar{k} = \\bar{s}\\,F(\\bar{k})$ 定义了一个关于 $\\bar{k}$ 的非线性方程。对于给定的生产函数和参数约束，预期存在一个唯一的、正的且稳定的稳态 $\\bar{k}$。随后计算偏导数和漂移修正是微积分和代入的直接应用。该问题是适定的。\n- **客观性**：问题以清晰、定量和明确的语言陈述。所有术语都有正式定义。任务是客观的，不涉及主观解释。\n\n未发现与清单项目对应的缺陷（科学上不合理、无法形式化、设定不完整、不切实际、不适定、超出科学可验证性）。\n\n### 第3步：结论与行动\n\n该问题是**有效的**。我们现在将继续进行完整且有理有据的求解。\n\n### 求解推导\n\n任务是计算资本积累映射 $g(k,s)$ 在确定性稳态 $(\\bar{k}, 0)$ 处的二阶偏导数，以及由此产生的漂移修正 $\\Delta(\\bar{k})$。该映射由下式给出：\n$$g(k,s) = \\bar{s}\\,\\exp(s)\\,F(k) + (1 - \\delta)\\,k$$\n\n一阶偏导数为：\n$$g_k(k,s) = \\frac{\\partial g}{\\partial k} = \\bar{s}\\,\\exp(s)\\,F'(k) + (1 - \\delta)$$\n$$g_s(k,s) = \\frac{\\partial g}{\\partial s} = \\bar{s}\\,\\exp(s)\\,F(k)$$\n\n二阶偏导数为：\n$$g_{kk}(k,s) = \\frac{\\partial^2 g}{\\partial k^2} = \\bar{s}\\,\\exp(s)\\,F''(k)$$\n$$g_{ks}(k,s) = \\frac{\\partial^2 g}{\\partial k \\partial s} = \\bar{s}\\,\\exp(s)\\,F'(k)$$\n$$g_{ss}(k,s) = \\frac{\\partial^2 g}{\\partial s^2} = \\bar{s}\\,\\exp(s)\\,F(k)$$\n\n在稳态 $(k,s) = (\\bar{k},0)$ 处对这些导数求值，并使用 $\\exp(0)=1$：\n$$g_{kk}(\\bar{k},0) = \\bar{s}\\,F''(\\bar{k})$$\n$$g_{ks}(\\bar{k},0) = \\bar{s}\\,F'(\\bar{k})$$\n$$g_{ss}(\\bar{k},0) = \\bar{s}\\,F(\\bar{k})$$\n\n稳态条件是 $\\delta\\,\\bar{k} = \\bar{s}\\,F(\\bar{k})$。这为 $g_{ss}$ 提供了一个关键的简化：\n$$g_{ss}(\\bar{k},0) = \\delta\\,\\bar{k}$$\n漂移修正项 $\\Delta(\\bar{k})$ 则为：\n$$\\Delta(\\bar{k}) = \\frac{1}{2}\\,g_{ss}(\\bar{k},0)\\,\\frac{\\sigma_{\\varepsilon}^2}{1-\\varphi^2} = \\frac{1}{2}\\,\\delta\\,\\bar{k}\\,\\frac{\\sigma_{\\varepsilon}^2}{1-\\varphi^2}$$\n\n我们现在为 $F(k)$ 的两种指定函数形式推导 $g_{kk}$ 和 $g_{ks}$ 的表达式。\n\n**情况1：Cobb-Douglas 生产函数 ($\\sigma = 1$)**\n此处，$F(k) = k^{\\nu}$。\n稳态 $\\bar{k}$ 通过求解 $\\delta\\,\\bar{k} = \\bar{s}\\,\\bar{k}^{\\nu}$ 来找到：\n$$\\bar{k}^{1-\\nu} = \\frac{\\bar{s}}{\\delta} \\implies \\bar{k} = \\left(\\frac{\\bar{s}}{\\delta}\\right)^{\\frac{1}{1-\\nu}}$$\n$F(k)$ 的导数是 $F'(k) = \\nu\\,k^{\\nu-1}$ 和 $F''(k) = \\nu(\\nu-1)\\,k^{\\nu-2}$。\n我们在稳态处寻找所需量的更简单表达式。\n对于 $g_{ks}$，我们代入边际产出与平均产出的比率，$F'(\\bar{k}) = \\nu F(\\bar{k})/\\bar{k}$：\n$$g_{ks}(\\bar{k},0) = \\bar{s}\\,F'(\\bar{k}) = \\bar{s}\\,\\nu\\,\\frac{F(\\bar{k})}{\\bar{k}}$$\n使用稳态条件 $F(\\bar{k})/\\bar{k} = \\delta/\\bar{s}$：\n$$g_{ks}(\\bar{k},0) = \\bar{s}\\,\\nu\\,\\left(\\frac{\\delta}{\\bar{s}}\\right) = \\nu\\,\\delta$$\n对于 $g_{kk}$，我们使用关系式 $F''(\\bar{k}) = (\\nu-1)F'(\\bar{k})/\\bar{k}$：\n$$g_{kk}(\\bar{k},0) = \\bar{s}\\,F''(\\bar{k}) = \\bar{s}\\,\\frac{\\nu-1}{\\bar{k}}F'(\\bar{k}) = \\frac{\\nu-1}{\\bar{k}}\\,g_{ks}(\\bar{k},0) = \\frac{\\nu(\\nu-1)\\delta}{\\bar{k}}$$\n\n**情况2：CES 生产函数 ($\\sigma \\neq 1$)**\n此处，$F(k) = (\\nu\\,k^{\\rho} + 1-\\nu)^{1/\\rho}$，其中 $\\rho = 1-1/\\sigma$。\n稳态资本存量 $\\bar{k}$ 必须通过求解非线性方程的根来数值确定：\n$$\\bar{s}\\,(\\nu\\,\\bar{k}^{\\rho} + 1-\\nu)^{1/\\rho} - \\delta\\,\\bar{k} = 0$$\n导数 $F'(k)$ 由 $F'(k) = \\nu\\,k^{\\rho-1}[F(k)]^{1-\\rho}$ 给出。\n因此，$g_{ks}$ 在稳态处为：\n$$g_{ks}(\\bar{k},0) = \\bar{s}\\,F'(\\bar{k}) = \\bar{s}\\,\\nu\\,\\bar{k}^{\\rho-1}[F(\\bar{k})]^{1-\\rho}$$\n代入 $F(\\bar{k}) = \\delta\\bar{k}/\\bar{s}$：\n$$g_{ks}(\\bar{k},0) = \\bar{s}\\,\\nu\\,\\bar{k}^{\\rho-1}\\left(\\frac{\\delta\\bar{k}}{\\bar{s}}\\right)^{1-\\rho} = \\bar{s}\\,\\nu\\,\\bar{k}^{\\rho-1}\\left(\\frac{\\delta}{\\bar{s}}\\right)^{1-\\rho}\\bar{k}^{1-\\rho} = \\nu\\,\\bar{s}^{1-(1-\\rho)}\\delta^{1-\\rho} = \\nu\\,\\bar{s}^{\\rho}\\delta^{1-\\rho}$$\n二阶导数 $F''(k)$ 可以被证明为 $F''(k) = -\\frac{\\nu(1-\\nu)}{\\sigma} k^{\\rho-2}[F(k)]^{1-2\\rho}$。\n因此，$g_{kk}$ 在稳态处为：\n$$g_{kk}(\\bar{k},0) = \\bar{s}\\,F''(\\bar{k}) = -\\frac{\\bar{s}\\,\\nu(1-\\nu)}{\\sigma} \\bar{k}^{\\rho-2}[F(\\bar{k})]^{1-2\\rho}$$\n代入 $F(\\bar{k}) = \\delta\\bar{k}/\\bar{s}$：\n$$g_{kk}(\\bar{k},0) = -\\frac{\\bar{s}\\,\\nu(1-\\nu)}{\\sigma} \\bar{k}^{\\rho-2}\\left(\\frac{\\delta\\bar{k}}{\\bar{s}}\\right)^{1-2\\rho} = -\\frac{\\nu(1-\\nu)}{\\sigma} \\bar{s}^{1-(1-2\\rho)}\\delta^{1-2\\rho}\\bar{k}^{(\\rho-2)+(1-2\\rho)}$$\n$$g_{kk}(\\bar{k},0) = -\\frac{\\nu(1-\\nu)}{\\sigma} \\bar{s}^{2\\rho}\\delta^{1-2\\rho}\\bar{k}^{-(1+\\rho)}$$\n\n算法将通过对测试套件中提供的每组参数应用这些推导出的解析公式来进行。对于CES情况，采用数值求根程序来确定 $\\bar{k}$。", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import root_scalar\n\ndef calculate_quantities(params: dict) -> list[float]:\n    \"\"\"\n    Calculates the required economic quantities for a given parameter set.\n    \"\"\"\n    s_bar, delta, nu, sigma, phi, sigma_eps = (\n        params[\"s_bar\"],\n        params[\"delta\"],\n        params[\"nu\"],\n        params[\"sigma\"],\n        params[\"phi\"],\n        params[\"sigma_eps\"],\n    )\n\n    k_bar = 0.0\n    g_kk = 0.0\n    g_ks = 0.0\n    g_ss = 0.0\n    \n    # Use a small tolerance for floating point comparison of sigma\n    if abs(sigma - 1.0) < 1e-9:\n        # Cobb-Douglas case (sigma = 1)\n        # Analytical solution for steady-state capital\n        k_bar = (s_bar / delta) ** (1.0 / (1.0 - nu))\n        \n        # Simplified analytical formulas for derivatives\n        g_kk = nu * (nu - 1.0) * delta / k_bar\n        g_ks = nu * delta\n        g_ss = delta * k_bar\n        \n    else:\n        # CES case (sigma != 1)\n        rho = 1.0 - 1.0 / sigma\n\n        # Production function F(k) for the CES case\n        def F(k, nu_p, rho_p):\n            if k < 0: return -np.inf # Ensure domain\n            return (nu_p * k**rho_p + (1.0 - nu_p)) ** (1.0 / rho_p)\n\n        # Function whose root defines the steady-state capital\n        def steady_state_equation(k):\n            return s_bar * F(k, nu, rho) - delta * k\n        \n        # Find k_bar numerically.\n        # The Cobb-Douglas steady state is a good starting point for the search bracket.\n        k_guess = (s_bar / delta) ** (1.0 / (1.0 - nu))\n        bracket_low = max(1e-6, k_guess * 0.1)\n        bracket_high = k_guess * 10\n        sol = root_scalar(steady_state_equation, bracket=[bracket_low, bracket_high], method='brentq')\n        k_bar = sol.root\n\n        # Simplified analytical formulas for derivatives\n        g_kk = (\n            - (nu * (1.0 - nu) / sigma) \n            * (s_bar ** (2.0 * rho)) \n            * (delta ** (1.0 - 2.0 * rho)) \n            * (k_bar ** -(1.0 + rho))\n        )\n        g_ks = nu * (s_bar ** rho) * (delta ** (1.0 - rho))\n        g_ss = delta * k_bar\n\n    # Calculate the risk-induced drift correction\n    var_s = sigma_eps**2 / (1.0 - phi**2)\n    delta_k = 0.5 * g_ss * var_s\n\n    return [g_kk, g_ks, g_ss, delta_k]\n\ndef solve():\n    \"\"\"\n    Main solver function that processes all test cases.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A: Cobb-Douglas baseline\n        {\"s_bar\": 0.2, \"delta\": 0.08, \"nu\": 0.33, \"sigma\": 1.0, \"phi\": 0.9, \"sigma_eps\": 0.02},\n        # Case B: smaller elasticity\n        {\"s_bar\": 0.2, \"delta\": 0.08, \"nu\": 0.33, \"sigma\": 0.8, \"phi\": 0.9, \"sigma_eps\": 0.02},\n        # Case C: much smaller elasticity\n        {\"s_bar\": 0.2, \"delta\": 0.08, \"nu\": 0.33, \"sigma\": 0.5, \"phi\": 0.9, \"sigma_eps\": 0.02},\n        # Case D: near-Cobb-Douglas\n        {\"s_bar\": 0.2, \"delta\": 0.08, \"nu\": 0.33, \"sigma\": 0.99, \"phi\": 0.9, \"sigma_eps\": 0.02},\n    ]\n\n    results = []\n    for case in test_cases:\n        result = calculate_quantities(case)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    # The format [[a,b],[c,d]] is produced by str() on a list of lists.\n    # We remove whitespace for a compact representation.\n    output_str = str(results).replace(\" \", \"\")\n    print(output_str)\n\nsolve()\n```"}, {"introduction": "超越线性模型的一个核心动机是为了捕捉经济系统中的非对称性——例如，经济对正面和负面冲击的反应可能并非简单的镜像。本练习将向你展示一个完整的应用工作流程：首先，利用二阶导数构建一个近似的政策函数；然后，通过模拟该模型生成广义脉冲响应函数（GIRFs）。这个过程将直观地揭示在非线性模型中，等量的正面与负面技术冲击是如何产生大小和形态都不同的动态效应的。[@problem_id:2428798]", "id": "2428798", "problem": "您的任务是设计并实现一个程序，该程序使用围绕确定性稳态的二阶扰动方法，为受随机技术过程影响的非线性资本积累模型计算广义脉冲响应函数 (GIRF)。目标是量化并报告对正向与负向一个标准差技术冲击的响应之间的非对称性，并对一小组参数配置进行此项分析。\n\n经济环境是一个没有跨期优化的简单非线性生产-投资模型。该模型具有调整成本，这使得运动定律成为隐式且非线性的；此外，模型还包括一个标准的 Cobb-Douglas 生产函数和一个均值回归的技术过程。模型具体规定如下。\n\n- 状态动态。令 $k_t$ 表示在时期 $t$ 结束时的资本，令 $z_t$ 表示在时间 $t$ 的（对数）技术。令 $A_t = \\exp(z_t)$ 表示技术水平。给定一个固定的储蓄率 $s \\in (0,1)$ 和一个二次调整成本，资本通过以下隐式方程演化\n$$\nF(i,k,z) \\equiv i - (1-\\delta) k - s \\,\\exp(z)\\, k^{\\alpha} + \\frac{\\phi}{2}\\,\\frac{(i-k)^2}{k} = 0,\n$$\n其中 $i \\equiv k_{t}$，$k \\equiv k_{t-1}$，$z \\equiv z_t$，$\\delta \\in (0,1)$ 是折旧率，$\\alpha \\in (0,1)$ 是资本的产出弹性，$\\phi \\ge 0$ 是调整成本参数。产出由以下公式定义\n$$\ny_t = \\exp(z_t)\\, k_{t-1}^{\\alpha}.\n$$\n\n- 技术过程。技术遵循一个带独立同分布高斯新息的一阶平稳自回归过程：\n$$\nz_{t+1} = \\rho\\, z_t + \\sigma\\, \\epsilon_{t+1}, \\quad \\epsilon_{t+1} \\sim \\mathcal{N}(0,1),\n$$\n其中持续性为 $\\rho \\in (-1,1)$，标准差为 $\\sigma > 0$。所有角度均为线性度量；不涉及角度单位。变量无需物理单位；请将所有数值结果报告为无单位实数。\n\n- 稳态。确定性稳态设定 $z=0$，$i=k=\\bar{k}$。由于稳态时的调整成本为零，稳态 $\\bar{k}$ 满足\n$$\n\\delta \\,\\bar{k} = s\\, \\bar{k}^{\\alpha} \\quad \\Longrightarrow \\quad \\bar{k} = \\left(\\frac{s}{\\delta}\\right)^{\\frac{1}{1-\\alpha}}.\n$$\n\n围绕稳态的二阶扰动。定义隐式解 $i = h(k,z)$ 为 $F(i,k,z)=0$ 的解。策略函数 $h(k,z)$ 在 $(\\bar{k},0)$ 附近的二阶扰动近似是其二阶泰勒展开\n$$\nh(k,z) \\approx \\bar{k} + h_k \\,(k-\\bar{k}) + h_z \\, z + \\frac{1}{2}\\left[ h_{kk}\\,(k-\\bar{k})^2 + 2h_{kz}\\,(k-\\bar{k})\\, z + h_{zz}\\, z^2 \\right],\n$$\n其中导数 $h_k$、$h_z$、$h_{kk}$、$h_{kz}$ 和 $h_{zz}$ 是在 $(\\bar{k},0)$ 处求值，并通过隐函数定理从 $F(i,k,z)$ 在 $(i,k,z)=(\\bar{k},\\bar{k},0)$ 处的导数获得。\n\n广义脉冲响应函数。对于给定的期界 $H \\in \\mathbb{N}$和蒙特卡洛路径数 $R \\in \\mathbb{N}$，变量 $v_t$ 在时间 $t=0$ 对初始冲击 $\\epsilon_0$ 的 GIRF 定义为（对于期界 $h \\in \\{0,1,\\dots,H\\}$）\n$$\n\\text{GIRF}_v(h;\\epsilon_0) \\equiv \\mathbb{E}\\left[ v_{t+h} \\,\\middle|\\, \\epsilon_0, \\text{ 初始处于稳态}, \\{\\epsilon_j\\}_{j\\ge 1} \\right] - \\mathbb{E}\\left[ v_{t+h} \\,\\middle|\\, \\epsilon_0 = 0, \\text{ 初始处于稳态}, \\{\\epsilon_j\\}_{j\\ge 1} \\right],\n$$\n其中期望是针对未来冲击 $\\{\\epsilon_j\\}_{j\\ge 1}$ 计算的，这些冲击在受冲击路径和基准路径中被同样地抽取，以分离初始新息的影响。在本问题中，设 $v_t = y_t$ 并取 $\\epsilon_0 \\in \\{+1,-1\\}$。GIRF 是通过在给定的参数化下，使用二阶近似模型进行 $R$ 次蒙特卡洛路径模拟生成的，从 $(k_{-1}, z_{-1}) = (\\bar{k},0)$ 开始，并对受冲击路径和基准路径中的未来新息使用相同的随机种子。使用二阶近似 $h(k,z)$ 来传递资本，并使用精确公式计算 $z_{t+1}$。\n\n非对称性度量。为突显对正向和负向冲击响应之间的非对称性，计算\n$$\n\\mathcal{A} \\equiv \\max_{0 \\le h \\le H} \\left| \\text{GIRF}_y(h; +1) + \\text{GIRF}_y(h; -1) \\right|.\n$$\n在线性对称模型中，我们预期 $\\text{GIRF}_y(h; -1) \\approx -\\text{GIRF}_y(h; +1)$，因此 $\\mathcal{A}$ 将接近于零。由二阶近似捕捉到的非线性通常会产生 $\\mathcal{A} > 0$。\n\n您的任务。从第一性原理推导所需导数，并实现一个程序，该程序能够：\n- 计算稳态 $\\bar{k}$，\n- 计算在 $(\\bar{k},0)$ 处对 $h(k,z)$ 进行二阶近似所需的导数，\n- 使用二阶近似模拟模型，以生成在 $\\epsilon_0=+1$ 和 $\\epsilon_0=-1$ 情况下 $y_t$ 的 GIRF，\n- 计算并报告下面测试套件中每组参数的非对称性度量 $\\mathcal{A}$。\n\n测试套件。使用以下参数集，每个定义一个独立的测试用例。对于每个用例，设置 $H=20$ 和 $R=5000$ 条蒙特卡洛路径。参数为：\n- 案例 A（非线性调整成本，中等波动性）：$(\\alpha,\\delta,s,\\phi,\\rho,\\sigma) = (0.33,\\,0.08,\\,0.25,\\,4.0,\\,0.90,\\,0.02)$。\n- 案例 B（无调整成本，相同波动性）：$(\\alpha,\\delta,s,\\phi,\\rho,\\sigma) = (0.33,\\,0.08,\\,0.25,\\,0.0,\\,0.90,\\,0.02)$。\n- 案例 C（非线性调整成本，低波动性）：$(\\alpha,\\delta,s,\\phi,\\rho,\\sigma) = (0.33,\\,0.08,\\,0.25,\\,4.0,\\,0.90,\\,0.002)$。\n\n最终输出格式。您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果，按 $[\\mathcal{A}_{\\text{A}}, \\mathcal{A}_{\\text{B}}, \\mathcal{A}_{\\text{C}}]$ 排序，其中每个条目都是一个实数。例如，一个有效的输出行示例如下\n\"[0.012345,0.006789,0.001234]\"。", "solution": "该问题要求在一个非线性资本积累模型中，计算广义脉冲响应函数（GIRF）的非对称性度量。这需要通过采用二阶扰动方法来实现。分析过程分为两个主要阶段：首先，推导资本积累的二阶精确策略函数；其次，模拟模型以生成 GIRF 和非对称性度量。\n\n**步骤 1：模型设定与稳态**\n\n经济模型由以下方程式描述：\n资本 $k_t$ 的运动定律由以下隐式方程给出：\n$$F(k_t, k_{t-1}, z_t) \\equiv k_t - (1-\\delta) k_{t-1} - s \\exp(z_t) k_{t-1}^{\\alpha} + \\frac{\\phi}{2} \\frac{(k_t - k_{t-1})^2}{k_{t-1}} = 0$$\n其中 $z_t$ 是对数技术过程，其遵循一个一阶自回归过程：\n$$z_{t+1} = \\rho z_t + \\sigma \\epsilon_{t+1}, \\quad \\epsilon_{t+1} \\sim \\mathcal{N}(0,1)$$\n产出 $y_t$ 由 Cobb-Douglas 生产函数给出：\n$$y_t = \\exp(z_t) k_{t-1}^{\\alpha}$$\n确定性稳态的特征是对于所有 $t$，$z_t = 0$ 和 $k_t = k_{t-1} = \\bar{k}$。将这些代入资本积累方程，得到稳态资本存量 $\\bar{k}$：\n$$\\bar{k} - (1-\\delta)\\bar{k} - s \\bar{k}^{\\alpha} = 0 \\implies \\delta \\bar{k} = s \\bar{k}^{\\alpha}$$\n求解 $\\bar{k}$ 可得：\n$$\\bar{k} = \\left(\\frac{s}{\\delta}\\right)^{\\frac{1}{1-\\alpha}}$$\n\n**步骤 2：通过隐函数定理进行二阶扰动**\n\n我们寻求策略函数 $i = h(k,z)$ 在稳态 $(k,z)=(\\bar{k},0)$ 附近的二阶泰勒近似，其中我们使用记号 $i=k_t$ 和 $k=k_{t-1}$。隐函数为 $F(i,k,z) = 0$。$h$ 的导数通过对恒等式 $F(h(k,z), k, z) = 0$ 进行重复微分求得。所有导数均在稳态 $(i,k,z)=(\\bar{k},\\bar{k},0)$ 处计算。\n\n首先，我们计算 $F(i,k,z)$ 所需的偏导数：\n$F_i = 1 + \\phi\\frac{i-k}{k} \\implies F_i\\vert_{ss} = 1$\n$F_k = -(1-\\delta) - s\\alpha e^z k^{\\alpha-1} - \\phi\\frac{i-k}{k} - \\frac{\\phi}{2}\\frac{(i-k)^2}{k^2} \\implies F_k\\vert_{ss} = -(1-\\delta) - s\\alpha\\bar{k}^{\\alpha-1} = -(1-\\delta(1-\\alpha))$\n$F_z = -se^z k^\\alpha \\implies F_z\\vert_{ss} = -s\\bar{k}^\\alpha = -\\delta\\bar{k}$\n\n$F_{ii} = \\frac{\\phi}{k} \\implies F_{ii}\\vert_{ss} = \\frac{\\phi}{\\bar{k}}$\n$F_{ik} = -\\frac{\\phi i}{k^2} \\implies F_{ik}\\vert_{ss} = -\\frac{\\phi}{\\bar{k}}$\n$F_{iz} = 0$\n$F_{kk} = -s\\alpha(\\alpha-1)e^z k^{\\alpha-2} + \\frac{\\phi}{k} \\implies F_{kk}\\vert_{ss} = -s\\alpha(\\alpha-1)\\bar{k}^{\\alpha-2} + \\frac{\\phi}{\\bar{k}} = -\\frac{\\delta\\alpha(\\alpha-1)}{\\bar{k}} + \\frac{\\phi}{\\bar{k}}$\n$F_{kz} = -s\\alpha e^z k^{\\alpha-1} \\implies F_{kz}\\vert_{ss} = -s\\alpha\\bar{k}^{\\alpha-1} = -\\alpha\\delta$\n$F_{zz} = -se^z k^\\alpha \\implies F_{zz}\\vert_{ss} = -s\\bar{k}^\\alpha = -\\delta\\bar{k}$\n\n使用隐函数定理，$h(k,z)$ 的一阶导数为：\n$h_k = -\\frac{F_k}{F_i} = 1-\\delta(1-\\alpha)$\n$h_z = -\\frac{F_z}{F_i} = \\delta\\bar{k}$\n\n二阶导数通过再次对一阶条件微分求得：\n$F_i h_{kk} + F_{ii}h_k^2 + 2F_{ik}h_k + F_{kk} = 0 \\implies h_{kk} = -(F_{ii}h_k^2 + 2F_{ik}h_k + F_{kk})$\n$F_i h_{kz} + F_{ii}h_k h_z + F_{ik}h_z + F_{iz}h_k + F_{kz} = 0 \\implies h_{kz} = -(F_{ii}h_k h_z + F_{ik}h_z + F_{kz})$\n$F_i h_{zz} + F_{ii}h_z^2 + 2F_{iz}h_z + F_{zz} = 0 \\implies h_{zz} = -(F_{ii}h_z^2 + F_{zz})$\n代入在稳态处求得的 $F$ 的导数可得：\n$h_{kk} = -\\left(\\frac{\\phi}{\\bar{k}}h_k^2 - \\frac{2\\phi}{\\bar{k}}h_k - \\frac{\\delta\\alpha(\\alpha-1)}{\\bar{k}} + \\frac{\\phi}{\\bar{k}}\\right) = -\\frac{1}{\\bar{k}}\\left(\\phi(h_k-1)^2 - \\delta\\alpha(\\alpha-1)\\right)$\n$h_{kz} = -\\left(\\frac{\\phi}{\\bar{k}}h_k h_z - \\frac{\\phi}{\\bar{k}}h_z - \\alpha\\delta\\right) = -\\frac{\\phi}{\\bar{k}}(h_k-1)h_z + \\alpha\\delta$\n$h_{zz} = -\\left(\\frac{\\phi}{\\bar{k}}h_z^2 - \\delta\\bar{k}\\right) = \\delta\\bar{k} - \\frac{\\phi}{\\bar{k}}h_z^2$\n\n在稳态附近，策略函数 $k_t = h(k_{t-1}, z_t)$ 的二阶近似，用偏差 $\\hat{k}_t = k_t - \\bar{k}$ 和 $z_t$ 表示为：\n$$\\hat{k}_t \\approx h_k \\hat{k}_{t-1} + h_z z_t + \\frac{1}{2}h_{kk}\\hat{k}_{t-1}^2 + h_{kz}\\hat{k}_{t-1}z_t + \\frac{1}{2}h_{zz}z_t^2$$\n\n**步骤 3：广义脉冲响应函数的模拟**\n\n产出 $y_t$ 在期界 $h$ 对初始冲击 $\\epsilon_0$ 的 GIRF，计算为受冲击后变量的期望路径与无冲击时（基准情况）的期望路径之差。\n$$ \\text{GIRF}_y(h;\\epsilon_0) = \\mathbb{E}[ y_h \\,|\\, \\epsilon_0, \\text{state}_{ -1}=(\\bar{k},0) ] - \\mathbb{E}[ y_h \\,|\\, \\epsilon_0=0, \\text{state}_{ -1}=(\\bar{k},0) ] $$\n期望是针对未来冲击 $\\{\\epsilon_j\\}_{j \\ge 1}$ 计算的，并通过对 $R$ 条路径进行蒙特卡洛模拟来近似。模拟过程如下：\n1. 对每种参数情况，计算 $\\bar{k}$ 和 $h$ 的导数。\n2. 生成 $R$ 条外生冲击路径 $\\{\\epsilon_{r,h}\\}_{h=1}^H$，其中 $r=1,\\dots,R$。使用固定的随机种子以保证可复现性。\n3. 对每个 $R$ 路径模拟三种情景：基准（$\\epsilon_0=0$）、正向冲击（$\\epsilon_0=+1$）和负向冲击（$\\epsilon_0=-1$）。\n4. 对于每种情景和每条路径 $r$，从 $(k_{-1,r}, z_{-1,r}) = (\\bar{k},0)$ 开始，从 $h=0$ 迭代至 $H$：\n   a. 更新技术过程：$z_{h,r} = \\rho z_{h-1,r} + \\sigma \\epsilon_{h,r}$。当 $h=0$ 时，$\\epsilon_{0,r}$对每种情景都是确定性的。当 $h>0$ 时，$\\epsilon_{h,r}$是预先生成的随机冲击，在不同情景间是相同的。\n   b. 计算第 $h$ 期的产出：$y_{h,r} = \\exp(z_{h,r}) k_{h-1,r}^{\\alpha}$。\n   c. 使用二阶策略规则更新资本存量：$k_{h,r} = \\bar{k} + \\hat{k}_{h,r}$。\n5. 对每种情景下模拟的产出路径 $y_{h,r}$ 在所有 $R$ 条路径上取平均，以获得 $\\mathbb{E}[y_h]$。\n6. 计算 $h=0,\\dots,H$ 时的 $\\text{GIRF}_y(h;+1)$ 和 $\\text{GIRF}_y(h;-1)$。\n7. 然后，通过取正向和负向冲击响应之和在整个期界内的最大绝对值来找到非对称性度量 $\\mathcal{A}$：\n$$ \\mathcal{A} = \\max_{0 \\le h \\le H} |\\text{GIRF}_y(h;+1) + \\text{GIRF}_y(h;-1)| $$\n\n对指定的三个测试用例中的每一个都执行此程序。由二阶项引入的非线性预计将使 $\\mathcal{A}$ 大于零。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for all test cases and print the results.\n    \"\"\"\n    \n    # Define test cases from the problem statement.\n    # (alpha, delta, s, phi, rho, sigma)\n    test_cases = [\n        (0.33, 0.08, 0.25, 4.0, 0.90, 0.02),  # Case A\n        (0.33, 0.08, 0.25, 0.0, 0.90, 0.02),  # Case B\n        (0.33, 0.08, 0.25, 4.0, 0.90, 0.002), # Case C\n    ]\n    \n    # Simulation parameters\n    H = 20\n    R = 5000\n    \n    results = []\n    for params in test_cases:\n        result = compute_asymmetry(params, H, R, seed=42)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.6f}' for r in results)}]\")\n\ndef compute_asymmetry(params, H, R, seed=0):\n    \"\"\"\n    Computes the GIRF asymmetry measure for a given set of model parameters.\n\n    Args:\n        params (tuple): A tuple of model parameters (alpha, delta, s, phi, rho, sigma).\n        H (int): The simulation horizon.\n        R (int): The number of Monte Carlo paths.\n        seed (int): The seed for the random number generator.\n\n    Returns:\n        float: The computed asymmetry measure A.\n    \"\"\"\n    alpha, delta, s, phi, rho, sigma = params\n\n    # Step 1: Compute steady state\n    k_bar = (s / delta)**(1 / (1 - alpha))\n\n    # Step 2: Compute derivatives for second-order approximation\n    h_k = 1.0 - delta * (1.0 - alpha)\n    h_z = delta * k_bar\n    \n    # Note: h_kk = -1/k_bar * (phi*(h_k-1)**2 - delta*alpha*(1-alpha))\n    h_kk = (1.0 / k_bar) * (delta * alpha * (1.0 - alpha) - phi * (h_k - 1.0)**2)\n    \n    # Note: h_kz = alpha*delta - phi/k_bar * (h_k-1)*h_z\n    h_kz = alpha * delta - (phi / k_bar) * (h_k - 1.0) * h_z\n    \n    # Note: h_zz = delta*k_bar - phi/k_bar * h_z**2\n    h_zz = delta * k_bar - (phi / k_bar) * h_z**2\n\n    # Coefficients for the policy rule (including 1/2 factor)\n    H_kk_half = 0.5 * h_kk\n    H_zz_half = 0.5 * h_zz\n\n    # Step 3: Setup simulation\n    rng = np.random.default_rng(seed)\n    # Future shocks for t=1,...,H\n    future_shocks = rng.normal(size=(R, H))\n\n    # Dictionary to hold output paths for each scenario\n    y_paths = {'base': np.zeros((R, H + 1)), 'pos': np.zeros((R, H + 1)), 'neg': np.zeros((R, H + 1))}\n    \n    initial_shocks = {'base': 0.0, 'pos': 1.0, 'neg': -1.0}\n\n    # Step 4: Run simulation\n    for scenario, eps0 in initial_shocks.items():\n        # Initialize states at t=-1\n        k_prev = np.full(R, k_bar)\n        z_prev = np.zeros(R)\n\n        # Main simulation loop over time h=0,...,H\n        for h in range(H + 1):\n            # Update technology process\n            if h == 0:\n                z_curr = rho * z_prev + sigma * eps0\n            else:\n                shocks_h = future_shocks[:, h-1]\n                z_curr = rho * z_prev + sigma * shocks_h\n            \n            # Compute output y_h = exp(z_h) * k_{h-1}^alpha\n            y_paths[scenario][:, h] = np.exp(z_curr) * (k_prev**alpha)\n\n            # Compute new capital stock k_h = h(k_{h-1}, z_h) using 2nd order approximation\n            k_hat_prev = k_prev - k_bar\n            \n            k_hat_curr = (h_k * k_hat_prev + h_z * z_curr\n                          + H_kk_half * k_hat_prev**2 \n                          + h_kz * k_hat_prev * z_curr \n                          + H_zz_half * z_curr**2)\n            \n            k_curr = k_bar + k_hat_curr\n            \n            # Update states for next period\n            k_prev = k_curr\n            z_prev = z_curr\n\n    # Step 5: Compute GIRFs by averaging\n    y_exp_base = np.mean(y_paths['base'], axis=0)\n    y_exp_pos = np.mean(y_paths['pos'], axis=0)\n    y_exp_neg = np.mean(y_paths['neg'], axis=0)\n    \n    girf_pos = y_exp_pos - y_exp_base\n    girf_neg = y_exp_neg - y_exp_base\n\n    # Step 6: Compute asymmetry measure\n    asymmetry_h = np.abs(girf_pos + girf_neg)\n    \n    # Step 7: Return maximum asymmetry over horizon\n    return np.max(asymmetry_h)\n\nif __name__ == '__main__':\n    solve()\n```"}, {"introduction": "许多经济模型都包含着并非处处平滑的非线性特征，例如只有在特定情况下才会生效的“偶尔约束”（occasionally binding constraints）。本练习旨在探索，作为一种局部工具的二阶泰勒展开，如何通过改变模型结果的统计分布特性，为我们理解这些全局性现象提供深刻的洞见。这是一个极佳的案例，它连接了局部近似方法与其在整个分布上的宏观影响，展示了二阶微扰法在处理更复杂经济问题时的分析能力。[@problem_id:2428812]", "id": "2428812", "problem": "考虑一个处于离散时间中的代表性企业，该企业面临随机的生产率和二次投资调整成本。设外生生产率为 $A_t = \\exp(\\varepsilon_t)$，其冲击过程为 $\\,\\varepsilon_{t+1} = \\rho\\,\\varepsilon_t + \\sigma\\,\\eta_{t+1}\\,$，其中 $\\,\\eta_{t+1}\\sim \\mathcal{N}(0,1)\\,$ 是独立同分布的，且 $\\,\\rho\\in(-1,1)\\,$, $\\,\\sigma > 0\\,$。对于局部分析，将资本存量视为固定在其确定性稳态水平 $\\,\\bar{k} > 0\\,$，并假设围绕稳态折旧存在二次调整成本。对总投资施加一个偶尔起约束作用的非负约束 $\\,i_t \\geq 0\\,$。\n\n使用以下核心关系式，这些关系式基于带有二次调整成本的 $q$ 理论以及对资本影子价值的标准近似。当调整成本参数为 $\\,\\phi > 0\\,$ 且折旧率为 $\\,\\delta \\in (0,1)\\,$ 时，将资本影子价值 $\\,q_t\\,$ 与总投资联系起来的一阶条件是\n$$\nq_t \\;=\\; 1 \\;+\\; \\phi\\!\\left(\\frac{i_t}{\\bar{k}} - \\delta\\right).\n$$\n在小偏差和预期收益呈局部线性的风险调整定价下，将资本影子价值近似为已安装资本的贴现预期未来一期边际收益，\n$$\nq_t \\;\\approx\\; \\beta\\,(1-\\delta) \\;+\\; \\beta\\,\\alpha\\,\\bar{k}^{\\alpha - 1}\\, \\mathbb{E}_t[A_{t+1}],\n$$\n其中 $\\,\\beta\\in(0,1)\\,$ 是贴现因子，$\\,\\alpha\\in(0,1)\\,$ 是柯布-道格拉斯生产技术 $\\,y_t = A_t \\bar{k}^\\alpha\\,$ 中的资本弹性。因为 $\\,A_{t+1} = \\exp(\\varepsilon_{t+1})\\,$ 且 $\\,\\varepsilon_{t+1} \\mid \\varepsilon_t \\sim \\mathcal{N}(\\rho\\,\\varepsilon_t,\\sigma^2)\\,$，所以可得 $\\,\\mathbb{E}_t[A_{t+1}] = \\exp\\!\\left(\\rho\\,\\varepsilon_t + \\tfrac{1}{2}\\sigma^2\\right)\\,$。\n\n1. 从上述定义出发，通过复合函数 $\\,q(\\varepsilon_t)\\,$ 和调整成本条件，将总投资策略 $\\,i(\\varepsilon_t)\\,$ 表示为当前冲击 $\\,\\varepsilon_t\\,$ 的函数。推导其在 $\\,\\varepsilon_t = 0\\,$ 附近的二阶泰勒展开式：\n$$\ni(\\varepsilon_t) \\;\\approx\\; a \\;+\\; b\\,\\varepsilon_t \\;+\\; \\tfrac{1}{2}\\,c\\,\\varepsilon_t^2,\n$$\n并根据结构参数 $\\,(\\alpha,\\beta,\\delta,\\phi,\\bar{k},\\rho,\\sigma)\\,$ 计算系数 $\\,a\\,$, $\\,b\\,$ 和 $\\,c\\,$。将 $\\,\\sigma\\,$ 视为小但非零的数，以便在展开式中保留 $\\,\\sigma^2\\,$ 阶的项。\n\n2. 设 $\\,g(\\varepsilon) := a + b\\,\\varepsilon + \\tfrac{1}{2}c\\,\\varepsilon^2\\,$ 且 $\\,\\varepsilon \\sim \\mathcal{N}(0,\\sigma^2)\\,$。仅使用高斯分布的精确性质（不进行模拟），计算：\n   - 无约束二阶近似的无条件均值 $\\,\\mathbb{E}[g(\\varepsilon)]\\,$，保留到 $\\,\\sigma^2\\,$ 阶的项。\n   - 偶尔受约束策略的精确高斯期望 $\\,\\mathbb{E}[\\max\\{0,g(\\varepsilon)\\}]\\,$, 方法是对二次函数 $\\,g(\\varepsilon)\\,$ 在其为正的区域上进行解析积分。使用标准正态累积分布函数 $\\,\\Phi(\\cdot)\\,$ 和概率密度函数 $\\,\\varphi(\\cdot)\\,$ 来表示结果，并处理 $\\,c\\,$ 和判别式 $\\,\\Delta = b^2 - 2ac\\,$ 的所有符号情况。\n   - 约束起作用的概率 $\\,\\mathbb{P}\\big(g(\\varepsilon)\\le 0\\big)\\,$，以 $[0,1]$ 范围内的小数表示。\n\n3. 实现一个程序，对于下面测试套件中的每一组参数，该程序计算 $\\,a\\,$, $\\,b\\,$, $\\,c\\,$，然后返回三个数：近似的无约束均值 $\\,\\mathbb{E}[g(\\varepsilon)]\\,$、受约束的均值 $\\,\\mathbb{E}[\\max\\{0,g(\\varepsilon)\\}]\\,$, 以及约束起作用的概率 $\\,\\mathbb{P}(g(\\varepsilon)\\le 0)\\,$。所有结果必须是无单位的实数；概率必须是 $[0,1]$ 范围内的小数。\n\n使用以下参数集的测试套件 $\\,(\\alpha,\\beta,\\delta,\\phi,\\bar{k},\\rho,\\sigma)\\,$：\n- 测试 1 (基准，低波动率): $\\,(\\,0.33,\\,0.96,\\,0.08,\\,4.0,\\,1.0,\\,0.9,\\,0.10\\,)\\,$.\n- 测试 2 (更具响应性的调整): $\\,(\\,0.33,\\,0.96,\\,0.08,\\,1.0,\\,1.0,\\,0.95,\\,0.25\\,)\\,$.\n- 测试 3 (更大的约束概率): $\\,(\\,0.20,\\,0.90,\\,0.05,\\,0.50,\\,1.0,\\,0.90,\\,0.30\\,)\\,$.\n- 测试 4 (接近阈值的校准): $\\,(\\,0.20,\\,0.90,\\,0.164,\\,0.95,\\,1.0,\\,0.90,\\,0.20\\,)\\,$.\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果，并按顺序堆叠每个测试的三个输出。具体来说，打印\n$$\n[\\mathbb{E}[g]_1,\\;\\mathbb{E}[\\max\\{0,g\\}]_1,\\;\\mathbb{P}(g\\le 0)_1,\\;\\ldots,\\;\\mathbb{E}[g]_4,\\;\\mathbb{E}[\\max\\{0,g\\}]_4,\\;\\mathbb{P}(g\\le 0)_4],\n$$\n其中下标表示测试用例的索引。不应打印其他任何文本。不涉及角度；不涉及物理单位；概率必须是小数，而不是百分比。", "solution": "问题陈述已经过验证。\n\n第1步：提取给定条件。\n- 外生生产率：$A_t = \\exp(\\varepsilon_t)$。\n- 随机冲击过程：$\\varepsilon_{t+1} = \\rho\\,\\varepsilon_t + \\sigma\\,\\eta_{t+1}$，其中 $\\eta_{t+1}\\sim \\mathcal{N}(0,1)$, $\\rho\\in(-1,1)$, $\\sigma > 0$。\n- 资本存量：固定在确定性稳态水平 $\\bar{k} > 0$。\n- 调整成本参数：$\\phi > 0$。\n- 折旧率：$\\delta \\in (0,1)$。\n- 投资 $i_t$ 的一阶条件（FOC）：$q_t = 1 + \\phi(\\frac{i_t}{\\bar{k}} - \\delta)$。\n- 投资的非负约束：$i_t \\ge 0$。\n- 资本影子价值近似：$q_t \\approx \\beta\\,(1-\\delta) + \\beta\\,\\alpha\\,\\bar{k}^{\\alpha - 1}\\, \\mathbb{E}_t[A_{t+1}]$。\n- 贴现因子：$\\beta\\in(0,1)$。\n- 资本弹性：$\\alpha\\in(0,1)$。\n- 生产率的条件期望：$\\mathbb{E}_t[A_{t+1}] = \\exp(\\rho\\,\\varepsilon_t + \\tfrac{1}{2}\\sigma^2)$。\n- 任务1：求出投资策略 $i(\\varepsilon_t) \\approx a + b\\,\\varepsilon_t + \\tfrac{1}{2}\\,c\\,\\varepsilon_t^2$ 在 $\\varepsilon_t=0$ 附近的二阶泰勒展开式的系数 $a$, $b$, $c$。\n- 任务2：对于 $g(\\varepsilon) := a + b\\,\\varepsilon + \\tfrac{1}{2}c\\,\\varepsilon^2$ 和 $\\varepsilon \\sim \\mathcal{N}(0,\\sigma^2)$，计算 $\\mathbb{E}[g(\\varepsilon)]$，$\\mathbb{E}[\\max\\{0,g(\\varepsilon)\\}]$ 和 $\\mathbb{P}(g(\\varepsilon)\\le 0)$。\n- 任务3：实现一个程序，为指定的参数集计算这三个量。\n- $(\\alpha,\\beta,\\delta,\\phi,\\bar{k},\\rho,\\sigma)$ 的测试用例：\n  1. $(0.33, 0.96, 0.08, 4.0, 1.0, 0.9, 0.10)$\n  2. $(0.33, 0.96, 0.08, 1.0, 1.0, 0.95, 0.25)$\n  3. $(0.20, 0.90, 0.05, 0.50, 1.0, 0.90, 0.30)$\n  4. $(0.20, 0.90, 0.164, 0.95, 1.0, 0.90, 0.20)$\n\n第2步：使用提取的给定条件进行验证。\n该问题具有科学依据，描述了一个源自宏观经济学的标准 $q$ 理论投资模型。所有方程和概念都是标准的。该问题提法明确，有一套清晰的指令用于推导和计算特定量。所有术语都有定义，参数被约束在具有经济意义的范围内。第2部分计算中使用的创新项方差 $\\sigma^2$ 与过程 $\\varepsilon$ 的方差之间的区别是一个明确的指令（“设... $\\varepsilon \\sim \\mathcal{N}(0,\\sigma^2)”$），这构成了问题该部分的简化假设，而非矛盾。该问题是客观的，不含任何非科学性主张。\n\n第3步：结论与行动。\n问题有效。将提供完整解答。\n\n**第1部分：二阶近似的推导**\n\n首先，我们推导投资策略函数 $i(\\varepsilon_t)$。从一阶条件中，我们分离出总投资 $i_t$：\n$$\nq_t = 1 + \\phi\\left(\\frac{i_t}{\\bar{k}} - \\delta\\right) \\implies i_t = \\frac{\\bar{k}}{\\phi}(q_t - 1 + \\phi\\delta)\n$$\n代入托宾 $q_t$ 的近似值：\n$$\ni_t = \\frac{\\bar{k}}{\\phi}\\left( \\left( \\beta(1-\\delta) + \\beta\\alpha\\bar{k}^{\\alpha-1} \\mathbb{E}_t[A_{t+1}] \\right) - 1 + \\phi\\delta \\right)\n$$\n使用给定的条件期望表达式 $\\mathbb{E}_t[A_{t+1}] = \\exp(\\rho\\varepsilon_t + \\frac{1}{2}\\sigma^2)$，我们得到作为当前冲击 $\\varepsilon_t$ 的函数的投资策略：\n$$\ni(\\varepsilon_t) = \\frac{\\bar{k}}{\\phi}(\\beta(1-\\delta) - 1 + \\phi\\delta) + \\frac{\\beta\\alpha\\bar{k}^{\\alpha}}{\\phi} \\exp\\left(\\rho\\varepsilon_t + \\frac{1}{2}\\sigma^2\\right)\n$$\n该函数的形式为 $i(\\varepsilon_t) = C_1 + C_2 \\exp(\\rho\\varepsilon_t + \\frac{1}{2}\\sigma^2)$，我们将在 $\\varepsilon_t = 0$ 附近对其进行泰勒级数展开。二阶展开式为 $i(\\varepsilon_t) \\approx i(0) + i'(0)\\varepsilon_t + \\frac{1}{2}i''(0)\\varepsilon_t^2$。\n通过与 $g(\\varepsilon_t) = a + b\\varepsilon_t + \\frac{1}{2}c\\varepsilon_t^2$ 比较，我们确定系数为 $a=i(0)$, $b=i'(0)$ 和 $c=i''(0)$。\n我们首先计算 $i(\\varepsilon_t)$ 对 $\\varepsilon_t$ 的导数：\n$$\ni'(\\varepsilon_t) = \\frac{\\beta\\alpha\\bar{k}^{\\alpha}}{\\phi} \\rho \\exp\\left(\\rho\\varepsilon_t + \\frac{1}{2}\\sigma^2\\right)\n$$\n$$\ni''(\\varepsilon_t) = \\frac{\\beta\\alpha\\bar{k}^{\\alpha}}{\\phi} \\rho^2 \\exp\\left(\\rho\\varepsilon_t + \\frac{1}{2}\\sigma^2\\right)\n$$\n在 $\\varepsilon_t = 0$ 处对这些导数求值：\n$$\na = i(0) = \\frac{\\bar{k}}{\\phi}(\\beta(1-\\delta) - 1 + \\phi\\delta) + \\frac{\\beta\\alpha\\bar{k}^{\\alpha}}{\\phi} \\exp\\left(\\frac{1}{2}\\sigma^2\\right)\n$$\n$$\nb = i'(0) = \\frac{\\beta\\alpha\\bar{k}^{\\alpha}}{\\phi} \\rho \\exp\\left(\\frac{1}{2}\\sigma^2\\right)\n$$\n$$\nc = i''(0) = \\frac{\\beta\\alpha\\bar{k}^{\\alpha}}{\\phi} \\rho^2 \\exp\\left(\\frac{1}{2}\\sigma^2\\right)\n$$\n这些表达式定义了二次近似 $g(\\varepsilon_t)$ 的系数。\n\n**第2部分：近似策略的统计特性**\n\n给定 $g(\\varepsilon) = a + b\\varepsilon + \\frac{1}{2}c\\varepsilon^2$ 且 $\\varepsilon \\sim \\mathcal{N}(0, \\sigma^2)$。\n\n**无约束均值：**\n$g(\\varepsilon)$ 的期望可以通过期望的线性性质和正态分布的特性求得：\n$$\n\\mathbb{E}[g(\\varepsilon)] = \\mathbb{E}\\left[a + b\\varepsilon + \\frac{1}{2}c\\varepsilon^2\\right] = a + b\\,\\mathbb{E}[\\varepsilon] + \\frac{1}{2}c\\,\\mathbb{E}[\\varepsilon^2]\n$$\n对于 $\\varepsilon \\sim \\mathcal{N}(0, \\sigma^2)$，我们有 $\\mathbb{E}[\\varepsilon] = 0$ 和 $\\mathbb{E}[\\varepsilon^2] = \\text{Var}(\\varepsilon) + (\\mathbb{E}[\\varepsilon])^2 = \\sigma^2$。因此，无约束均值为：\n$$\n\\mathbb{E}[g(\\varepsilon)] = a + \\frac{1}{2}c\\sigma^2\n$$\n\n**约束起作用的概率与受约束均值：**\n约束起作用的概率是 $\\mathbb{P}(g(\\varepsilon) \\le 0)$。受约束的期望是 $\\mathbb{E}[\\max\\{0, g(\\varepsilon)\\}]$。两者都要求解二次方程 $g(\\varepsilon) = 0$ 的根。这些根由 $\\varepsilon_{1,2} = \\frac{-b \\pm \\sqrt{\\Delta}}{c}$ 给出，其中判别式为 $\\Delta = b^2 - 2ac$。设 $p(\\varepsilon)$ 为 $\\mathcal{N}(0, \\sigma^2)$ 的概率密度函数（PDF）。设 $\\varphi(z)$ 和 $\\Phi(z)$ 分别为标准正态概率密度函数和累积分布函数（CDF）。\n\n我们根据 $c$ 和 $\\Delta$ 的符号进行分析：\n- 由于 $c = \\frac{\\beta\\alpha\\bar{k}^{\\alpha}}{\\phi} \\rho^2 \\exp(\\frac{1}{2}\\sigma^2)$，并且所有结构参数均为正，且在测试用例中 $\\rho \\ne 0$，所以 $c$ 严格为正。这意味着二次函数 $g(\\varepsilon)$ 是一条开口向上的抛物线。\n\n- 如果 $\\Delta < 0$，抛物线的最小值 $-\\Delta/(2c)$ 为正。因此，对于所有 $\\varepsilon$，$g(\\varepsilon) > 0$。\n  - 约束起作用的概率：$\\mathbb{P}(g(\\varepsilon) \\le 0) = 0$。\n  - 受约束均值：$\\mathbb{E}[\\max\\{0, g(\\varepsilon)\\}] = \\mathbb{E}[g(\\varepsilon)] = a + \\frac{1}{2}c\\sigma^2$。\n\n- 如果 $\\Delta \\ge 0$，存在两个实根 $\\varepsilon_1 \\le \\varepsilon_2$。当 $\\varepsilon \\in [\\varepsilon_1, \\varepsilon_2]$ 时，抛物线是非正的，即 $g(\\varepsilon) \\le 0$，其中 $\\varepsilon_1 = \\frac{-b - \\sqrt{\\Delta}}{c}$ 且 $\\varepsilon_2 = \\frac{-b + \\sqrt{\\Delta}}{c}$。\n  - **约束起作用的概率**：我们将根标准化为 $z_1 = \\varepsilon_1/\\sigma$ 和 $z_2 = \\varepsilon_2/\\sigma$。\n    $$\n    \\mathbb{P}(g(\\varepsilon) \\le 0) = \\mathbb{P}(\\varepsilon_1 \\le \\varepsilon \\le \\varepsilon_2) = \\Phi(z_2) - \\Phi(z_1)\n    $$\n  - **受约束均值**：期望是 $g(\\varepsilon)$ 在其为正的区域 $(-\\infty, \\varepsilon_1) \\cup (\\varepsilon_2, \\infty)$ 上的积分。\n    $$\n    \\mathbb{E}[\\max\\{0, g(\\varepsilon)\\}] = \\int_{-\\infty}^{\\varepsilon_1} g(\\varepsilon)p(\\varepsilon)d\\varepsilon + \\int_{\\varepsilon_2}^{\\infty} g(\\varepsilon)p(\\varepsilon)d\\varepsilon\n    $$\n    这等价于总期望减去在负值区域上的积分：\n    $$\n    \\mathbb{E}[\\max\\{0, g(\\varepsilon)\\}] = \\mathbb{E}[g(\\varepsilon)] - \\int_{\\varepsilon_1}^{\\varepsilon_2} g(\\varepsilon)p(\\varepsilon)d\\varepsilon\n    $$\n    所需的定积分可以表示为：\n    $$\n    \\int_{\\varepsilon_1}^{\\varepsilon_2} g(\\varepsilon)p(\\varepsilon)d\\varepsilon = \\left[ \\left(a+\\frac{c\\sigma^2}{2}\\right)\\Phi(z) - \\left(b\\sigma + \\frac{c\\sigma^2 z}{2}\\right) \\varphi(z) \\right]_{z_1}^{z_2}\n    $$\n    设此积分为 $I_{neg}$。则受约束均值为 $\\mathbb{E}[\\max\\{0, g(\\varepsilon)\\}] = (a + \\frac{1}{2}c\\sigma^2) - I_{neg}$。\n\n为完整起见，如果 $c < 0$（抛物线开口向下）：\n- 如果 $\\Delta < 0$，对于所有 $\\varepsilon$，$g(\\varepsilon) < 0$。$\\mathbb{P}(g \\le 0)=1$，$\\mathbb{E}[\\max\\{0,g\\}]=0$。\n- 如果 $\\Delta \\ge 0$，当 $\\varepsilon \\in (\\varepsilon_1, \\varepsilon_2)$ 时，$g(\\varepsilon) > 0$。\n  - $\\mathbb{P}(g \\le 0) = 1 - (\\Phi(z_2) - \\Phi(z_1))$。\n  - $\\mathbb{E}[\\max\\{0, g(\\varepsilon)\\}]$ 是在 $[\\varepsilon_1, \\varepsilon_2]$ 上的积分，由上面的 $I_{neg}$ 给出。\n\n如果 c=0，则 $g(\\varepsilon) = b\\varepsilon + a$。\n- 如果 $b>0$，当 $\\varepsilon \\le -a/b$ 时，$g \\le 0$。$\\mathbb{P}(g \\le 0) = \\Phi(-a/(b\\sigma))$。\n- 如果 $b<0$，当 $\\varepsilon \\ge -a/b$ 时，$g \\le 0$。$\\mathbb{P}(g \\le 0) = 1 - \\Phi(-a/(b\\sigma))$。\n- 受约束均值可以通过对该直线在其为正的区域上积分来计算。\n\n实现将遵循此逻辑，并根据问题参数的要求专用于 $c>0$ 的情况。", "answer": "```python\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Solves the quantitative economics problem for a suite of test cases.\n    \"\"\"\n\n    test_cases = [\n        # (alpha, beta, delta, phi, k_bar, rho, sigma)\n        (0.33, 0.96, 0.08, 4.0, 1.0, 0.9, 0.10),\n        (0.33, 0.96, 0.08, 1.0, 1.0, 0.95, 0.25),\n        (0.20, 0.90, 0.05, 0.50, 1.0, 0.90, 0.30),\n        (0.20, 0.90, 0.164, 0.95, 1.0, 0.90, 0.20),\n    ]\n\n    results = []\n    for params in test_cases:\n        result_tuple = calculate_metrics(params)\n        results.extend(result_tuple)\n\n    # Print the final results in the specified format\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef calculate_metrics(params):\n    \"\"\"\n    Computes the three required metrics for a single parameter set.\n    1. Unconstrained mean E[g(eps)]\n    2. Constrained mean E[max{0, g(eps)}]\n    3. Binding probability P(g(eps) <= 0)\n    \"\"\"\n    alpha, beta, delta, phi, k_bar, rho, sigma = params\n\n    # Part 1: Compute coefficients a, b, c\n    sigma2 = sigma**2\n    exp_term = np.exp(0.5 * sigma2)\n    \n    # Common factor for b and c\n    K = (beta * alpha * k_bar**alpha / phi) * exp_term\n    \n    a = (k_bar / phi) * (beta * (1 - delta) - 1 + phi * delta) + K\n    b = K * rho\n    c = K * rho**2\n\n    # Part 2: Compute statistical properties\n    # Unconstrained mean E[g(eps)]\n    unconstrained_mean = a + 0.5 * c * sigma2\n\n    # Since all parameters are positive and rho is non-zero, c is always > 0.\n    # The quadratic g(eps) is a parabola opening upwards.\n\n    # Discriminant Delta = b^2 - 2ac\n    delta_discriminant = b**2 - 2 * a * c\n\n    if delta_discriminant < 0:\n        # g(eps) is always positive\n        binding_prob = 0.0\n        constrained_mean = unconstrained_mean\n    else:\n        # g(eps) has two real roots, so the constraint can bind.\n        sqrt_delta = np.sqrt(delta_discriminant)\n        \n        # Roots of g(eps) = 0\n        eps1 = (-b - sqrt_delta) / c\n        eps2 = (-b + sqrt_delta) / c\n        \n        # Standardized roots\n        z1 = eps1 / sigma\n        z2 = eps2 / sigma\n        \n        # Binding probability P(g(eps) <= 0) = P(eps1 <= eps <= eps2)\n        binding_prob = norm.cdf(z2) - norm.cdf(z1)\n        \n        # Constrained mean E[max{0, g(eps)}] = E[g(eps)] - integral of g(eps) over [eps1, eps2]\n        \n        # Integral of g(eps)p(eps) from eps1 to eps2\n        # Let F(z) = (a + c*sig^2/2)Phi(z) - (b*sig + c*sig^2*z/2)phi(z)\n        # Integral is F(z2) - F(z1)\n        term_phi = a + 0.5 * c * sigma2\n        \n        F_z2 = term_phi * norm.cdf(z2) - (b*sigma + 0.5*c*sigma2*z2) * norm.pdf(z2)\n        F_z1 = term_phi * norm.cdf(z1) - (b*sigma + 0.5*c*sigma2*z1) * norm.pdf(z1)\n        \n        integral_neg_region = F_z2 - F_z1\n        \n        constrained_mean = unconstrained_mean - integral_neg_region\n        \n    return unconstrained_mean, constrained_mean, binding_prob\n\nsolve()\n```"}]}