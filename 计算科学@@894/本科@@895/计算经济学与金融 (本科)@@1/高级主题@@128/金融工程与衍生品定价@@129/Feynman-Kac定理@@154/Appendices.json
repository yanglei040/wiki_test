{"hands_on_practices": [{"introduction": "在金融领域，评估未来不确定现金流的现值是一项核心任务。虽然费曼-卡茨定理将此类问题与偏微分方程联系起来，但有时我们可以另辟蹊径。本练习将演示一种更直接的方法：利用期望的线性性质，通过对标的资产的期望路径进行积分，来计算一个依赖于路径的积分期望值，这是一种强大且常常更为简洁的技巧。[@problem_id:2440775]", "id": "2440775", "problem": "考虑一个在真实世界概率测度下，被建模为一维伊藤扩散的股价过程。该过程遵循随机微分方程 $dX_t = \\mu X_t \\, dt + \\sigma X_t \\, dW_t$，其中 $X_t$ 是时刻 $t$ 的股价，$\\mu$ 和 $\\sigma$ 是常数，而 $W_t$ 是标准布朗运动。该股票以瞬时速率 $f(X_t,t)$ 支付连续股息流，其表达式为 $f(X_t,t) = a \\, e^{-\\kappa t} + q \\, X_t \\, e^{-\\lambda t}$，其中 $a$、$\\kappa$、$q$ 和 $\\lambda$ 均为非负常数。将从当前时刻 $t=0$ 到固定时间视界 $T$ 所支付的预期总股息定义为泛函\n$$\nu(x_0,0) = \\mathbb{E}\\left[\\int_{0}^{T} f(X_t,t) \\, dt \\,\\bigg|\\, X_0 = x_0\\right].\n$$\n使用 Feynman–Kac 定理来构建 $u(x,t)$ 必须满足的相应后向偏微分方程 (PDE) 问题，包括在 $t=T$ 时的终端条件。仅从伊藤扩散的定义、期望的线性性质以及 Feynman–Kac 定理出发（不要假设任何关于 $u$ 的最终公式），确定 $u(x_0,0)$ 关于 $x_0$、$\\mu$、$\\sigma$、$T$、$a$、$\\kappa$、$q$ 和 $\\lambda$ 的闭式表达式。您的表达式必须在所有情况下均有效，包括边界情况 $\\kappa = 0$ 和 $\\mu = \\lambda$，并且当分母为零时，应通过适当的连续极限得到。\n\n然后，您必须实现一个程序，该程序能针对一组给定的参数元组，使用您推导出的闭式表达式来数值计算 $u(x_0,0)$。程序必须通过在测试相等性时使用数值稳定的容差来稳健地处理 $\\kappa \\to 0$ 和 $\\mu \\to \\lambda$ 的极限情况。所有利率都应解释为小数（例如，百分之五的利率为 $0.05$）。\n\n您的程序必须评估以下参数集测试套件，每个参数集指定为 $(x_0,\\mu,\\sigma,T,a,\\kappa,q,\\lambda)$：\n\n- 测试 $1$：$(100,\\, 0.03,\\, 0.20,\\, 2.0,\\, 1.5,\\, 0.5,\\, 0.02,\\, 0.1)$，指数不同的一般情况。\n- 测试 $2$：$(80,\\, 0.04,\\, 0.25,\\, 1.5,\\, 2.0,\\, 0.0,\\, 0.03,\\, 0.2)$，边界情况 $\\kappa = 0$。\n- 测试 $3$：$(120,\\, 0.05,\\, 0.15,\\, 3.0,\\, 0.5,\\, 0.3,\\, 0.01,\\, 0.05)$，边界情况 $\\mu = \\lambda$。\n- 测试 $4$：$(50,\\, 0.07,\\, 0.30,\\, 0.0,\\, 1.0,\\, 0.4,\\, 0.02,\\, 0.6)$，边界情况 $T = 0$。\n- 测试 $5$：$(90,\\, -0.02,\\, 0.18,\\, 2.5,\\, 1.2,\\, 0.25,\\, 0.05,\\, 0.01)$，负漂移的情况。\n\n您的程序必须为每个测试用例生成 $u(x_0,0)$ 的数值，结果为实数并四舍五入到六位小数。最终输出格式必须是单行，包含一个由方括号括起来的、逗号分隔的五个结果列表，例如 $[r_1,r_2,r_3,r_4,r_5]$，其中每个 $r_i$ 是小数点后恰好有六位的浮点数。", "solution": "在尝试任何解答之前，将首先对问题陈述进行严格的验证程序。\n\n### 步骤 1：提取已知信息\n\n问题陈述中提供了以下信息：\n\n- **股价过程**：一个由随机微分方程 (SDE) $dX_t = \\mu X_t \\, dt + \\sigma X_t \\, dW_t$ 控制的一维伊藤扩散。\n    - $X_t$：时刻 $t$ 的股价。\n    - $\\mu, \\sigma$：恒定的漂移率和波动率。\n    - $W_t$：标准布朗运动。\n- **连续股息流**：瞬时股息率由 $f(X_t,t) = a \\, e^{-\\kappa t} + q \\, X_t \\, e^{-\\lambda t}$ 给出。\n    - $a, \\kappa, q, \\lambda$：非负常数。\n- **待计算的泛函**：从时刻 $t=0$ 到 $T$ 的预期总股息定义为：\n    $$ u(x_0,0) = \\mathbb{E}\\left[\\int_{0}^{T} f(X_t,t) \\, dt \\,\\bigg|\\, X_0 = x_0\\right] $$\n- **任务要求**：\n    1. 使用 Feynman–Kac 定理构建 $u(x,t)$ 的后向偏微分方程 (PDE)，包括终端条件。\n    2. 推导出 $u(x_0,0)$ 的闭式表达式。\n    3. 推导必须从第一性原理出发（伊藤扩散、期望的线性性质、Feynman-Kac 定理）。\n    4. 表达式必须在所有情况下均有效，包括 $\\kappa = 0$ 和 $\\mu = \\lambda$。\n    5. 实现一个程序，为一组给定的测试用例计算 $u(x_0,0)$。\n\n### 步骤 2：使用提取的已知信息进行验证\n\n根据验证标准对问题进行评估。\n\n- **科学性**：该问题设置在现代量化金融的标准框架内。股价过程是几何布朗运动模型，这是 Black-Scholes-Merton 理论的基石。股息结构是关于时间和股价的明确定义的函数。待计算的泛函，即路径依赖量的期望值，是一个常见的研究对象。Feynman-Kac 定理是将此类期望与 PDE 联系起来的正确且标准的数学工具。该问题没有任何伪科学或事实性错误。\n- **适定性**：该问题是适定的。该随机微分方程是线性的，且系数性质良好，保证了 $X_t$ 存在唯一的强解。泛函 $u(x_0,0)$ 是一个明确定义的期望，其存在性由该过程和股息函数的性质保证。参数定义清晰，并提供了足够的信息来推导唯一解。\n- **客观性**：语言精确、数学化，没有任何主观或模棱两可的术语。\n- **无其他缺陷**：问题是自洽的，其设置是一致的，并且条件在数学模型中是可行的。它不是隐喻性的、琐碎的，也没有超出科学验证的范围。\n\n### 步骤 3：结论与行动\n\n问题是**有效的**。将着手制定解决方案。\n\n### 闭式解的推导\n\n任务是求出以下泛函的闭式表达式：\n$$ u(x_0, 0) = \\mathbb{E}\\left[\\int_{0}^{T} f(X_s,s) \\, ds \\,\\bigg|\\, X_0 = x_0\\right] $$\n其中 $dX_t = \\mu X_t \\, dt + \\sigma X_t \\, dW_t$ 且 $f(X_t,t) = a \\, e^{-\\kappa t} + q \\, X_t \\, e^{-\\lambda t}$。\n\n首先，我们将泛函推广到任意起始时间 $t \\in [0, T]$ 和状态 $X_t = x$：\n$$ u(x,t) = \\mathbb{E}\\left[\\int_{t}^{T} f(X_s,s) \\, ds \\,\\bigg|\\, X_t = x\\right] $$\n\n按照要求，我们使用 Feynman–Kac 定理来构建 PDE 问题。一般定理将形如 $\\frac{\\partial u}{\\partial t} + \\mathcal{A}u - r u + g = 0$ 且带有终端条件 $u(x,T) = \\psi(x)$ 的 PDE 与期望 $u(x,t) = \\mathbb{E}\\left[\\int_t^T e^{-\\int_t^s r(X_v) dv} g(X_s,s) ds + e^{-\\int_t^T r(X_v) dv} \\psi(X_T) | X_t=x\\right]$ 联系起来，其中 $\\mathcal{A}$ 是扩散过程的无穷小生成元。\n\n对于给定的过程 $dX_s = \\mu X_s ds + \\sigma X_s dW_s$，漂移系数为 $b(x,s) = \\mu x$，扩散系数为 $\\eta(x,s) = \\sigma x$。因此，无穷小生成元 $\\mathcal{A}$ 为：\n$$ \\mathcal{A}u = b(x,s) \\frac{\\partial u}{\\partial x} + \\frac{1}{2} \\eta(x,s)^2 \\frac{\\partial^2 u}{\\partial x^2} = \\mu x \\frac{\\partial u}{\\partial x} + \\frac{1}{2}\\sigma^2 x^2 \\frac{\\partial^2 u}{\\partial x^2} $$\n\n通过将我们的目标泛函与一般的 Feynman-Kac 公式进行比较，我们确定了以下组成部分：\n- 贴现率函数为 $r(x,s) = 0$。\n- 运行成本（或股息）函数为 $g(x,s) = f(x,s) = a e^{-\\kappa s} + q x e^{-\\lambda s}$。\n- 终端价值函数为 $\\psi(x) = 0$。\n\n将这些代入一般 PDE 形式，得到 $u(x,t)$ 在 $t \\in [0,T)$ 上必须满足的后向 PDE：\n$$ \\frac{\\partial u}{\\partial t} + \\mu x \\frac{\\partial u}{\\partial x} + \\frac{1}{2}\\sigma^2 x^2 \\frac{\\partial^2 u}{\\partial x^2} + a e^{-\\kappa t} + q x e^{-\\lambda t} = 0 $$\n在 $t=T$ 处的相应终端条件由 $u(x,T)$ 的定义导出：\n$$ u(x,T) = \\mathbb{E}\\left[\\int_{T}^{T} f(X_s,s) \\, ds \\,\\bigg|\\, X_T = x\\right] = \\mathbb{E}[0] = 0 $$\n\n虽然这个 PDE 可以求解，但更直接的方法是直接评估期望值，这种方法完全符合问题的约束。我们从 $u(x_0,0)$ 的定义开始，并应用期望的线性性质和 Fubini 定理（由于被积函数非负，这是合理的）：\n$$ u(x_0, 0) = \\mathbb{E}\\left[\\int_{0}^{T} (a e^{-\\kappa t} + q X_t e^{-\\lambda t}) dt \\,\\bigg|\\, X_0 = x_0\\right] = \\int_{0}^{T} \\mathbb{E}[a e^{-\\kappa t} + q X_t e^{-\\lambda t} | X_0=x_0 ] dt $$\n$$ u(x_0, 0) = \\int_{0}^{T} \\left( a e^{-\\kappa t} + q e^{-\\lambda t} \\mathbb{E}[X_t | X_0=x_0] \\right) dt $$\n\n下一步是计算条件期望 $\\mathbb{E}[X_t | X_0=x_0]$。该 SDE $dX_t = \\mu X_t dt + \\sigma X_t dW_t$ 描述了一个几何布朗运动。其解已知为 $X_t = X_0 \\exp\\left((\\mu - \\frac{1}{2}\\sigma^2)t + \\sigma W_t\\right)$。取期望：\n$$ \\mathbb{E}[X_t | X_0=x_0] = \\mathbb{E}\\left[x_0 \\exp\\left((\\mu - \\frac{1}{2}\\sigma^2)t + \\sigma W_t\\right)\\right] = x_0 \\exp\\left((\\mu - \\frac{1}{2}\\sigma^2)t\\right) \\mathbb{E}[\\exp(\\sigma W_t)] $$\n由于 $W_t \\sim \\mathcal{N}(0, t)$，随机变量 $\\sigma W_t$ 服从均值为 $0$、方差为 $\\sigma^2 t$ 的正态分布。正态随机变量 $Z \\sim \\mathcal{N}(\\nu, \\tau^2)$ 的矩生成函数为 $\\mathbb{E}[e^{sZ}] = e^{s\\nu + \\frac{1}{2}s^2\\tau^2}$。对于 $\\sigma W_t$ 和 $s=1$，我们有：\n$$ \\mathbb{E}[\\exp(\\sigma W_t)] = \\exp\\left(1 \\cdot 0 + \\frac{1}{2} \\cdot 1^2 \\cdot \\sigma^2 t\\right) = \\exp\\left(\\frac{1}{2}\\sigma^2 t\\right) $$\n将其代回，我们得到一个基本结果：\n$$ \\mathbb{E}[X_t | X_0=x_0] = x_0 \\exp\\left((\\mu - \\frac{1}{2}\\sigma^2)t\\right) \\exp\\left(\\frac{1}{2}\\sigma^2 t\\right) = x_0 e^{\\mu t} $$\n\n现在，我们将此期望值代入 $u(x_0,0)$ 的积分中：\n$$ u(x_0, 0) = \\int_{0}^{T} \\left( a e^{-\\kappa t} + q e^{-\\lambda t} (x_0 e^{\\mu t}) \\right) dt = \\int_{0}^{T} a e^{-\\kappa t} dt + \\int_{0}^{T} q x_0 e^{(\\mu-\\lambda) t} dt $$\n\n我们分别计算每个积分。\n\n对于第一个积分，$I_1 = \\int_{0}^{T} a e^{-\\kappa t} dt$：\n-   如果 $\\kappa \\neq 0$：\n    $$ I_1 = a \\left[ \\frac{e^{-\\kappa t}}{-\\kappa} \\right]_0^T = a \\left( \\frac{e^{-\\kappa T}}{-\\kappa} - \\frac{e^0}{-\\kappa} \\right) = a \\frac{1 - e^{-\\kappa T}}{\\kappa} $$\n-   如果 $\\kappa = 0$：\n    $$ I_1 = \\int_{0}^{T} a dt = aT $$\n    当 $\\kappa \\to 0$ 时，使用 L'Hôpital 法则对第一种情况取极限得到 $\\lim_{\\kappa \\to 0} a \\frac{1 - e^{-\\kappa T}}{\\kappa} = \\lim_{\\kappa \\to 0} a \\frac{T e^{-\\kappa T}}{1} = aT$，这证实了结果的一致性。\n\n对于第二个积分，$I_2 = \\int_{0}^{T} q x_0 e^{(\\mu-\\lambda) t} dt$：\n-   如果 $\\mu - \\lambda \\neq 0$：\n    $$ I_2 = q x_0 \\left[ \\frac{e^{(\\mu-\\lambda) t}}{\\mu-\\lambda} \\right]_0^T = q x_0 \\left( \\frac{e^{(\\mu-\\lambda) T}}{\\mu-\\lambda} - \\frac{e^0}{\\mu-\\lambda} \\right) = q x_0 \\frac{e^{(\\mu-\\lambda) T} - 1}{\\mu-\\lambda} $$\n-   如果 $\\mu - \\lambda = 0$ (即 $\\mu = \\lambda$)：\n    $$ I_2 = \\int_{0}^{T} q x_0 dt = q x_0 T $$\n    同样，当 $\\mu-\\lambda \\to 0$ 时，对第一种情况取极限得到 $\\lim_{\\mu-\\lambda \\to 0} q x_0 \\frac{e^{(\\mu-\\lambda) T} - 1}{\\mu-\\lambda} = \\lim_{\\mu-\\lambda \\to 0} q x_0 \\frac{T e^{(\\mu-\\lambda) T}}{1} = q x_0 T$，这证实了结果的一致性。\n\n结合这些结果，$u(x_0,0)$ 的最终闭式表达式为：\n$$ u(x_0, 0) = I_1 + I_2 $$\n该表达式必须使用条件逻辑来实现，以处理分母为零的情况。\n$$ u(x_0, 0) = \\begin{cases} aT & \\text{若 } \\kappa = 0 \\\\ a \\frac{1 - e^{-\\kappa T}}{\\kappa} & \\text{若 } \\kappa \\neq 0 \\end{cases} + \\begin{cases} q x_0 T & \\text{若 } \\mu=\\lambda \\\\ q x_0 \\frac{e^{(\\mu-\\lambda) T} - 1}{\\mu-\\lambda} & \\text{若 } \\mu \\neq \\lambda \\end{cases} $$\n该表达式对于所有指定的非负参数都是有效和稳健的。需要注意的是，波动率 $\\sigma$ 并未出现在最终表达式中。这是因为几何布朗运动过程 $X_t$ 的期望仅取决于漂移率 $\\mu$，而与其方差无关。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the expected total dividends for a set of test cases\n    based on a derived closed-form solution.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (x0, mu, sigma, T, a, kappa, q, lambda)\n    test_cases = [\n        (100.0, 0.03, 0.20, 2.0, 1.5, 0.5, 0.02, 0.1),    # Test 1: General case\n        (80.0, 0.04, 0.25, 1.5, 2.0, 0.0, 0.03, 0.2),      # Test 2: kappa = 0\n        (120.0, 0.05, 0.15, 3.0, 0.5, 0.3, 0.01, 0.05),   # Test 3: mu = lambda\n        (50.0, 0.07, 0.30, 0.0, 1.0, 0.4, 0.02, 0.6),      # Test 4: T = 0\n        (90.0, -0.02, 0.18, 2.5, 1.2, 0.25, 0.05, 0.01),  # Test 5: Negative drift\n    ]\n\n    results = []\n    # Tolerance for checking if a value is close to zero, to handle special cases robustly.\n    tol = 1e-12\n\n    for case in test_cases:\n        x0, mu, sigma, T, a, kappa, q, lam = case\n\n        # Handle the edge case where T = 0. The integral from 0 to 0 is 0.\n        if T == 0.0:\n            results.append(0.0)\n            continue\n\n        # Calculate the first term of the solution, related to the dividend component 'a'.\n        # This corresponds to the integral of a * exp(-kappa*t).\n        if abs(kappa) < tol:\n            # If kappa is zero, the integral is a*T.\n            term1 = a * T\n        else:\n            # The general case for kappa != 0.\n            term1 = a * (1.0 - np.exp(-kappa * T)) / kappa\n\n        # Calculate the second term of the solution, related to the dividend component 'q*X_t'.\n        # This corresponds to the integral of q * x0 * exp((mu-lambda)*t).\n        mu_minus_lambda = mu - lam\n        if abs(mu_minus_lambda) < tol:\n            # If mu equals lambda, the exponent is zero, and the integral is q*x0*T.\n            term2 = q * x0 * T\n        else:\n            # The general case for mu != lambda.\n            term2 = q * x0 * (np.exp(mu_minus_lambda * T) - 1.0) / mu_minus_lambda\n\n        # The total expected dividend is the sum of the two terms.\n        total_dividend = term1 + term2\n        results.append(total_dividend)\n\n    # Final print statement in the exact required format.\n    # Results are formatted to six decimal places.\n    print(f\"[{','.join([f'{r:.6f}' for r in results])}]\")\n\nsolve()\n```"}, {"introduction": "金融和经济模型不仅限于股票价格所遵循的几何布朗运动。本练习将我们的视野拓宽到均值回归过程，引入常用于模拟利率或大宗商品价格的奥恩斯坦-乌伦贝克（Ornstein-Uhlenbeck）过程。此处的挑战在于为一个既包含连续成本流又包含最终支付的合约估值，它将清晰地展示费曼-卡茨框架如何优雅地结合这两种未来的价值。[@problem_id:2440756]", "id": "2440756", "problem": "考虑一个简化的碳信用定价问题，其中标的大气二氧化碳水平相对于基线的偏差（由 $X_t$ 表示）遵循 Ornstein–Uhlenbeck 随机微分方程 (SDE)：\n$$\ndX_t = \\left(\\alpha - \\beta X_t\\right)\\,dt + \\sigma\\,dW_t,\\quad X_0 = x_0,\n$$\n其中 $\\alpha$、$\\beta$ 和 $\\sigma$ 是常数，$W_t$ 是标准布朗运动，$x_0$ 给定。设 $r$ 为恒定贴现率。设瞬时碳社会成本由势项 $V(x,t) = c_0 + c_1 x$ 建模，而时间 $T$ 的终端收益为 $g(x) = q x$，其中常数 $c_0$、$c_1$、$q$ 和 $T>0$ 均已给定。将时间 $t$ 的价值函数 $u(t,x)$ 定义为终端收益的现值加上社会成本的贴现流，并在风险中性测度下进行评估。\n\n根据 Feynman–Kac 定理，价值函数 $u(t,x)$ 是以下线性抛物型偏微分方程的唯一（足够正则）解：\n$$\n\\frac{\\partial u}{\\partial t}(t,x) + \\left(\\alpha - \\beta x\\right)\\frac{\\partial u}{\\partial x}(t,x) + \\frac{1}{2}\\sigma^2 \\frac{\\partial^2 u}{\\partial x^2}(t,x) - r\\,u(t,x) + \\left(c_0 + c_1 x\\right) = 0,\n$$\n其终端条件为：\n$$\nu(T,x) = q\\,x.\n$$\n等价地，对于 $0 \\le t \\le T$，Feynman–Kac 表示意味着：\n$$\nu(t,x) = \\mathbb{E}\\left[ e^{-r (T-t)}\\,q\\,X_T + \\int_t^T e^{-r (s-t)} \\left(c_0 + c_1 X_s\\right)\\,ds \\,\\bigg|\\, X_t = x \\right].\n$$\n\n任务：编写一个完整的、可运行的程序，为以下参数集测试套件计算 $u(0,x_0)$。对于每种情况，程序必须使用上述数学规范，并为 $u(0,x_0)$ 生成一个单一的浮点数结果。\n\n测试集：\n- 情况 A（理想情况，仅有确定性终端收益）：$(\\alpha,\\beta,\\sigma,r,T,x_0,c_0,c_1,q) = (0,0,0,0.05,1,10,0,0,1)$。\n- 情况 B（零贴现和确定性运行成本的特殊情况）：$(\\alpha,\\beta,\\sigma,r,T,x_0,c_0,c_1,q) = (2,1,0,0,\\ln 2,5,0,2,0)$。\n- 情况 C（包含运行成本和终端收益两部分的一般随机设置）：$(\\alpha,\\beta,\\sigma,r,T,x_0,c_0,c_1,q) = (0.5,0.3,0.6,0.04,1.5,8,0,1,0.5)$。\n\n您的程序必须计算这三种情况下的 $u(0,x_0)$，并将三个结果聚合到最终输出中。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表（例如 `[a,b,c]`），其中每个条目都是一个四舍五入到 6 位小数的浮点数。\n\n不允许使用外部输入或文件，输出中也不允许有随机性。\n\n所有结果都是无量纲实数。不使用角度。如果在中间步骤中需要比例，则必须在内部作为小数处理；输出中不得出现百分号。最终输出必须是如上所述的浮点数。", "solution": "首先，将对问题陈述进行严格验证。\n\n第 1 步：提取已知条件\n已知条件如下：\n- $X_t$ 的随机微分方程 (SDE)：\n$$\ndX_t = \\left(\\alpha - \\beta X_t\\right)\\,dt + \\sigma\\,dW_t,\\quad X_0 = x_0\n$$\n- 参数：常数 $\\alpha$、$\\beta$、$\\sigma$、$r$、$T > 0$、$x_0$、$c_0$、$c_1$、$q$。\n- 瞬时碳社会成本（势项）：$V(x,t) = c_0 + c_1 x$。\n- 终端收益：$g(x) = qx$。\n- 通过 Feynman-Kac 表示的价值函数定义：\n$$\nu(t,x) = \\mathbb{E}\\left[ e^{-r (T-t)}\\,q\\,X_T + \\int_t^T e^{-r (s-t)} \\left(c_0 + c_1 X_s\\right)\\,ds \\,\\bigg|\\, X_t = x \\right]\n$$\n- 等价的偏微分方程 (PDE)：\n$$\n\\frac{\\partial u}{\\partial t}(t,x) + \\left(\\alpha - \\beta x\\right)\\frac{\\partial u}{\\partial x}(t,x) + \\frac{1}{2}\\sigma^2 \\frac{\\partial^2 u}{\\partial x^2}(t,x) - r\\,u(t,x) + \\left(c_0 + c_1 x\\right) = 0\n$$\n其终端条件为 $u(T,x) = qx$。\n- 任务：为三个指定的参数集计算 $u(0, x_0)$。\n\n第 2 步：使用提取的已知条件进行验证\n根据验证标准对问题进行分析。\n- **科学依据**：该问题基于 Ornstein-Uhlenbeck 过程和 Feynman-Kac 定理，这些是随机微积分及其在金融和经济学应用中的标准、完善的理论结构。该模型是仿射期限结构模型的典型例子。其表述在科学上和数学上都是合理的。\n- **适定性**：该问题要求计算一个特定的条件期望，对于给定的线性模型，它具有唯一的解析解。任务简化为求初等积分。每种情况都提供了所有必要的参数，使得问题自洽且可解。\n- **客观性**：该问题使用精确、无歧义的数学语言和符号进行陈述。没有主观或基于观点的陈述。\n\n第 3 步：结论与行动\n问题有效。这是一个在计算金融学领域中适定且有科学依据的问题。将提供一个完整的解。\n\n目标是计算由特定条件期望给出的价值函数 $u(0, x_0)$。根据期望算子的线性性，$u(0, x_0)$ 的表达式可分解为：\n$$\nu(0, x_0) = q\\,e^{-rT} \\mathbb{E}[X_T | X_0=x_0] + \\int_0^T e^{-rs} \\mathbb{E}[(c_0 + c_1 X_s) | X_0=x_0]\\,ds\n$$\n$$\nu(0, x_0) = q\\,e^{-rT} \\mathbb{E}[X_T | X_0=x_0] + c_0 \\int_0^T e^{-rs}\\,ds + c_1 \\int_0^T e^{-rs} \\mathbb{E}[X_s | X_0=x_0]\\,ds\n$$\n波动率参数 $\\sigma$ 不出现在 $X_s$ 的期望中，这是线性 SDE 的一个已知属性。\n\n计算的核心是 Ornstein-Uhlenbeck 过程的条件期望 $\\mathbb{E}[X_s | X_0 = x_0]$。SDE的解给出了这个期望。\n\n当 $\\beta \\neq 0$ 时：\n$$\n\\mathbb{E}[X_s | X_0=x_0] = x_0 e^{-\\beta s} + \\frac{\\alpha}{\\beta}(1 - e^{-\\beta s})\n$$\n对于 $\\beta = 0$ 的特殊情况，SDE 简化为 $dX_t = \\alpha dt + \\sigma dW_t$，这是一个算术布朗运动。其期望为：\n$$\n\\mathbb{E}[X_s | X_0=x_0] = x_0 + \\alpha s\n$$\n\n我们将通过分别处理 $\\beta$ 的这两种情况来推导解。\n\n情况1：$\\beta \\neq 0$\n我们将 $\\mathbb{E}[X_s | X_0=x_0]$ 的表达式代入 $u(0, x_0)$ 的公式中。总价值是三个组成部分之和：\n1.  终端收益部分：$I_{term} = q\\,e^{-rT} \\mathbb{E}[X_T | X_0=x_0] = q\\,e^{-rT} \\left( x_0 e^{-\\beta T} + \\frac{\\alpha}{\\beta}(1 - e^{-\\beta T}) \\right)$。\n2.  恒定运行成本部分：$I_{run,c_0} = c_0 \\int_0^T e^{-rs}\\,ds$。\n3.  状态依赖的运行成本部分：$I_{run,c_1} = c_1 \\int_0^T e^{-rs} \\left( x_0 e^{-\\beta s} + \\frac{\\alpha}{\\beta}(1 - e^{-\\beta s}) \\right) \\,ds$。\n\n积分通过解析方式求解。我们定义一个通用积分函数：\n$$\n\\text{Integral}_1(k, T) = \\int_0^T e^{-ks}\\,ds = \\begin{cases} T & \\text{if } k=0 \\\\ \\frac{1 - e^{-kT}}{k} & \\text{if } k \\neq 0 \\end{cases}\n$$\n使用此函数，$I_{run,c_0} = c_0 \\cdot \\text{Integral}_1(r, T)$。\n$I_{run,c_1}$ 中的积分被拆分为：\n$$\nI_{run,c_1} = c_1 x_0 \\int_0^T e^{-(r+\\beta)s}\\,ds + \\frac{c_1 \\alpha}{\\beta} \\int_0^T (e^{-rs} - e^{-(r+\\beta)s})\\,ds\n$$\n$$\nI_{run,c_1} = c_1 x_0 \\cdot \\text{Integral}_1(r+\\beta, T) + \\frac{c_1 \\alpha}{\\beta} \\left( \\text{Integral}_1(r, T) - \\text{Integral}_1(r+\\beta, T) \\right)\n$$\n将这三部分相加，得到 $u(0, x_0) = I_{term} + I_{run,c_0} + I_{run,c_1}$。\n\n情况2：$\\beta = 0$\n此时，$\\mathbb{E}[X_s | X_0=x_0] = x_0 + \\alpha s$。各组成部分为：\n1.  终端收益部分：$I_{term} = q\\,e^{-rT} (x_0 + \\alpha T)$。\n2.  运行成本部分：$I_{run} = \\int_0^T e^{-rs} (c_0 + c_1(x_0+\\alpha s))\\,ds$。这可以拆分为：\n$$\nI_{run} = (c_0 + c_1 x_0) \\int_0^T e^{-rs}\\,ds + c_1 \\alpha \\int_0^T s e^{-rs}\\,ds\n$$\n第一个积分是 $\\text{Integral}_1(r, T)$。第二个积分是一种新形式：\n$$\n\\text{Integral}_2(k, T) = \\int_0^T s e^{-ks}\\,ds = \\begin{cases} \\frac{T^2}{2} & \\text{if } k=0 \\\\ \\frac{1 - e^{-kT} - kTe^{-kT}}{k^2} & \\text{if } k \\neq 0 \\end{cases}\n$$\n因此，当 $\\beta=0$ 时，价值为：\n$$\nu(0, x_0) = q\\,e^{-rT} (x_0 + \\alpha T) + (c_0 + c_1 x_0)\\text{Integral}_1(r, T) + c_1 \\alpha \\text{Integral}_2(r, T)\n$$\n这些闭式表达式允许对任何给定的参数集直接计算 $u(0, x_0)$，并正确处理积分中的奇点 $k=0$（对应于 $r=0$、$ \\beta=0$ 或 $r+\\beta=0$）。程序实现将基于这些推导出的公式。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for u(0, x_0) for the given test cases based on the\n    analytical solution derived from the Feynman-Kac representation.\n    \"\"\"\n\n    test_cases = [\n        # Case A: (alpha, beta, sigma, r, T, x0, c0, c1, q)\n        (0.0, 0.0, 0.0, 0.05, 1.0, 10.0, 0.0, 0.0, 1.0),\n        # Case B:\n        (2.0, 1.0, 0.0, 0.0, np.log(2), 5.0, 0.0, 2.0, 0.0),\n        # Case C:\n        (0.5, 0.3, 0.6, 0.04, 1.5, 8.0, 0.0, 1.0, 0.5),\n    ]\n\n    results = []\n    for params in test_cases:\n        result = calculate_u(*params)\n        results.append(result)\n\n    # Format the output string as required.\n    print(f\"[{','.join(f'{x:.6f}' for x in results)}]\")\n\ndef integral_1(k, T):\n    \"\"\"\n    Computes the definite integral of exp(-k*s) from 0 to T.\n    Integral: ∫[0,T] e^(-ks) ds\n    \"\"\"\n    if abs(k) < 1e-9:\n        return T\n    return (1 - np.exp(-k * T)) / k\n\ndef integral_2(k, T):\n    \"\"\"\n    Computes the definite integral of s*exp(-k*s) from 0 to T.\n    Integral: ∫[0,T] s*e^(-ks) ds\n    \"\"\"\n    if abs(k) < 1e-9:\n        return T**2 / 2.0\n    return (1 - np.exp(-k * T) - k * T * np.exp(-k * T)) / k**2\n\ndef calculate_u(alpha, beta, sigma, r, T, x0, c0, c1, q):\n    \"\"\"\n    Calculates the value u(0, x0) using the derived analytical solution.\n    Handles the special case when beta is zero.\n    The parameter sigma is not used in the expectation calculation.\n    \"\"\"\n    \n    # Case when beta is effectively zero (Arithmetic Brownian Motion)\n    if abs(beta) < 1e-9:\n        # Terminal value component\n        term1 = q * np.exp(-r * T) * (x0 + alpha * T)\n        \n        # Running cost components\n        int1_r = integral_1(r, T)\n        int2_r = integral_2(r, T)\n        \n        term2 = c0 * int1_r\n        term3 = c1 * x0 * int1_r\n        term4 = c1 * alpha * int2_r\n        \n        return term1 + term2 + term3 + term4\n\n    # General case for beta != 0 (Ornstein-Uhlenbeck)\n    else:\n        # 1. Terminal payoff component\n        E_XT = x0 * np.exp(-beta * T) + (alpha / beta) * (1 - np.exp(-beta * T))\n        term1 = q * np.exp(-r * T) * E_XT\n        \n        # 2. Constant running cost component\n        int1_r = integral_1(r, T)\n        term2 = c0 * int1_r\n        \n        # 3. State-dependent running cost component\n        int1_r_beta = integral_1(r + beta, T)\n        term3_x0_part = c1 * x0 * int1_r_beta\n        term3_alpha_part = c1 * (alpha / beta) * (int1_r - int1_r_beta)\n        term3 = term3_x0_part + term3_alpha_part\n        \n        return term1 + term2 + term3\n\nif __name__ == \"__main__\":\n    solve()\n```"}, {"introduction": "理论模型需要面对现实世界的检验，例如交易成本等市场摩擦。本练习将引导我们探讨一个更高级的概念：在存在连续交易成本的市场中，如何从第一性原理——即复制论证——出发，推导出修正后的定价偏微分方程。然后，我们将看到费曼-卡茨定理如何为这个更复杂的新方程的解提供直接的金融学解释，彰显其理论威力。[@problem_id:2440786]", "id": "2440786", "problem": "考虑一个有摩擦的市场，其中只有一种风险资产，其价格过程 $\\{S_t\\}_{t \\in [0,T]}$ 在风险中性概率测度 $Q$ 下满足随机微分方程 (SDE)\n$$\ndS_t = r\\,S_t\\,dt + \\sigma\\,S_t\\,dW_t^{Q},\n$$\n其中 $r > 0$ 是恒定的短期利率，$\\sigma > 0$ 是恒定的波动率，$\\{W_t^{Q}\\}_{t \\in [0,T]}$ 是 $Q$ 下的标准布朗运动。货币市场账户 $\\{B_t\\}_{t \\in [0,T]}$ 满足 $dB_t = r\\,B_t\\,dt$ 且 $B_0 = 1$。\n\n一个自融资交易策略在时间 $t$ 持有 $\\theta_t$ 份额的风险资产，其余资金存入货币市场账户。相关的财富过程 $\\{W_t\\}_{t \\in [0,T]}$ 受到按比例的交易成本的影响，此成本被理想化为对财富漂移项的一个恒定率为 $c \\ge 0$ 的连续拖累，因此\n$$\ndW_t = \\theta_t\\,dS_t + r\\,(W_t - \\theta_t S_t)\\,dt - c\\,W_t\\,dt,\n$$\n其中 $\\theta_t$ 是适应过程，并使得在这种连续成本理想化下动态复制是可行的。令 $V(t,s)$ 表示一个到期日为 $T$、支付为 $g(S_T)$ 的欧式或有债权在时间 $t$ 的价格，它是状态 $s$ 的函数，其中 $g$ 是可测的且至多为多项式增长。终端条件为对所有 $s > 0$，$V(T,s) = g(s)$。假设 $0 \\le c < r$。\n\n在此模型中，选择所有正确的陈述。\n\nA. 价格函数 $V(t,s)$ 求解修正的 Black–Scholes 偏微分方程 (PDE)\n$$\nV_t(t,s) + r\\,s\\,V_s(t,s) + \\tfrac{1}{2}\\,\\sigma^2\\,s^2\\,V_{ss}(t,s) - (r - c)\\,V(t,s) = 0,\n$$\n对于 $t \\in [0,T)$ 和 $s > 0$，终端条件为 $V(T,s) = g(s)$。\n\nB. 根据 Feynman–Kac 定理 (FKT)，价格具有如下表示\n$$\nV(t,s) = \\mathbb{E}^{Q}\\!\\left[\\exp\\!\\Big(-\\!\\int_{t}^{T} (r - c)\\,du\\Big)\\,g(S_T)\\,\\middle|\\, S_t = s \\right],\n$$\n其中状态过程在 $Q$ 下满足 $dS_u = r\\,S_u\\,du + \\sigma\\,S_u\\,dW_u^{Q}$。\n\nC. 复制该债权的 delta 对冲策略仍然是 $\\theta_t = V_s(t,S_t)$，也就是说，连续比例成本的存在不改变匹配扩散风险所需的对冲比率。\n\nD. 在风险中性定价中，将交易成本建模为财富漂移项上的一个拖累 $c$ 等价于将风险资产在 $Q$ 下的漂移项从 $r$ 降低到 $(r - c)$，同时保持贴现率 $r$ 不变。\n\nE. 对于任何固定的 $t \\in [0,T)$ 和状态 $s > 0$，增加 $c$（保持其他所有因素不变）会严格降低价格 $V(t,s)$，相较于无摩擦情况 $c = 0$。\n\nF. 在此成本模型下，正确的定价 PDE 可以等价地写成\n$$\nV_t(t,s) + (r - c)\\,s\\,V_s(t,s) + \\tfrac{1}{2}\\,\\sigma^2\\,s^2\\,V_{ss}(t,s) - r\\,V(t,s) = 0,\n$$\n终端条件为 $V(T,s) = g(s)$。", "solution": "该问题陈述是数学金融领域一个有效的练习，它将 Black-Scholes 框架扩展到包含一个对财富的连续时间成本。\n\n### 步骤 1：提取给定条件\n- 风险中性测度 $Q$ 下风险资产的 SDE：$dS_t = r\\,S_t\\,dt + \\sigma\\,S_t\\,dW_t^{Q}$，其中 $r > 0$, $\\sigma > 0$。\n- 货币市场账户：$dB_t = r\\,B_t\\,dt$，其中 $B_0 = 1$。\n- 具有交易策略 $\\theta_t$ 的财富过程 $\\{W_t\\}$：$dW_t = \\theta_t\\,dS_t + r\\,(W_t - \\theta_t S_t)\\,dt - c\\,W_t\\,dt$，成本率为 $c \\ge 0$。\n- 成本率约束：$0 \\le c < r$。\n- 到期日为 $T$ 的欧式债权，支付为 $g(S_T)$。\n- 债权价格：$V(t,s)$，其中 $s=S_t$。\n- 终端条件：$V(T,s) = g(s)$。\n\n### 步骤 2：使用提取的给定条件进行验证\n该问题具有科学依据，是一个公认的（尽管是简化的）金融交易成本模型。它是适定的，定义了所有推导定价方程所需的组件。语言客观且数学化。该设定内部一致，在其自身的建模假设下不违反任何随机微积分或金融理论的基本原理。该问题是可形式化的，并且与计算金融中的 Feynman-Kac 定理主题直接相关。\n\n### 步骤 3：判定与行动\n问题有效。我将继续进行解答。\n\n### 定价 PDE 和对冲策略的推导\n\n或有债权定价的核心原则是复制。我们构建一个自融资投资组合来复制该债权的支付。债权的价格必须等于此复制投资组合所需的初始财富。问题陈述该类投资组合的价值为 $W_t$。\n\n首先，我们简化给定的财富过程 $W_t$ 的随机微分方程 (SDE)。\n$$\ndW_t = \\theta_t\\,dS_t + r\\,(W_t - \\theta_t S_t)\\,dt - c\\,W_t\\,dt\n$$\n代入风险资产的 SDE，$dS_t = r\\,S_t\\,dt + \\sigma\\,S_t\\,dW_t^{Q}$：\n$$\ndW_t = \\theta_t\\,(r\\,S_t\\,dt + \\sigma\\,S_t\\,dW_t^{Q}) + r\\,W_t\\,dt - r\\,\\theta_t S_t\\,dt - c\\,W_t\\,dt\n$$\n包含 $r\\,\\theta_t\\,S_t\\,dt$ 的项相互抵消：\n$$\ndW_t = r\\,\\theta_t\\,S_t\\,dt + \\theta_t\\,\\sigma\\,S_t\\,dW_t^{Q} + r\\,W_t\\,dt - r\\,\\theta_t S_t\\,dt - c\\,W_t\\,dt\n$$\n$$\ndW_t = (r - c)W_t\\,dt + \\theta_t\\,\\sigma\\,S_t\\,dW_t^{Q}\n$$\n这是复制投资组合财富的 SDE。时间 $t$ 的或有债权价格是 $V(t,S_t)$，它必须等于复制投资组合的财富 $W_t$。令 $W_t = V(t,S_t)$。\n因此，我们可以使用 Itô 引理找到 $d(V(t,S_t))$ 的微分，对于一个时间 $t$ 和随机过程 $S_t$ 的函数：\n$$\nd(V(t,S_t)) = \\left( \\frac{\\partial V}{\\partial t} + \\frac{\\partial V}{\\partial s}\\frac{dS_t}{dt} + \\frac{1}{2}\\frac{\\partial^2 V}{\\partial s^2}\\left(\\frac{dS_t}{dt}\\right)^2 \\right) dt|_{\\text{formal}} + \\frac{\\partial V}{\\partial s} dS_t|_{\\text{stochastic}}\n$$\n使用记号 $V_t = \\frac{\\partial V}{\\partial t}$，$V_s = \\frac{\\partial V}{\\partial s}$，$V_{ss} = \\frac{\\partial^2 V}{\\partial s^2}$ 以及 $s=S_t$：\n$S_t$ 的漂移项是 $r\\,s$，扩散系数是 $\\sigma\\,s$。因此，$(dS_t)^2 = (\\sigma S_t dW_t^Q)^2 = \\sigma^2 S_t^2 dt$。\n$$\nd(V(t,s)) = \\left( V_t(t,s) + r\\,s\\,V_s(t,s) + \\frac{1}{2}\\,\\sigma^2\\,s^2\\,V_{ss}(t,s) \\right) dt + \\sigma\\,s\\,V_s(t,s)\\,dW_t^Q\n$$\n为了实现复制，投资组合价值微分的两个表达式必须相等，即当 $W_t = V(t,S_t)$ 和 $s=S_t$ 時，$dW_t = d(V(t,S_t))$。\n$$\n(r - c)V(t,s)\\,dt + \\theta_t\\,\\sigma\\,s\\,dW_t^{Q} = \\left( V_t(t,s) + r\\,s\\,V_s(t,s) + \\frac{1}{2}\\,\\sigma^2\\,s^2\\,V_{ss}(t,s) \\right) dt + \\sigma\\,s\\,V_s(t,s)\\,dW_t^Q\n$$\n通过分别令扩散（随机）项和漂移（确定性）项相等，我们可以找到对冲策略 $\\theta_t$ 和定价 PDE。\n\n令扩散项（$dW_t^Q$ 的系数）相等：\n$$\n\\theta_t\\,\\sigma\\,s = \\sigma\\,s\\,V_s(t,s) \\implies \\theta_t = V_s(t,s)\n$$\n这决定了对冲策略。\n\n令漂移项（$dt$ 的系数）相等：\n$$\n(r - c)V(t,s) = V_t(t,s) + r\\,s\\,V_s(t,s) + \\frac{1}{2}\\,\\sigma^2\\,s^2\\,V_{ss}(t,s)\n$$\n整理后得到定价偏微分方程 (PDE)：\n$$\nV_t(t,s) + r\\,s\\,V_s(t,s) + \\frac{1}{2}\\,\\sigma^2\\,s^2\\,V_{ss}(t,s) - (r - c)V(t,s) = 0\n$$\n此 PDE 与终端条件 $V(T,s) = g(s)$ 一起决定了价格函数 $V(t,s)$。\n\n### 逐项分析\n\n**A. 价格函数 $V(t,s)$ 求解修正的 Black–Scholes 偏微分方程 (PDE)...**\n该陈述给出的 PDE 是：$V_t(t,s) + r\\,s\\,V_s(t,s) + \\tfrac{1}{2}\\,\\sigma^2\\,s^2\\,V_{ss}(t,s) - (r - c)\\,V(t,s) = 0$。这正是我上面推导出的 PDE。\n**結論：正确。**\n\n**B. 根据 Feynman–Kac 定理 (FKT)，价格具有如下表示...**\nFeynman-Kac 定理将形式为 $u_t + \\mathcal{L}u - k u = 0$、终端条件为 $u(T,x) = \\psi(x)$ 的抛物型 PDE 与条件期望 $u(t,x) = \\mathbb{E}[\\exp(-\\int_t^T k(X_u) du) \\psi(X_T) | X_t=x]$ 联系起来，其中 $\\mathcal{L}$ 是过程 $X_u$ 的生成元。\n在我们的例子中，PDE 是关于 $V(t,s)$ 的，其中：\n- 生成元 $\\mathcal{L} = r\\,s\\,\\frac{\\partial}{\\partial s} + \\frac{1}{2}\\,\\sigma^2\\,s^2\\,\\frac{\\partial^2}{\\partial s^2}$，对应于 SDE 为 $dS_u = r\\,S_u\\,du + \\sigma\\,S_u\\,dW_u^Q$ 的过程 $S_u$。\n- 折扣函数 $k(t,s) = r - c$，这是一个常数。\n- 终端条件 $\\psi(s) = g(s)$。\n应用 FKT，解为：\n$$\nV(t,s) = \\mathbb{E}^{Q}\\left[\\exp\\left(-\\int_{t}^{T} (r - c)\\,du\\right)\\,g(S_T)\\,\\middle|\\, S_t = s \\right]\n$$\n这與选项 B 中的陈述完全匹配。\n**結論：正确。**\n\n**C. 复制该债权的 delta 对冲策略仍然是 $\\theta_t = V_s(t,S_t)$...**\n如上通过令财富过程和债权价值过程的扩散项相等所推导出的，对冲所需的风险资产份额为 $\\theta_t = V_s(t,S_t)$。连续成本影响财富投资组合的漂移项，但为了消除布朗运动风险，需要标准的 delta 对冲策略。\n**結論：正确。**\n\n**D. 在风险中性定价中，将交易成本建模为财富漂移项上的一个拖累 $c$ 等价于将风险资产在 $Q$ 下的漂移项从 $r$ 降低到 $(r - c)$，同时保持贴现率 $r$ 不变。**\n该陈述提出了一个替代模型。此模型将意味着一个定价 PDE，其中 $V_s$ 项的系数是 $(r-c)s$（来自资产漂移），而 $V$ 項的系数是 $-r$（来自贴现）。这导致选项 F 中所示的 PDE，它与在 A 中推导出的正确 PDE 不同。此外，FKT 表示将是 $V(t,s) = \\mathbb{E}^Q[e^{ -r(T-t)}g(S'_T)|S'_t=s]$，其中 $S'$ 具有漂移 $r-c$。此期望在所平均的过程和折扣因子两方面都與 B 中的不同。该陈述是对模型效应的误解。\n**結論：错误。**\n\n**E. 对于任何固定的 $t \\in [0,T)$ 和状态 $s > 0$，增加 $c$（保持其他所有因素不变）会严格降低价格 $V(t,s)$，相较于无摩擦情况 $c = 0$。**\n让我们使用 B 中正确的定价公式。令 $V(t,s; c)$ 表示价格作为 $c$ 的函数。\n$$\nV(t,s; c) = \\mathbb{E}^{Q}\\!\\left[e^{-(r-c)(T-t)}\\,g(S_T)\\,\\middle|\\, S_t = s \\right] = e^{c(T-t)} \\mathbb{E}^{Q}\\!\\left[e^{-r(T-t)}\\,g(S_T)\\,\\middle|\\, S_t = s \\right]\n$$\n无摩擦价格 ($c=0$) 是 $V(t,s; 0) = \\mathbb{E}^{Q}[e^{-r(T-t)}\\,g(S_T)\\,|\\,S_t=s]$。\n所以，$V(t,s; c) = e^{c(T-t)} V(t,s; 0)$。\n对于一个典型的债权，支付 $g(S_T)$ 是非负的，这保证了 $V(t,s; 0) \\ge 0$。假设该债权非平凡（$g$ 不恒为零），则对於 $t<T$ 有 $V(t,s; 0) > 0$。因为 $c \\ge 0$ 且 $T > t$，因子 $e^{c(T-t)} \\ge 1$。对 $c$ 求导：\n$$\n\\frac{\\partial V(t,s; c)}{\\partial c} = (T-t) e^{c(T-t)} V(t,s; 0)\n$$\n对于 $t < T$，此导数严格为正（假设 $V(t,s;0)>0$）。这意味着增加成本率 $c$ 会严格*增加*债权的价格。这很直观：期权的賣方承担此成本，必须收取更高的权利金来覆盖它。\n**結論：错误。**\n\n**F. 在此成本模型下，正确的定价 PDE 可以等价地写成...**\n提出的 PDE 是 $V_t(t,s) + (r - c)\\,s\\,V_s(t,s) + \\tfrac{1}{2}\\,\\sigma^2\\,s^2\\,V_{ss}(t,s) - r\\,V(t,s) = 0$。如選項 A 的分析所示，正确的 PDE 是 $V_t(t,s) + r\\,s\\,V_s(t,s) + \\tfrac{1}{2}\\,\\sigma^2\\,s^2\\,V_{ss}(t,s) - (r - c)\\,V(t,s) = 0$。$V_s$ 项和 $V$ 项的系数不同。這两个 PDE 不等价（除非 $c=0$）。此选项中的 PDE 对应于选项 D 中描述的错误模型。\n**結論：错误。**", "answer": "$$\\boxed{ABC}$$"}]}