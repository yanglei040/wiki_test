{"hands_on_practices": [{"introduction": "在求解金融偏微分方程时，一个常见的首要步骤是将其变换为一个更简单的形式。这个练习将指导你将 Black-Scholes 方程转换为一个具有恒定系数的对流-扩散方程，这是应用数值方法的标准形式。通过这个过程，你将练习应用 Crank-Nicolson 格式，并推导最终线性系统中的关键系数，从而深入理解离散化的核心机制。[@problem_id:2393113]", "id": "2393113", "problem": "考虑一个带有连续股息率的欧式衍生品的风险中性Black–Scholes偏微分方程（PDE），由 $V_{t} + \\tfrac{1}{2}\\sigma^{2} S^{2} V_{SS} + (r - q) S V_{S} - r V = 0$ 给出，其中 $S \\in (0,\\infty)$ 且 $t \\in [0,T)$。设 $x = \\ln(S)$ 并定义 $u(x,t) = V(S,t)$，其中 $S = \\exp(x)$。从该偏微分方程出发，并仅使用链式法则和标准中心有限差分，执行以下步骤。\n\n1. 在变量变换 $x = \\ln(S)$ 下，推导 $u(x,t)$ 所满足的变换后的偏微分方程。然后引入到期时间变量 $\\tau = T - t$，使方程在 $\\tau$ 上变为前向方程，并将其改写为常系数形式 $u_{\\tau} = a\\,u_{xx} + b\\,u_{x} - r\\,u$，确定常数 $a$ 和 $b$（用 $\\sigma$、$r$ 和 $q$ 表示）。\n\n2. 考虑 $x$ 上的均匀空间网格 $x_{i} = x_{\\min} + i\\,\\Delta x$（$i$ 为整数）和 $\\tau$ 上的均匀时间网格 $\\tau^{n} = n\\,\\Delta t$（$n$ 为整数）。对 $u_{x}$ 和 $u_{xx}$ 使用中心差分，并对 $\\tau$ 上的偏微分方程使用 Crank–Nicolson (CN) 时间离散化方法，写出在内部节点 $i$ 和时间层 $n+1$ 处的完全离散格式，其标准三对角形式为 $A\\,u_{i-1}^{n+1} + B\\,u_{i}^{n+1} + C\\,u_{i+1}^{n+1} = \\text{RHS}$，其中 $A$、$B$ 和 $C$ 分别是乘以节点 $i-1$、$i$ 和 $i+1$ 处 $u^{n+1}$ 的左侧系数。\n\n您的任务是给出内部对角系数 $B$ 的闭式解析表达式，该表达式是 $\\sigma$、$r$、$\\Delta x$ 和 $\\Delta t$ 的函数。将您的最终答案表示为单个解析表达式。无需进行数值计算，也无需四舍五入。", "solution": "在尝试任何解答之前，需对问题陈述进行验证。\n\n**问题验证**\n\n**步骤1：提取已知条件**\n-   控制性偏微分方程（PDE）是风险中性的Black–Scholes方程：$V_{t} + \\tfrac{1}{2}\\sigma^{2} S^{2} V_{SS} + (r - q) S V_{S} - r V = 0$。\n-   定义域为 $S \\in (0,\\infty)$ 和 $t \\in [0,T)$。\n-   定义了变量变换：$x = \\ln(S)$ 和 $u(x,t) = V(S,t)$，意味着 $S = \\exp(x)$。\n-   引入了第二个时间变量：$\\tau = T - t$。\n-   变换后PDE的目标形式被指定为 $u_{\\tau} = a\\,u_{xx} + b\\,u_{x} - r\\,u$。\n-   定义了均匀网格：$x_{i} = x_{\\min} + i\\,\\Delta x$ 和 $\\tau^{n} = n\\,\\Delta t$。\n-   离散化方法被指定为Crank–Nicolson格式，对空间导数使用中心差分。\n-   得到的离散方程必须为 $A\\,u_{i-1}^{n+1} + B\\,u_{i}^{n+1} + C\\,u_{i+1}^{n+1} = \\text{RHS}$ 的形式。\n-   目标是找到系数 $B$ 的解析表达式。\n\n**步骤2：使用提取的已知条件进行验证**\n-   **科学性**：该问题基于Black-Scholes方程，这是金融数学中的一个基本模型。该偏微分方程的变换及其使用有限差分法的数值解是计算金融学中的标准、成熟的技术。该问题在科学和数学上是合理的。\n-   **适定性**：问题陈述清晰，提供了从初始偏微分方程到最终离散系数所需的所有信息。任务按顺序且合乎逻辑地指定，从而得出一个唯一且有意义的答案。\n-   **客观性**：问题使用精确的数学语言表述，没有任何主观或模糊的术语。\n\n**步骤3：结论与行动**\n该问题是有效的。它是偏微分方程数值分析在金融领域应用中的一个标准练习。我们现在开始进行求解。\n\n**解题推导**\n\n解答需要两个主要步骤：首先，变换偏微分方程；其次，对其进行离散化以找到指定的系数。\n\n**第1部分：偏微分方程的变换**\n\n我们从或有债权价值 $V(S,t)$ 的Black-Scholes方程开始：\n$$V_{t} + \\frac{1}{2}\\sigma^{2} S^{2} V_{SS} + (r - q) S V_{S} - r V = 0$$\n我们引入变量变换 $x = \\ln(S)$ 并定义 $u(x,t) = V(S,t)$。我们使用链式法则，将 $V$ 关于 $S$ 和 $t$ 的导数用 $u$ 关于 $x$ 和 $t$ 的导数来表示。\n\n首先，我们求关于 $S$ 的偏导数：\n$$V_{S} = \\frac{\\partial V}{\\partial S} = \\frac{\\partial u}{\\partial x} \\frac{\\partial x}{\\partial S} = u_{x} \\frac{1}{S}$$\n$$V_{SS} = \\frac{\\partial}{\\partial S} \\left( u_{x} \\frac{1}{S} \\right) = \\left( \\frac{\\partial u_{x}}{\\partial S} \\right) \\frac{1}{S} - u_{x} \\frac{1}{S^{2}} = \\left( \\frac{\\partial u_{x}}{\\partial x} \\frac{\\partial x}{\\partial S} \\right) \\frac{1}{S} - \\frac{u_{x}}{S^{2}} = \\left( u_{xx} \\frac{1}{S} \\right) \\frac{1}{S} - \\frac{u_{x}}{S^{2}} = \\frac{1}{S^{2}} (u_{xx} - u_{x})$$\n关于 $t$ 的导数很简单，因为 $x$ 不依赖于 $t$：\n$$V_{t} = \\frac{\\partial V}{\\partial t} = \\frac{\\partial u}{\\partial t} = u_{t}$$\n将这些代入Black-Scholes偏微分方程，得到：\n$$u_{t} + \\frac{1}{2}\\sigma^{2} S^{2} \\left[ \\frac{1}{S^{2}} (u_{xx} - u_{x}) \\right] + (r - q) S \\left[ u_{x} \\frac{1}{S} \\right] - r u = 0$$\n通过消去项来简化此表达式：\n$$u_{t} + \\frac{1}{2}\\sigma^{2} (u_{xx} - u_{x}) + (r - q) u_{x} - r u = 0$$\n按 $u$ 关于 $x$ 的导数阶数对各项进行分组：\n$$u_{t} + \\frac{1}{2}\\sigma^{2} u_{xx} + \\left( r - q - \\frac{1}{2}\\sigma^{2} \\right) u_{x} - r u = 0$$\n接下来，我们引入到期时间变量 $\\tau = T - t$。这意味着 $t = T - \\tau$，因此 $\\frac{\\partial}{\\partial t} = \\frac{\\partial \\tau}{\\partial t} \\frac{\\partial}{\\partial \\tau} = -1 \\cdot \\frac{\\partial}{\\partial \\tau}$。所以，$u_{t} = -u_{\\tau}$。\n将此代入变换后的偏微分方程：\n$$-u_{\\tau} + \\frac{1}{2}\\sigma^{2} u_{xx} + \\left( r - q - \\frac{1}{2}\\sigma^{2} \\right) u_{x} - r u = 0$$\n重新整理以求解 $u_{\\tau}$，我们得到关于 $\\tau$ 的前向方程：\n$$u_{\\tau} = \\frac{1}{2}\\sigma^{2} u_{xx} + \\left( r - q - \\frac{1}{2}\\sigma^{2} \\right) u_{x} - r u$$\n将此与指定形式 $u_{\\tau} = a\\,u_{xx} + b\\,u_{x} - r\\,u$ 进行比较，我们确定常系数为：\n$$a = \\frac{1}{2}\\sigma^{2}$$\n$$b = r - q - \\frac{1}{2}\\sigma^{2}$$\n\n**第2部分：Crank-Nicolson离散化**\n\n我们现在对偏微分方程 $u_{\\tau} = a\\,u_{xx} + b\\,u_{x} - r\\,u$ 进行离散化。设 $u_{i}^{n}$ 表示 $u(x_{i}, \\tau^{n})$ 的数值近似。Crank-Nicolson方法是一种隐式格式，它对时间层 $n$ 和 $n+1$ 上的空间算子进行平均：\n$$\\frac{u_{i}^{n+1} - u_{i}^{n}}{\\Delta t} = \\frac{1}{2} \\left[ \\left( a\\,u_{xx} + b\\,u_{x} - r\\,u \\right)_{i}^{n+1} + \\left( a\\,u_{xx} + b\\,u_{x} - r\\,u \\right)_{i}^{n} \\right]$$\n我们对空间导数 $u_{x}$ 和 $u_{xx}$ 使用标准的二阶中心差分近似：\n$$u_{x} \\approx \\frac{u_{i+1} - u_{i-1}}{2\\,\\Delta x}$$\n$$u_{xx} \\approx \\frac{u_{i+1} - 2u_{i} + u_{i-1}}{(\\Delta x)^{2}}$$\n将这些代入Crank-Nicolson公式，并重新排列，将时间层 $n+1$的项分在左侧（LHS），时间层 $n$ 的项分在右侧（RHS）：\n$$u_{i}^{n+1} - \\frac{\\Delta t}{2} \\left[ a \\frac{u_{i+1}^{n+1} - 2u_{i}^{n+1} + u_{i-1}^{n+1}}{(\\Delta x)^{2}} + b \\frac{u_{i+1}^{n+1} - u_{i-1}^{n+1}}{2\\,\\Delta x} - r u_{i}^{n+1} \\right] = \\text{RHS}$$\n我们只关心左侧（LHS）的系数。我们将LHS整理成 $A\\,u_{i-1}^{n+1} + B\\,u_{i}^{n+1} + C\\,u_{i+1}^{n+1}$ 的形式。我们收集每个节点值 $u_{j}^{n+1}$ 的系数：\n\n-   对于 $u_{i-1}^{n+1}$：系数为 $A = -\\frac{\\Delta t}{2} \\left( \\frac{a}{(\\Delta x)^{2}} - \\frac{b}{2\\,\\Delta x} \\right)$。\n-   对于 $u_{i+1}^{n+1}$：系数为 $C = -\\frac{\\Delta t}{2} \\left( \\frac{a}{(\\Delta x)^{2}} + \\frac{b}{2\\,\\Delta x} \\right)$。\n-   对于 $u_{i}^{n+1}$：系数从乘以 $u_{i}^{n+1}$ 的项中获得。\n    $$B = 1 - \\frac{\\Delta t}{2} \\left( a \\frac{-2}{(\\Delta x)^{2}} - r \\right) = 1 + \\frac{\\Delta t}{2} \\left( \\frac{2a}{(\\Delta x)^{2}} + r \\right)$$\n\n问题要求给出内部对角系数 $B$ 的闭式表达式。简化 $B$ 的表达式：\n$$B = 1 + \\frac{a\\,\\Delta t}{(\\Delta x)^{2}} + \\frac{r\\,\\Delta t}{2}$$\n最后，我们代入在第1部分中推导出的 $a = \\frac{1}{2}\\sigma^{2}$ 的表达式：\n$$B = 1 + \\frac{(\\frac{1}{2}\\sigma^{2})\\,\\Delta t}{(\\Delta x)^{2}} + \\frac{r\\,\\Delta t}{2}$$\n这可以简化为：\n$$B = 1 + \\frac{\\sigma^{2}\\,\\Delta t}{2(\\Delta x)^{2}} + \\frac{r\\,\\Delta t}{2}$$\n通过提取公因式 $\\frac{\\Delta t}{2}$，可以将其写得更紧凑：\n$$B = 1 + \\frac{\\Delta t}{2} \\left( \\frac{\\sigma^{2}}{(\\Delta x)^{2}} + r \\right)$$\n这就是系数 $B$ 作为给定参数 $\\sigma$、$r$、$\\Delta x$ 和 $\\Delta t$ 的函数的最终表达式。注意，系数 $B$ 与股息率 $q$ 无关，$q$ 仅影响平流项，因此只影响非对角系数 $A$ 和 $C$。", "answer": "$$\\boxed{1 + \\frac{\\Delta t}{2} \\left( \\frac{\\sigma^{2}}{(\\Delta x)^{2}} + r \\right)}$$"}, {"introduction": "掌握了一维问题的基础后，我们来探讨模型复杂性如何影响计算任务。本练习研究一个双资产期权模型，其中资产间的相关性引入了一个混合偏导数项。你将通过本练习发现，这个新项如何改变有限差分格式的计算模板，并最终影响我们需要求解的矩阵的结构和带宽，这对于理解高维问题的计算成本至关重要。[@problem_id:2393109]", "id": "2393109", "problem": "考虑一个欧式或有债权的价值函数 $V(S_{1}, S_{2}, t)$ 的风险中性双资产 Black–Scholes 偏微分方程：\n$$\n\\frac{\\partial V}{\\partial t}\n+ \\frac{1}{2}\\sigma_{1}^{2} S_{1}^{2} \\frac{\\partial^{2} V}{\\partial S_{1}^{2}}\n+ \\rho \\sigma_{1} \\sigma_{2} S_{1} S_{2} \\frac{\\partial^{2} V}{\\partial S_{1} \\partial S_{2}}\n+ \\frac{1}{2}\\sigma_{2}^{2} S_{2}^{2} \\frac{\\partial^{2} V}{\\partial S_{2}^{2}}\n+ r S_{1} \\frac{\\partial V}{\\partial S_{1}}\n+ r S_{2} \\frac{\\partial V}{\\partial S_{2}}\n- r V = 0,\n$$\n该方程定义在矩形区域 $(S_{1}, S_{2}) \\in (0, S_{1,\\max}) \\times (0, S_{2,\\max})$ 上，时间范围为 $t \\in [0, T]$，在空间边界上指定了狄利克雷（Dirichlet）边界条件，并在 $t = T$ 时刻有给定的期末收益。此处 $\\sigma_{1} > 0$，$\\sigma_{2} > 0$，$\\rho \\in (-1, 1)$ 和 $r \\ge 0$ 均为常数。\n\n使用均匀网格对空间域进行离散化，该网格在 $S_{1}$ 轴方向上有 $M_{1}$ 个内部点，在 $S_{2}$ 轴方向上有 $M_{2}$ 个内部点，间距分别为 $h_{1} = S_{1,\\max}/(M_{1}+1)$ 和 $h_{2} = S_{2,\\max}/(M_{2}+1)$。时间步进采用时间步长为 $\\Delta t > 0$ 的全隐式（后向欧拉）方法，所有一阶和二阶空间导数（包括混合导数 $\\frac{\\partial^{2} V}{\\partial S_{1} \\partial S_{2}}$）均采用标准二阶中心有限差分。在每个时间层上，为内部网格的未知数组装线性系统，并按字典序对未知数进行排序，其中 $S_{1}$ 索引变化最快：将网格点 $(i, j)$（其中 $i \\in \\{1, 2, \\dots, M_{1}\\}$ 且 $j \\in \\{1, 2, \\dots, M_{2}\\}$）映射到向量索引 $k = i + (j - 1) M_{1}$。\n\n设 $\\mathbf{A}$ 表示在给定时间步上所得线性系统的系数矩阵。将 $\\mathbf{A}$ 的半带宽 $b$ 定义为可能出现非零元素的位置与主对角线之间的最大绝对列索引偏移量。当 $\\rho \\ne 0$ 时，$b$ 作为 $M_{1}$ 和 $M_{2}$ 的函数是什么？请仅用 $M_{1}$ 和 $M_{2}$ 提供一个单一的闭式表达式。无需进行取整。", "solution": "问题陈述需要经过验证。\n\n步骤1：提取已知条件。\n- 偏微分方程（PDE）：$\\frac{\\partial V}{\\partial t} + \\frac{1}{2}\\sigma_{1}^{2} S_{1}^{2} \\frac{\\partial^{2} V}{\\partial S_{1}^{2}} + \\rho \\sigma_{1} \\sigma_{2} S_{1} S_{2} \\frac{\\partial^{2} V}{\\partial S_{1} \\partial S_{2}} + \\frac{1}{2}\\sigma_{2}^{2} S_{2}^{2} \\frac{\\partial^{2} V}{\\partial S_{2}^{2}} + r S_{1} \\frac{\\partial V}{\\partial S_{1}} + r S_{2} \\frac{\\partial V}{\\partial S_{2}} - r V = 0$。\n- 定义域：$(S_{1}, S_{2}) \\in (0, S_{1,\\max}) \\times (0, S_{2,\\max})$，时间范围为 $t \\in [0, T]$。\n- 条件：空间边界上为狄利克雷边界条件；$t=T$ 时刻有给定的期末收益。\n- 常数：$\\sigma_{1} > 0$, $\\sigma_{2} > 0$, $\\rho \\in (-1, 1)$ 且 $\\rho \\ne 0$, 以及 $r \\ge 0$。\n- 离散化网格：均匀网格，在 $S_{1}$ 轴方向有 $M_{1}$ 个内部点，在 $S_{2}$ 轴方向有 $M_{2}$ 个内部点。\n- 网格间距：$h_{1} = S_{1,\\max}/(M_{1}+1)$ 和 $h_{2} = S_{2,\\max}/(M_{2}+1)$。\n- 时间步进：全隐式（后向欧拉），时间步长 $\\Delta t > 0$。\n- 空间导数：所有空间导数，包括混合导数 $\\frac{\\partial^{2} V}{\\partial S_{1} \\partial S_{2}}$，均采用标准二阶中心有限差分。\n- 未知数排序：字典序，其中 $S_{1}$ 索引变化最快。网格点 $(i, j)$（其中 $i \\in \\{1, 2, \\dots, M_{1}\\}$，$j \\in \\{1, 2, \\dots, M_{2}\\}$）映射到向量索引 $k = i + (j - 1) M_{1}$。\n- 定义：系数矩阵 $\\mathbf{A}$ 的半带宽 $b$ 是可能出现非零元素的位置与主对角线之间的最大绝对列索引偏移量。\n- 问题：当 $\\rho \\ne 0$ 时，确定 $b$ 作为 $M_1$ 和 $M_2$ 的函数。\n\n步骤2：使用提取的已知条件进行验证。\n该问题具有科学依据，植根于标准的 Black-Scholes 模型及其通过有限差分法进行的数值求解，这是计算金融学的一个基本课题。这是一个适定问题；离散化格式、网格结构和未知数的排序都已明确指定，这唯一地确定了所得矩阵的结构。该问题是客观的，使用了精确的数学语言。它是完整的，提供了确定计算模板及其到带宽的映射所需的所有必要细节。对于求解此类偏微分方程，该设置是现实且常规的。问题清晰，其术语（如半带宽）也已定义。\n\n步骤3：结论与行动。\n问题有效。将构建一个严谨的解。\n\n线性系统的系数矩阵 $\\mathbf{A}$ 是通过离散化空间算子得到的。$\\mathbf{A}$ 的结构，特别是其带宽，由有限差分格式的计算模板和网格未知数的排序方式决定。如果对应于索引 $k$ 的网格点上的未知数的方程依赖于对应于索引 $l$ 的网格点上的未知数，则存在一个非零元素 $\\mathbf{A}_{k,l}$。半带宽 $b$ 是所有非零非对角元素 $\\mathbf{A}_{k,l}$ 的 $|k-l|$ 的最大值。\n\n设 $V_{i,j}$ 为网格点 $(S_{1,i}, S_{2,j}) = (i h_1, j h_2)$ 处 $V$ 的近似值。问题指定了标准二阶中心有限差分。在网格点 $(i, j)$ 处导数的近似值为：\n$\\frac{\\partial V}{\\partial S_{1}} \\approx \\frac{V_{i+1,j} - V_{i-1,j}}{2 h_1}$\n$\\frac{\\partial V}{\\partial S_{2}} \\approx \\frac{V_{i,j+1} - V_{i,j-1}}{2 h_2}$\n$\\frac{\\partial^{2} V}{\\partial S_{1}^{2}} \\approx \\frac{V_{i+1,j} - 2V_{i,j} + V_{i-1,j}}{h_1^2}$\n$\\frac{\\partial^{2} V}{\\partial S_{2}^{2}} \\approx \\frac{V_{i,j+1} - 2V_{i,j} + V_{i,j-1}}{h_2^2}$\n\n对于混合偏导数，标准的中心差分是通过依次应用中心差分算子得出的：\n$\\frac{\\partial^{2} V}{\\partial S_{1} \\partial S_{2}} = \\frac{\\partial}{\\partial S_{1}}\\left(\\frac{\\partial V}{\\partial S_{2}}\\right) \\approx \\frac{1}{2 h_1} \\left( \\left.\\frac{\\partial V}{\\partial S_{2}}\\right|_{i+1,j} - \\left.\\frac{\\partial V}{\\partial S_{2}}\\right|_{i-1,j} \\right)$\n代入 $\\frac{\\partial V}{\\partial S_{2}}$ 的中心差分：\n$\\frac{\\partial^{2} V}{\\partial S_{1} \\partial S_{2}} \\approx \\frac{1}{2 h_1} \\left( \\frac{V_{i+1,j+1} - V_{i+1,j-1}}{2 h_2} - \\frac{V_{i-1,j+1} - V_{i-1,j-1}}{2 h_2} \\right)$\n$\\frac{\\partial^{2} V}{\\partial S_{1} \\partial S_{2}} \\approx \\frac{V_{i+1,j+1} - V_{i+1,j-1} - V_{i-1,j+1} + V_{i-1,j-1}}{4 h_1 h_2}$\n\n由于 $\\rho \\ne 0$，混合导数项存在。通过检查所有的导数近似，我们可以看到 $V_{i,j}$ 的离散方程涉及其自身的值以及八个相邻网格点的值：$(i-1, j-1)$, $(i, j-1)$, $(i+1, j-1)$, $(i-1, j)$, $(i+1, j)$, $(i-1, j+1)$, $(i, j+1)$, and $(i+1, j+1)$。这就形成了一个 9 点模板。\n\n从网格点 $(i, j)$ 到线性向量索引 $k$ 的映射为 $k(i,j) = i + (j-1)M_{1}$。我们必须找到最大索引差 $|k(i_c, j_c) - k(i_n, j_n)|$，其中 $(i_c, j_c)$ 是模板的中心点，而 $(i_n, j_n)$ 是其八个邻居之一。设中心点为 $(i,j)$，其索引为 $k = i + (j-1)M_{1}$。一个邻居可以表示为 $(i+\\Delta i, j+\\Delta j)$，其中 $\\Delta i, \\Delta j \\in \\{-1, 0, 1\\}$，但不能同时为零。\n\n邻居点的索引是 $k_{neighbor} = (i+\\Delta i) + (j+\\Delta j - 1)M_1$。\n索引的差为：\n$\\Delta k = k_{neighbor} - k = [(i+\\Delta i) + (j+\\Delta j - 1)M_1] - [i + (j-1)M_1]$\n$\\Delta k = \\Delta i + (j + \\Delta j - 1 - (j-1))M_1$\n$\\Delta k = \\Delta i + \\Delta j M_1$\n\n我们寻求与 9 点模板对应的所有可能的 $(\\Delta i, \\Delta j)$ 对（不包括 $(\\Delta i, \\Delta j)=(0,0)$）所产生的 $\\Delta k$ 的最大绝对值。$\\Delta k$ 的可能值为：\n- 对于 $(\\Delta i, \\Delta j) = (1, 0): \\Delta k = 1$\n- 对于 $(\\Delta i, \\Delta j) = (-1, 0): \\Delta k = -1$\n- 对于 $(\\Delta i, \\Delta j) = (0, 1): \\Delta k = M_1$\n- 对于 $(\\Delta i, \\Delta j) = (0, -1): \\Delta k = -M_1$\n- 对于 $(\\Delta i, \\Delta j) = (1, 1): \\Delta k = 1 + M_1$\n- 对于 $(\\Delta i, \\Delta j) = (-1, 1): \\Delta k = -1 + M_1$\n- 对于 $(\\Delta i, \\Delta j) = (1, -1): \\Delta k = 1 - M_1$\n- 对于 $(\\Delta i, \\Delta j) = (-1, -1): \\Delta k = -1 - M_1$\n\n半带宽 $b$ 是这些偏移量绝对值的最大值：\n$b = \\max \\{|1|, |-1|, |M_1|, |-M_1|, |1+M_1|, |-1+M_1|, |1-M_1|, |-1-M_1|\\}$\n由于 $M_1$ 是内部点的数量，$M_1 \\ge 1$。因此， $|M_1|=M_1$, $|-1+M_1| = M_1-1$, $|1-M_1|=M_1-1$, and $|-1-M_1|=M_1+1$。\n绝对值的集合是 $\\{1, M_1, M_1+1, M_1-1\\}$。\n这个集合的最大值显然是 $M_1+1$。\n\n因此，半带宽 $b$ 为 $M_1 + 1$。这个值仅取决于 $M_1$，即未知数网格中的列数，它决定了移动到下一个网格行时线性索引的“跳跃”大小。该值与 $M_2$ 无关。", "answer": "$$\n\\boxed{M_{1} + 1}\n$$"}, {"introduction": "最后的这个练习将所有知识点融会贯通，带领你从理论走向完整的数值实现。你将从头开始为欧式看涨期权构建一个有限差分求解器。最终目标不仅是计算期权价格，更是利用数值解来计算最重要的风险指标之一——Gamma ($\\Gamma$)，并分析你计算结果的准确性。[@problem_id:2393056]", "id": "2393056", "problem": "考虑一个关于欧式看涨期权价值 $V(S,t)$ 的布莱克-斯科尔斯偏微分方程。该期权的标的资产不支付股息，其现价为 $S$，行权价为 $K$，无风险利率为 $r$，波动率为 $\\sigma$，到期日为 $T$：\n$$\n\\frac{\\partial V}{\\partial t}(S,t) + \\frac{1}{2}\\sigma^2 S^2 \\frac{\\partial^2 V}{\\partial S^2}(S,t) + r S \\frac{\\partial V}{\\partial S}(S,t) - r V(S,t) = 0,\n$$\n该方程定义在 $(S,t) \\in [0,S_{\\max}] \\times [0,T]$ 上，其终端条件为\n$$\nV(S,T) = \\max(S - K, 0),\n$$\n以及边界条件\n$$\nV(0,t) = 0 \\quad \\text{和} \\quad V(S_{\\max},t) = S_{\\max} - K e^{-r (T - t)}, \\quad \\text{对于 } t \\in [0,T].\n$$\n\n您的任务是计算一个数值价格网格 $V(S_i, t_n)$。该网格在空间上是均匀的，步长为 $\\Delta S$；在时间上也是均匀的，步长为 $\\Delta t$。然后，在时间 $t=0$ 时，通过对空间网格上的价格网格使用二阶中心差分来计算期权在 $S=K$ 处的 Gamma 值：\n$$\n\\Gamma_{\\text{num}}(K,0) \\approx \\frac{V(K+\\Delta S,0) - 2 V(K,0) + V(K-\\Delta S,0)}{(\\Delta S)^2}.\n$$\n将此数值 Gamma 与欧式看涨期权的布莱克-斯科尔斯 Gamma 解析解进行比较：\n$$\n\\Gamma_{\\text{BS}}(S,t) = \\frac{\\phi(d_1)}{S \\sigma \\sqrt{T-t}}, \\quad \\text{其中} \\quad d_1 = \\frac{\\ln\\!\\left(\\frac{S}{K}\\right) + \\left(r + \\tfrac{1}{2}\\sigma^2\\right)(T-t)}{\\sigma \\sqrt{T-t}},\n$$\n其中 $\\phi(x) = \\frac{1}{\\sqrt{2\\pi}} e^{-x^2/2}$ 是标准正态概率密度函数。计算绝对误差\n$$\nE = \\left|\\Gamma_{\\text{num}}(K,0) - \\Gamma_{\\text{BS}}(K,0)\\right|.\n$$\n\n使用以下参数值：$r = 0.05$，$\\sigma = 0.2$，$K = 100$，$T = 1$，$S_{\\max} = 400$。假设在 $S$ 方向上使用包含 $N_S$ 个区间的均匀网格，因此 $\\Delta S = S_{\\max}/N_S$；在 $t$ 方向上使用包含 $N_t$ 个时间步的均匀网格，因此 $\\Delta t = T/N_t$。空间网格必须精确包含 $S=K$ 这一位置（即 $K/\\Delta S$ 为整数）。\n\n请您实现程序，为以下六个测试用例 $(N_S, N_t)$ 计算 $E$：\n\n- 在小 $\\Delta t$ 下进行空间网格细化：\n  1. $(N_S, N_t) = (100, 1600)$，\n  2. $(N_S, N_t) = (200, 1600)$，\n  3. $(N_S, N_t) = (400, 1600)$。\n\n- 在精细空间网格下进行时间网格细化：\n  4. $(N_S, N_t) = (400, 50)$，\n  5. $(N_S, N_t) = (400, 100)$，\n  6. $(N_S, N_t) = (400, 200)$。\n\n您的程序必须按照上面列出的顺序，返回与六个测试用例相对应的六个绝对误差 $E$。\n\n最终输出格式：您的程序应生成单行输出，其中包含用方括号括起来的、以逗号分隔的结果列表（例如，“[result1,result2,result3,result4,result5,result6]”）。", "solution": "用户提供了一个来自计算金融领域的有效且适定的问题陈述。该问题具有科学依据，并包含了进行求解所需的所有必要信息。\n\n该问题要求对欧式看涨期权的布莱克-斯科尔斯偏微分方程（PDE）进行数值求解。该偏微分方程由下式给出：\n$$\n\\frac{\\partial V}{\\partial t}(S,t) + \\frac{1}{2}\\sigma^2 S^2 \\frac{\\partial^2 V}{\\partial S^2}(S,t) + r S \\frac{\\partial V}{\\partial S}(S,t) - r V(S,t) = 0\n$$\n其中 $V(S,t)$ 是期权价格，$S$ 是标的资产价格，$t$ 是时间，$r$ 是无风险利率，$\\sigma$ 是波动率。该方程定义在 $(S,t) \\in [0, S_{\\max}] \\times [0, T]$ 域上，具有一个在时间 $T$ 的终端条件 $V(S,T) = \\max(S-K, 0)$，以及边界条件 $V(0,t)=0$ 和 $V(S_{\\max},t) = S_{\\max} - Ke^{-r(T-t)}$。\n\n这是一个终端值问题，通常通过从 $t=T$ 到 $t=0$ 在时间上向后步进的方式求解。为了便于使用标准的时间上向前步进的数值方法，我们引入时间变量替换：$\\tau = T - t$。通过此变换，$\\frac{\\partial}{\\partial t} = -\\frac{\\partial}{\\partial \\tau}$，偏微分方程转化为一个初值问题：\n$$\n\\frac{\\partial V}{\\partial \\tau} = \\frac{1}{2}\\sigma^2 S^2 \\frac{\\partial^2 V}{\\partial S^2} + r S \\frac{\\partial V}{\\partial S} - r V, \\quad \\text{对于 } \\tau \\in [0,T]\n$$\n其在 $\\tau=0$ 时的初始条件为 $V(S,0) = \\max(S-K, 0)$。边界条件变为 $V(0,\\tau) = 0$ 和 $V(S_{\\max},\\tau) = S_{\\max} - Ke^{-r\\tau}$。\n\n我们在一个均匀网格上对该偏微分方程进行离散化，该网格包含 $N_S+1$ 个空间点 $S_i = i\\Delta S$（其中 $i=0, \\dots, N_S$）和 $N_t+1$ 个时间点 $\\tau_n = n\\Delta t$（其中 $n=0, \\dots, N_t$）。令 $V_i^n$ 表示 $V(S_i, \\tau_n)$ 的数值近似值。我们采用 Crank-Nicolson 方法，该方法在时间和空间上都是无条件稳定且二阶精确的。该格式通过在时间步 $n$ 和 $n+1$ 上对空间算子取平均来构建：\n$$\n\\frac{V_i^{n+1} - V_i^n}{\\Delta t} = \\frac{1}{2} \\left( (\\mathcal{L}_h V^{n+1})_i + (\\mathcal{L}_h V^n)_i \\right)\n$$\n其中 $\\mathcal{L}_h$ 是离散化后的空间算子。使用二阶中心差分来近似空间导数，我们可以重新整理该方程，将未知值 $V_i^{n+1}$ 分离到左侧，将已知值 $V_i^n$ 分离到右侧。对于每个内部空间点 $i=1, \\dots, N_S-1$，得到如下方程：\n$$\n-l_i V_{i-1}^{n+1} + d_i V_i^{n+1} - u_i V_{i+1}^{n+1} = l_i V_{i-1}^n + (2-d_i) V_i^n + u_i V_{i+1}^n\n$$\n其中系数定义为：\n$$\nl_i = \\frac{\\Delta t}{4} (\\sigma^2 i^2 - ri), \\quad d_i = 1 + \\frac{\\Delta t}{2} (\\sigma^2 i^2 + r), \\quad u_i = \\frac{\\Delta t}{4} (\\sigma^2 i^2 + ri)\n$$\n这为每个时间步的未知期权价格向量 $\\mathbf{V}^{n+1} = [V_1^{n+1}, \\dots, V_{N_S-1}^{n+1}]^T$ 构成了一个三对角线性方程组 $A \\mathbf{V}^{n+1} = \\mathbf{b}^n$。矩阵 $A$ 不随时间变化，其对角线由系数 $-l_i$、$d_i$ 和 $-u_i$ 构成。右端向量 $\\mathbf{b}^n$ 取决于前一时间步的已知值 $\\mathbf{V}^n$。通过修改第一个（$i=1$）和最后一个（$i=N_S-1$）内部点的方程来引入边界条件。条件 $V_0^n=0$ 简化了第一个方程。对于最后一个方程，已知的边界值 $V_{N_S}^{n+1} = S_{\\max} - K e^{-r\\tau_{n+1}}$ 被移到右侧，从而调整了向量 $\\mathbf{b}^n$ 的最后一个元素。\n\n求解过程从 $\\tau=0$（即 $t=T$）处的已知终端收益开始。然后，我们从 $n=0$ 到 $n=N_t-1$ 为每个时间步迭代求解该三对角系统，在 $\\tau$ 方向上向前推进解，直到达到 $\\tau=T$（即 $t=0$）。\n\n在获得时间 $t=0$ 时的期权价格网格 $V(S_i, 0)$ 后，我们计算在 $S=K$ 处的数值 Gamma $\\Gamma_{\\text{num}}$。问题陈述保证了 $S=K$ 是一个网格点，即 $S_{k_{\\text{idx}}}=K$。我们使用二阶中心差分公式：\n$$\n\\Gamma_{\\text{num}}(K,0) = \\frac{V_{k_{\\text{idx}}+1}^0 - 2V_{k_{\\text{idx}}}^0 + V_{k_{\\text{idx}}-1}^0}{(\\Delta S)^2}\n$$\n将此数值结果与在 $S=K$ 和 $t=0$ 时的布莱克-斯科尔斯 Gamma 解析解 $\\Gamma_{\\text{BS}}$ 进行比较：\n$$\n\\Gamma_{\\text{BS}}(K,0) = \\frac{\\phi(d_1)}{K \\sigma \\sqrt{T}}, \\quad \\text{其中} \\quad d_1 = \\frac{(r + \\frac{1}{2}\\sigma^2)T}{\\sigma\\sqrt{T}}\n$$\n其中 $\\phi(x)$ 是标准正态概率密度函数。然后为每个指定的测试用例计算绝对误差 $E = |\\Gamma_{\\text{num}} - \\Gamma_{\\text{BS}}|$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\nfrom scipy.linalg import solve_banded\n\ndef solve():\n    \"\"\"\n    Computes the absolute error between numerical and analytical Gamma of a European call option\n    for six different grid configurations using a Crank-Nicolson finite difference method.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (Ns, Nt)\n        (100, 1600),\n        (200, 1600),\n        (400, 1600),\n        (400, 50),\n        (400, 100),\n        (400, 200),\n    ]\n\n    r = 0.05\n    sigma = 0.2\n    K = 100.0\n    T = 1.0\n    S_max = 400.0\n\n    results = []\n    \n    # --- Analytical Gamma Calculation (constant for all cases) ---\n    d1_analytical = (np.log(K / K) + (r + 0.5 * sigma**2) * T) / (sigma * np.sqrt(T))\n    phi_d1 = norm.pdf(d1_analytical)\n    analytical_gamma = phi_d1 / (K * sigma * np.sqrt(T))\n\n    for Ns, Nt in test_cases:\n        # --- Grid and Parameter Setup ---\n        dS = S_max / Ns\n        dt = T / Nt\n        S = np.linspace(0, S_max, Ns + 1)\n\n        # --- Terminal Condition (at t=T, which is tau=0) ---\n        V = np.maximum(S - K, 0)\n        \n        # --- Crank-Nicolson Finite Difference Method Setup ---\n        # We solve forward in tau = T-t\n        \n        # Coefficients for the tridiagonal systems\n        # Vector i for all interior points\n        i = np.arange(1, Ns)\n        l_coeff = 0.25 * dt * (sigma**2 * i**2 - r * i)\n        d_coeff = 1 + 0.5 * dt * (sigma**2 * i**2 + r)\n        u_coeff = 0.25 * dt * (sigma**2 * i**2 + r * i)\n\n        # LHS matrix A does not change over time, so we pre-assemble it\n        # in the format required by scipy.linalg.solve_banded\n        # For l=1, u=1: ab[0,:]=upper, ab[1,:]=main, ab[2,:]=lower\n        A = np.zeros((3, Ns - 1))\n        A[0, 1:] = -u_coeff[:-1]  # Upper diagonal\n        A[1, :] = d_coeff         # Main diagonal\n        A[2, :-1] = -l_coeff[1:]  # Lower diagonal\n\n        # --- Time-stepping Loop (from tau=dt to tau=T) ---\n        # Corresponds to stepping from t=T-dt down to t=0\n        for n in range(1, Nt + 1):\n            tau_n = n * dt\n            \n            # Construct the RHS vector b from known values V at the previous time step\n            b = l_coeff * V[:-2] + (2 - d_coeff) * V[1:-1] + u_coeff * V[2:]\n            \n            # Apply boundary condition at S=S_max for the current time step\n            # The equation for i=Ns-1 is modified\n            # -l * V_{Ns-2} + d * V_{Ns-1} - u * V_{Ns} = ...\n            # The V_{Ns} term is known and moves to the RHS.\n            v_boundary_n = S_max - K * np.exp(-r * tau_n)\n            b[-1] += u_coeff[-1] * v_boundary_n\n\n            # Solve the tridiagonal system A * V_interior_new = b\n            V_interior_new = solve_banded((1, 1), A, b)\n            \n            # Update the solution vector V for the current time step\n            V[1:-1] = V_interior_new\n            V[0] = 0.0  # V(0, t) = 0 boundary condition\n            V[-1] = v_boundary_n # V(S_max, t) boundary condition\n        \n        # --- At this point, V contains option prices at t=0 (tau=T) ---\n\n        # --- Numerical Gamma Calculation ---\n        # S=K must be on the grid\n        k_idx = int(round(K / dS))\n        \n        v_minus = V[k_idx - 1]\n        v_zero = V[k_idx]\n        v_plus = V[k_idx + 1]\n        \n        numerical_gamma = (v_plus - 2 * v_zero + v_minus) / (dS**2)\n\n        # --- Error Calculation ---\n        error = abs(numerical_gamma - analytical_gamma)\n        results.append(error)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{err:.12f}' for err in results)}]\")\n\nsolve()\n```"}]}