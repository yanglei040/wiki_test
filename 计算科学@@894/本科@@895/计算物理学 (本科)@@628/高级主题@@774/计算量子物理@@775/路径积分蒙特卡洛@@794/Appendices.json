{"hands_on_practices": [{"introduction": "第一个练习是对路径积分方法的基本验证。你将探索离散化的路径积分配分函数 $Z_P$（它描述了一个经典的“环状聚合物”）如何在“珠子”数量 $P$ 增加时，收敛到谐振子的精确量子配分函数 $Z_{\\text{exact}}$。[@problem_id:2659206] 这个实践让你具体地理解作为 PIMC 基石的 Trotter 近似和经典-量子同构概念。", "problem": "考虑一个质量为 $m$、角频率为 $\\omega$ 的一维量子谐振子，其处于逆温度 $\\beta$ 下。在约化单位制中进行计算，其中普朗克常数除以 $2\\pi$ 被设为 $\\hbar = 1$，玻尔兹曼常数被设为 $k_{\\mathrm{B}} = 1$，因此所有物理量均为无量纲。您的任务是推导、实现并测试精确的量子正则配分函数与其虚时路径积分离散化形式之间的比较，并将此比较作为 Trotter 数 $P$ 的函数。\n\n从以下基本原理出发：\n- 正则配分函数为 $Z = \\mathrm{Tr}\\left[e^{-\\beta \\hat{H}}\\right]$，其中哈密顿算符为 $\\hat{H} = \\frac{\\hat{p}^2}{2m} + \\frac{1}{2} m \\omega^2 \\hat{q}^2$。\n- Trotter 分解和 Feynman 虚时路径积分表示法将 $Z$ 表达为虚时演化算符的 $P$ 重分解的极限。对于有限的 $P$，这会得到一个对 $P$ 珠环状聚合物的经典构型积分，该聚合物具有最近邻谐振子弹簧和珠上势 $V(q) = \\frac{1}{2} m \\omega^2 q^2$。\n- 对于二次型作用量，高斯积分可简化为该二次型矩阵的行列式。\n\n要求：\n1) 在此单位制下，推导一维谐振子的精确量子配分函数 $Z_{\\mathrm{exact}}(\\beta,\\omega)$。\n2) 从具有 $P$ 个珠子的离散虚时路径积分和原始 Trotter 分裂出发，针对有限的 $P$ 推导出一个以环状聚合物简正模式乘积表示的、显式的、可计算的表达式 $Z_P(\\beta,\\omega)$（这是 $P$ 阶路径积分蒙特卡洛（PIMC）方法中真实蒙特卡洛采样所要估计的目标；此处您将通过等效的高斯积分对其进行确定性计算）。\n3) 对于下文指定的每个测试用例，计算当 $P \\in \\{1,2,4,8,16,32,64\\}$ 时对应的 $Z_{\\mathrm{exact}}(\\beta,\\omega)$ 和 $Z_P(\\beta,\\omega)$。使用这些值计算每个 $P$ 对应的绝对误差 $|Z_P - Z_{\\mathrm{exact}}|$。\n4) 通过对最后四个 $P$ 值（$P \\in \\{8,16,32,64\\}$）的数据进行拟合，量化收敛速率。具体方法为，在对数-对数坐标下使用线性最小二乘法拟合幂律关系 $|Z_P - Z_{\\mathrm{exact}}| \\approx C P^{-r}$，以提取指数 $r$。\n5) 将上述步骤实现为一个完整的程序，使其能够针对测试套件产生所需的输出。\n\n使用以下参数集作为测试套件（在所述单位制 $\\hbar = 1, k_{\\mathrm{B}}=1$ 下，所有参数均为无量纲）：\n- 用例 1：$(\\beta,\\omega) = (0.5, 1.0)$。\n- 用例 2：$(\\beta,\\omega) = (1.0, 1.0)$。\n- 用例 3：$(\\beta,\\omega) = (3.0, 1.0)$。\n- 用例 4：$(\\beta,\\omega) = (1.0, 0.5)$。\n\n程序输入：无。所有参数均已在上方提供。\n\n程序输出：\n- 对每个用例，输出一个浮点数：即步骤 4 中拟合得到的收敛指数 $r$。\n- 您的程序应产生单行输出，其中包含用方括号括起来的、以逗号分隔的结果列表，顺序与上文列出的用例顺序一致，例如 $[r_1,r_2,r_3,r_4]$。\n- 每个 $r$ 值都必须以浮点数形式报告。由于选择了 $\\hbar = 1, k_{\\mathrm{B}}=1$ 的单位制，所有输出都是无量纲的。\n\n数值计算指南与约束：\n- 为保证数值稳定性，在计算 $Z_P(\\beta,\\omega)$ 时，请通过计算各本征模式贡献的对数来求值。\n- 三角函数中使用的角度必须是弧度制。\n- 不允许使用外部输入或随机性；您的实现必须是确定性的和自包含的。", "solution": "问题陈述已经过严格验证，被认为是科学上合理、定义明确且客观的。这是统计力学中的一个标准问题，其解是唯一且可验证的。我们现在按要求进行推导和实现。分析将在约化单位制中进行，其中约化普朗克常数 $\\hbar=1$ 且玻尔兹曼常数 $k_{\\mathrm{B}}=1$。\n\n首先，我们推导精确的量子正则配分函数 $Z_{\\mathrm{exact}}$。一维量子谐振子的哈密顿算符为 $\\hat{H} = \\frac{\\hat{p}^2}{2m} + \\frac{1}{2} m \\omega^2 \\hat{q}^2$。该系统的能量本征值是量子化的，由 $E_n = \\hbar \\omega (n + \\frac{1}{2})$ 给出，其中 $n$ 是非负整数，即 $n=0, 1, 2, \\ldots$。在指定的约化单位制中，$\\hbar=1$，能量级为 $E_n = \\omega(n + \\frac{1}{2})$。正则配分函数 $Z$ 在逆温度 $\\beta = 1/(k_{\\mathrm{B}}T)$ 下定义为玻尔兹曼算符的迹，$Z = \\mathrm{Tr}[e^{-\\beta \\hat{H}}]$。在能量本征基中，这成为对所有态的求和：\n$$Z_{\\mathrm{exact}} = \\sum_{n=0}^{\\infty} e^{-\\beta E_n} = \\sum_{n=0}^{\\infty} e^{-\\beta \\omega (n + 1/2)}$$\n我们可以提出基态的贡献，并将剩余的求和部分看作一个等比级数（几何级数）：\n$$Z_{\\mathrm{exact}} = e^{-\\beta \\omega/2} \\sum_{n=0}^{\\infty} (e^{-\\beta \\omega})^n$$\n等比级数 $\\sum_{n=0}^{\\infty} x^n$ 在 $|x|<1$ 时收敛于 $1/(1-x)$。此处，$x=e^{-\\beta\\omega}$，对于正的 $\\beta$ 和 $\\omega$，该值恒小于 1。因此，求和结果为 $1/(1-e^{-\\beta\\omega})$。将其代回，我们得到：\n$$Z_{\\mathrm{exact}} = \\frac{e^{-\\beta \\omega/2}}{1 - e^{-\\beta \\omega}} = \\frac{1}{e^{\\beta \\omega/2} - e^{-\\beta \\omega/2}}$$\n此表达式等价于双曲余割函数：\n$$Z_{\\mathrm{exact}}(\\beta, \\omega) = \\frac{1}{2\\sinh(\\beta\\omega/2)}$$\n请注意，此表达式与质量 $m$ 无关。\n\n接下来，我们从离散虚时路径积分的表述中推导近似配分函数 $Z_P$。配分函数可以表示为在虚时间 $\\tau \\in [0, \\beta\\hbar]$ 上对闭合路径的积分。将此时间区间离散化为 $P$ 个步长为 $\\epsilon = \\beta/P$ 的时间片，并使用原始 Trotter 分解 $e^{-\\beta \\hat{H}} \\approx (e^{-\\epsilon \\hat{V}} e^{-\\epsilon \\hat{T}})^P$，可得到 $Z_P$ 的表达式：\n$$Z_P = \\mathrm{Tr}\\left[ \\left(e^{-\\frac{\\beta}{P}\\hat{T}} e^{-\\frac{\\beta}{P}\\hat{V}}\\right)^P \\right]$$\n在算符之间插入完备的位置本征态集，会得到一个关于循环聚合物链（“环状聚合物”）各位置 $q_1, q_2, \\ldots, q_P$ 的类经典构型积分。对于质量为 $m$ 的粒子，其表达式为：\n$$Z_P = \\left(\\frac{mP}{2\\pi\\beta\\hbar^2}\\right)^{P/2} \\int_{-\\infty}^{\\infty} \\! \\dots \\! \\int_{-\\infty}^{\\infty} d\\mathbf{q} \\exp\\left(-\\sum_{i=1}^{P} \\left[ \\frac{mP}{2\\beta\\hbar^2}(q_{i+1}-q_i)^2 + \\frac{\\beta}{P}V(q_i) \\right] \\right)$$\n其中 $q_{P+1} \\equiv q_1$ 强制执行了环的闭合。在我们的约化单位制（$\\hbar=1$）下，对谐振子势 $V(q) = \\frac{1}{2}m\\omega^2 q^2$，指数的自变量变为：\n$$S(\\mathbf{q}) = \\sum_{i=1}^{P} \\left[ \\frac{mP}{2\\beta}(q_{i+1}-q_i)^2 + \\frac{\\beta m\\omega^2}{2P} q_i^2 \\right]$$\n该积分为一个多维高斯积分。项 $S(\\mathbf{q})$ 可以写成一个二次型 $S(\\mathbf{q}) = \\frac{1}{2}\\mathbf{q}^T \\mathbf{A} \\mathbf{q}$，其中 $\\mathbf{q} = (q_1, \\ldots, q_P)^T$，$\\mathbf{A}$ 是一个 $P \\times P$ 的对称矩阵。$\\mathbf{A}$ 的矩阵元可通过展开求和项得到：\n$$A_{ij} = m \\left[ \\left(\\frac{2P}{\\beta} + \\frac{\\beta\\omega^2}{P}\\right)\\delta_{ij} - \\frac{P}{\\beta}(\\delta_{i,j+1} + \\delta_{i,j-1}) \\right]$$\n其中下标按模 $P$ 计算。这是一个循环矩阵。\n$d$ 维高斯积分的通用公式为 $\\int d^d\\mathbf{x} \\exp(-\\frac{1}{2}\\mathbf{x}^T \\mathbf{M} \\mathbf{x}) = (2\\pi)^{d/2} (\\det \\mathbf{M})^{-1/2}$。将此公式应用于我们对 $Z_P$ 的积分，得到：\n$$Z_P = \\left(\\frac{mP}{2\\pi\\beta}\\right)^{P/2} (2\\pi)^{P/2} (\\det \\mathbf{A})^{-1/2} = \\left(\\frac{mP}{\\beta}\\right)^{P/2} m^{-P/2} (\\det \\mathbf{A}')^{-1/2} = \\left(\\frac{P}{\\beta}\\right)^{P/2} (\\det \\mathbf{A}')^{-1/2}$$\n其中 $\\mathbf{A}' = \\mathbf{A}/m$。质量 $m$ 被消去，这与精确结果一致。循环矩阵 $\\mathbf{A}'$ 的本征值 $\\lambda_k$ 由其第一行的离散傅里叶变换给出。对于 $k=0, 1, \\dots, P-1$：\n$$\\lambda_k = \\left(\\frac{2P}{\\beta} + \\frac{\\beta\\omega^2}{P}\\right) - \\frac{P}{\\beta}e^{2\\pi i k/P} - \\frac{P}{\\beta}e^{-2\\pi i k/P} = \\left(\\frac{2P}{\\beta} + \\frac{\\beta\\omega^2}{P}\\right) - \\frac{2P}{\\beta}\\cos\\left(\\frac{2\\pi k}{P}\\right)$$\n利用恒等式 $1-\\cos(2\\theta) = 2\\sin^2(\\theta)$，上式可简化为：\n$$\\lambda_k = \\frac{2P}{\\beta} \\left(1 - \\cos\\left(\\frac{2\\pi k}{P}\\right)\\right) + \\frac{\\beta\\omega^2}{P} = \\frac{4P}{\\beta}\\sin^2\\left(\\frac{\\pi k}{P}\\right) + \\frac{\\beta\\omega^2}{P}$$\n行列式是本征值的乘积，即 $\\det \\mathbf{A}' = \\prod_{k=0}^{P-1} \\lambda_k$。将其代入 $Z_P$ 的表达式，得到最终的可计算公式：\n$$Z_P(\\beta, \\omega) = \\left(\\frac{P}{\\beta}\\right)^{P/2} \\left[ \\prod_{k=0}^{P-1} \\left( \\frac{4P}{\\beta}\\sin^2\\left(\\frac{\\pi k}{P}\\right) + \\frac{\\beta\\omega^2}{P} \\right) \\right]^{-1/2}$$\n为了进行数值计算，特别是对于大的 $P$，计算 $Z_P$ 的对数会更稳定：\n$$\\log Z_P = \\frac{P}{2} \\log\\left(\\frac{P}{\\beta}\\right) - \\frac{1}{2} \\sum_{k=0}^{P-1} \\log(\\lambda_k)$$\n此表达式是路径积分表述的直接结果，并代表了 PIMC 模拟的目标值。\n\n最终要求是分析当 $P$ 增大时 $Z_P$ 收敛于 $Z_{\\mathrm{exact}}$ 的情况。原始 Trotter 近似引入了一个误差，该误差随珠子数量 $P$ 的变化而缩放。我们预期绝对误差存在一个幂律关系：\n$$|Z_P - Z_{\\mathrm{exact}}| \\approx C P^{-r}$$\n其中 $C$ 是一个常数，$r$ 是收敛指数。为了确定 $r$，我们可以对此方程的对数形式进行线性回归：\n$$\\log|Z_P - Z_{\\mathrm{exact}}| \\approx \\log C - r \\log P$$\n这是一个形如 $y = b + mx$ 的线性方程，其中 $y = \\log|Z_P - Z_{\\mathrm{exact}}|$，$x = \\log P$，斜率 $m = -r$，截距 $b = \\log C$。我们将计算 $P \\in \\{1, 2, 4, 8, 16, 32, 64\\}$ 时的误差，并使用最后四个数据点（$P \\in \\{8, 16, 32, 64\\}$）进行线性最小二乘拟合以提取斜率 $m$。收敛指数则为 $r = -m$。对于此处使用的原始算法，理论上预测 $r=2$。实现部分将为每个测试用例计算该指数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem of comparing the exact and path-integral discretized\n    partition functions for a quantum harmonic oscillator.\n    \"\"\"\n\n    # Test cases from the problem statement: (beta, omega)\n    test_cases = [\n        (0.5, 1.0),\n        (1.0, 1.0),\n        (3.0, 1.0),\n        (1.0, 0.5),\n    ]\n\n    # Trotter numbers for the analysis\n    P_values = np.array([1, 2, 4, 8, 16, 32, 64])\n\n    # List to store the final convergence exponents r for each test case\n    convergence_exponents = []\n\n    for beta, omega in test_cases:\n        # 1. Calculate the exact partition function Z_exact\n        # Z_exact = 1 / (2 * sinh(beta * omega / 2))\n        z_exact = 1.0 / (2.0 * np.sinh(beta * omega / 2.0))\n\n        errors = []\n        for P in P_values:\n            # 2. Calculate the discretized path integral partition function Z_P\n            # The formula is derived in the solution text. We compute its logarithm\n            # for numerical stability.\n            # log(Z_P) = (P/2)*log(P/beta) - (1/2)*sum_{k=0}^{P-1}log(lambda_k)\n            # lambda_k = (4P/beta)*sin^2(pi*k/P) + (beta*omega^2)/P\n\n            k_vals = np.arange(P)\n            sin_term = np.sin(np.pi * k_vals / P)**2\n            lambda_k = (4.0 * P / beta) * sin_term + (beta * omega**2 / P)\n            \n            # The logarithm of lambda_k can have -inf if lambda_k is 0,\n            # which does not happen for omega > 0.\n            log_lambda_k_sum = np.sum(np.log(lambda_k))\n\n            log_z_p = (P / 2.0) * np.log(P / beta) - 0.5 * log_lambda_k_sum\n            z_p = np.exp(log_z_p)\n\n            # 3. Compute the absolute error\n            error = np.abs(z_p - z_exact)\n            errors.append(error)\n\n        # 4. Fit the convergence rate r from the last four P values\n        # Model: error = C * P^(-r) => log(error) = log(C) - r * log(P)\n        # We perform a linear fit on log-log data.\n        \n        # Use last four points for the fit: P = {8, 16, 32, 64}\n        fit_P_values = P_values[-4:]\n        fit_errors = np.array(errors[-4:])\n        \n        log_P = np.log(fit_P_values)\n        log_error = np.log(fit_errors)\n\n        # Using numpy's polyfit to find the slope of the linear regression\n        # polyfit returns [slope, intercept] for degree 1\n        slope, _ = np.polyfit(log_P, log_error, 1)\n\n        # The convergence exponent r is the negative of the slope\n        r = -slope\n        convergence_exponents.append(r)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.10f}' for r in convergence_exponents)}]\")\n\nsolve()\n```", "id": "2659206"}, {"introduction": "在验证了离散路径积分可以表示量子系统之后，我们现在转向一个更实际的任务：计算一个物理可观测量。在这个练习中，你将对量子谐振子执行 PIMC 模拟，以在恒定温度下计算其平均能量。[@problem_id:2446266] 这将引导你学习如何使用恒温器对正则系综进行采样，并引入“热力学估计量”的概念，从而从模拟的经典路径中提取量子力学性质。", "problem": "考虑一个一维量子谐振子，其质量为 $m$，角频率为 $\\omega$。该系统与热浴处于热平衡状态，绝对温度为 $T$。使用具有 $P$ 个 Trotter 切片（通常称为“珠子”）的虚时路径积分表示，构建一个经典的同构“环状聚合物”系统，该系统在逆温度 $\\beta = 1/T$ 下对量子正则系综进行抽样。约定约化普朗克常数 $\\hbar$ 和玻尔兹曼常数 $k_B$ 均为1，即 $\\hbar = 1$ 和 $k_B = 1$，因此所有能量和温度都以相同的自然单位表示。\n\n在环状聚合物表述中，系统的等效经典势能 $U(\\mathbf{q})$ 是通过对路径积分作用量进行离散化得到的。对于一个由 $P$ 个珠子组成的链，其势能为：\n$$\nU(\\mathbf{q}) = \\sum_{k=1}^{P} \\left[ \\frac{mP}{2\\beta^2} (q_k - q_{k+1})^2 + \\frac{m\\omega^2}{2P} q_k^2 \\right]\n$$\n其中 $q_{P+1} \\equiv q_1$ 强制执行了环的闭合。蒙特卡洛模拟的目标是在温度 $T$ 下对此势能对应的玻尔兹曼分布 $e^{-\\beta U(\\mathbf{q})}$ 进行采样。\n\n必须通过将此环状聚合物系统耦合到恒温器来执行恒温模拟，以确保在目标温度 $T$ 下对正则系综进行抽样。根据抽样的构型，使用离散化路径积分导出的热力学能量估计量来估算底层量子谐振子的平均总能量：\n$$\nE_{\\mathrm{est}} \\;=\\; \\left\\langle \\frac{P}{2\\beta} \\;+\\; \\frac{1}{P} \\sum_{k=1}^{P} \\frac{1}{2} m \\omega^2 q_k^2 \\;-\\; \\frac{m P}{2\\beta^2} \\sum_{k=1}^{P} \\left(q_k - q_{k+1}\\right)^2 \\right\\rangle.\n$$\n谐振子的精确量子力学正则系综平均总能量为\n$$\nE_{\\mathrm{exact}}(T) \\;=\\; \\frac{1}{2} \\,\\hbar \\omega \\,\\coth\\!\\left(\\frac{1}{2}\\beta \\hbar \\omega\\right) \\;=\\; \\frac{1}{2} \\,\\omega \\,\\coth\\!\\left(\\frac{\\omega}{2T}\\right),\n$$\n同样是在 $\\hbar=1$ 和 $k_B=1$ 的条件下。\n\n你的程序必须：\n- 在恒温器下模拟环状聚合物动力学，为每个测试用例从正则系综中抽取样本。\n- 通过对抽样构型上的热力学估计量进行时间平均来计算 $E_{\\mathrm{est}}$。\n- 对每个测试用例，将 $E_{\\mathrm{est}}$ 与 $E_{\\mathrm{exact}}$ 进行比较，并报告相对误差\n$$\n\\varepsilon \\;=\\; \\frac{\\left|E_{\\mathrm{est}} - E_{\\mathrm{exact}}\\right|}{E_{\\mathrm{exact}}},\n$$\n是否小于指定的容差 $\\delta$。\n\n使用以下测试套件，其中每个元组为 $(m,\\omega,T,P)$：\n- 用例 1 (一般情况): $(1.0,\\,1.0,\\,1.0,\\,16)$。\n- 用例 2 (低温，强量子区域): $(1.0,\\,1.0,\\,0.25,\\,64)$。\n- 用例 3 (高温，经典极限，单珠子边缘情况): $(1.0,\\,2.0,\\,3.0,\\,1)$。\n\n容差设为 $\\delta = 0.05$ (无量纲)。所有答案都必须以 $k_B=\\hbar=1$ 的自然能量单位表示。\n\n最终输出格式规范：\n- 你的程序应生成单行输出，其中包含一个用方括号括起来的、以逗号分隔的布尔值列表，按上述用例的顺序，指明每个用例是否满足相对误差标准。例如：\"[True,False,True]\"。", "solution": "### 步骤 1：验证与分析\n\n- **科学依据**：该问题具有坚实的科学基础。量子统计力学的路径积分表述以及由此产生的与环状聚合物的经典同构，是计算物理学中标准且成熟的概念。问题中提供的用于蒙特卡洛采样的势能函数、热力学能量估计量以及精确的量子力学能量，都是正确且符合教科书的表达式。\n- **适定性**：该问题是适定的。它要求为一个具有特定概率分布（正则系综）的系统计算一个明确定义的统计平均值。存在唯一且稳定的平均能量。问题陈述提到了“恒温器”，这是一个通用术语，指的是任何确保系统在恒定温度下采样的算法。在本练习中，我们将采用路径积分蒙特卡洛（PIMC）方法，该方法通过Metropolis-Hastings算法自然地对正则系综进行采样。\n- **客观性**：该问题以客观、正式的语言陈述，不含任何主观或非科学内容。\n\n### 步骤 2：解决方案\n\n目标是在给定温度 $T$ 下，从正则系综中抽样经典环状聚合物的构型，并根据这些样本估算相应量子谐振子的平均能量。我们将使用路径积分蒙特卡洛（PIMC）方法来实现这一点。\n\nPIMC 算法生成一系列遵循玻尔兹曼概率 $p(\\mathbf{q}) \\propto e^{-\\beta U(\\mathbf{q})}$ 分布的构型，从而完美地满足了对正则系综进行抽样的要求。环状聚合物系统的等效经典势能由问题描述中给出：\n$$\nU(\\mathbf{q}) = \\sum_{k=1}^{P} \\left[ \\frac{mP}{2\\beta^2} (q_k - q_{k+1})^2 + \\frac{m\\omega^2}{2P} q_k^2 \\right]\n$$\n其中 $q_{P+1} = q_1$。PIMC 模拟过程如下：\n\n1.  **初始化**：初始化 $P$ 个珠子的位置 $\\{q_k\\}$。一个简单的选择是令所有 $k=1, \\dots, P$ 的 $q_k=0$。\n2.  **平衡**：执行若干 Monte Carlo 步，使系统达到热平衡并“忘记”其人为的初始状态。\n3.  **生产**：平衡后，执行更多的 Monte Carlo 步。周期性地保存（抽样）聚合物的构型以进行统计分析。\n\n单个 Monte Carlo 步包括：\na.  **移动提议**：从当前构型 $\\mathbf{q}$ 生成一个试验构型 $\\mathbf{q}'$。一种简单有效的移动方式是随机选择一个珠子 $k$，并提议一个新的位置 $q_k' = q_k + \\delta$，其中 $\\delta$ 是从均匀分布 $[-\\frac{\\Delta q}{2}, +\\frac{\\Delta q}{2}]$ 中抽取的随机位移。参数 $\\Delta q$ 是最大移动步长，必须进行调整以达到高效的接受率（通常为 $30-50\\%$）。\nb.  **接受准则**：计算势能的变化量 $\\Delta U = U(\\mathbf{q}') - U(\\mathbf{q})$。该移动以概率 $p_{\\text{acc}} = \\min(1, e^{-\\beta \\Delta U})$ 被接受。如果移动被接受，系统状态变为 $\\mathbf{q}'$。如果被拒绝，系统保持在状态 $\\mathbf{q}$，该状态在统计平均中再次被计数。\n\n对于影响 $q_k$ 的单个珠子移动，只有 $U(\\mathbf{q})$ 中涉及 $q_k$ 的项会发生变化。能量变化为：\n$$\n\\Delta U = \\left( \\frac{mP}{2\\beta^2} \\left( (q_k' - q_{k-1})^2 + (q_k' - q_{k+1})^2 \\right) + \\frac{m\\omega^2}{2P} q_k'^2 \\right) - \\left( \\frac{mP}{2\\beta^2} \\left( (q_k - q_{k-1})^2 + (q_k - q_{k+1})^2 \\right) + \\frac{m\\omega^2}{2P} q_k^2 \\right)\n$$\n其中索引按循环方式处理。\n\n在收集到足够数量的统计独立的构型 $\\mathbf{q}$ 样本后，使用所提供的热力学估计量计算平均能量：\n$$\nE_{\\mathrm{est}} = \\frac{1}{N_{\\text{samples}}} \\sum_{i=1}^{N_{\\text{samples}}} \\left[ \\frac{P}{2\\beta} + \\frac{1}{P} \\sum_{k=1}^{P} \\frac{1}{2} m \\omega^2 (q_{k}^{(i)})^2 - \\frac{m P}{2\\beta^2} \\sum_{k=1}^{P} \\left(q_k^{(i)} - q_{k+1}^{(i)}\\right)^2 \\right]\n$$\n其中 $q_k^{(i)}$ 是第 $i$ 个样本中珠子 $k$ 的位置。\n\n然后将计算出的 $E_{\\mathrm{est}}$ 与量子谐振子的精确解析结果 $E_{\\mathrm{exact}}(T) = \\frac{1}{2} \\omega \\coth(\\frac{\\omega}{2T})$进行比较，以确定相对误差 $\\varepsilon$ 是否在容差 $\\delta=0.05$ 范围内。\n\n根据物理参数为每个测试用例选择移动步长 $\\Delta q$，以确保高效抽样。聚合物的特征刚度主要由弹簧项的系数 $mP/\\beta^2$ 决定，这表明合适的移动步长与此刚度成反比。我们将为每个用例使用特定的调整值。\n\n对于 $P=1$ 的用例 3，环状聚合物坍缩为谐波势中的单个经典粒子。弹簧项 $(q_k - q_{k+1})^2$ 恒等于零。模拟正确地简化为对经典谐振子进行抽样，能量估计量简化为 $E_{\\mathrm{est}} = \\langle \\frac{1}{2\\beta} + \\frac{1}{2} m \\omega^2 q_1^2 \\rangle$。根据能量均分定理，$\\langle \\frac{1}{2} m \\omega^2 q_1^2 \\rangle = \\frac{1}{2}T_B = \\frac{1}{2}T$，因此期望的平均值为 $E_{\\mathrm{est}} \\approx \\frac{T}{2} + \\frac{T}{2} = T$。这是量子能量的经典极限。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the path integral quantum harmonic oscillator problem for the given test cases.\n    \"\"\"\n\n    # Global simulation parameters\n    _NUM_STEPS = 500_000\n    _NUM_EQUIL = 100_000\n    _SAMPLE_FREQ = 100\n\n    def coth(x):\n        \"\"\"Computes the hyperbolic cotangent.\"\"\"\n        # Use np.tanh for numerical stability\n        return 1.0 / np.tanh(x)\n\n    def get_exact_energy(w, T):\n        \"\"\"\n        Calculates the exact quantum average energy of a 1D harmonic oscillator.\n        Units: h_bar = 1, k_B = 1.\n        \"\"\"\n        if T == 0:\n            # Zero-point energy\n            return 0.5 * w\n        \n        arg = 0.5 * w / T\n        return 0.5 * w * coth(arg)\n\n    def run_pimc(m, w, T, P, move_size):\n        \"\"\"\n        Performs a Path Integral Monte Carlo (PIMC) simulation for the harmonic oscillator.\n\n        Args:\n            m (float): Mass of the oscillator.\n            w (float): Angular frequency of the oscillator.\n            T (float): Temperature of the heat bath.\n            P (int): Number of Trotter slices (beads).\n            move_size (float): The maximum displacement for a Monte Carlo move.\n\n        Returns:\n            float: The estimated average total energy from the simulation.\n        \"\"\"\n        beta = 1.0 / T\n\n        # Pre-calculated coefficients for the CORRECT potential energy and its change\n        spring_const = 0.5 * m * P / (beta**2)\n        potential_const = 0.5 * m * w**2 / P\n        \n        # Initialize the ring polymer chain at the origin\n        q = np.zeros(P)\n        \n        energy_samples = []\n\n        # PIMC simulation loop\n        for step in range(_NUM_STEPS):\n            # Propose a move by picking a random bead and displacing it\n            bead_idx = np.random.randint(P)\n            q_old_k = q[bead_idx]\n            q_new_k = q_old_k + move_size * (np.random.rand() - 0.5)\n\n            # Get neighbor positions using cyclic boundary conditions\n            # numpy's negative indexing handles the k=0 case correctly for q[k-1]\n            q_prev_k = q[bead_idx - 1]\n            q_next_k = q[(bead_idx + 1) % P]\n\n            # Calculate the change in potential energy due to the move\n            U_old_part = spring_const * ((q_old_k - q_prev_k)**2 + (q_old_k - q_next_k)**2) \\\n                       + potential_const * q_old_k**2\n            U_new_part = spring_const * ((q_new_k - q_prev_k)**2 + (q_new_k - q_next_k)**2) \\\n                       + potential_const * q_new_k**2\n            delta_U = U_new_part - U_old_part\n            \n            # Metropolis-Hastings acceptance criterion\n            if delta_U < 0.0 or np.random.rand() < np.exp(-beta * delta_U):\n                q[bead_idx] = q_new_k\n            \n            # After equilibration, sample the energy estimator\n            if step >= _NUM_EQUIL and step % _SAMPLE_FREQ == 0:\n                # Calculate terms for the thermodynamic energy estimator\n                q_next = np.roll(q, -1)\n                sum_sq_dist = np.sum((q - q_next)**2)\n                sum_sq_pos = np.sum(q**2)\n                \n                kinetic_term = P / (2.0 * beta)\n                potential_term = (m * w**2 / (2.0 * P)) * sum_sq_pos\n                spring_term = (m * P / (2.0 * beta**2)) * sum_sq_dist\n\n                estimator_val = kinetic_term + potential_term - spring_term\n                energy_samples.append(estimator_val)\n\n        return np.mean(energy_samples)\n\n    # Test cases: (m, omega, T, P, tuned_move_size)\n    # The move_size is tuned for each case to ensure efficient sampling.\n    test_cases = [\n        (1.0, 1.0, 1.0, 16, 0.4),\n        (1.0, 1.0, 0.25, 64, 0.2),\n        (1.0, 2.0, 3.0, 1, 0.8)\n    ]\n    \n    tolerance = 0.05\n    results = []\n\n    for case in test_cases:\n        m, w, T, P, move_size = case\n        \n        # Calculate theoretical exact energy\n        E_exact = get_exact_energy(w, T)\n        \n        # Run PIMC simulation to get the estimated energy\n        E_est = run_pimc(m, w, T, P, move_size)\n        \n        # Calculate relative error and check against tolerance\n        relative_error = np.abs(E_est - E_exact) / E_exact\n        results.append(relative_error < tolerance)\n\n    # Print results in the specified format\n    print(f\"[{','.join(map(str, [r.item() for r in results]))}]\")\n\nsolve()\n```", "id": "2446266"}, {"introduction": "路径积分表述的威力在处理多全同粒子系统时才真正得以彰显，因为在这些系统中量子统计至关重要。最后一个练习将通过考虑粒子世界线的排列，来探索 PIMC 如何包含玻色子和费米子的交换对称性。[@problem_id:2798482] 通过计算径向分布函数 $g(r)$，你将直接观察到量子统计的著名效应：玻色子的“聚集”和费米子因泡利不相容原理产生的“泡利洞”，从而将抽象的量子原理转化为可触知的结构特性。", "problem": "您将在$3$维空间中的理想均匀量子气体框架下，使用全同粒子的路径积分表示进行研究。您只能使用基本定义和自由粒子密度矩阵作为出发点。您的目标是展示交换对称性如何修正径向分布函数，并实现一个路径积分蒙特卡洛（PIMC）风格的估计量，该估计量在非简并极限下可简化为一个仅含粒子间距和热德布罗意波长的闭式函数。\n\n您可以使用的基本出发点：\n- 均匀系统中径向分布函数 $g(r)$ 通过双粒子密度算符的定义。\n- 用于玻色子和费米子的$N$粒子密度算符的对称化或反对称化。\n- 在逆温度 $\\beta$ 下，$3$维空间中的自由单粒子密度矩阵，\n  $$\\rho^{(1)}(\\mathbf{r},\\mathbf{r}';\\beta) = \\left(\\frac{1}{\\lambda_T^3}\\right)\\exp\\!\\left(-\\pi\\frac{\\lvert \\mathbf{r}-\\mathbf{r}'\\rvert^2}{\\lambda_T^2}\\right),$$\n  其中热德布罗意波长为\n  $$\\lambda_T = \\frac{h}{\\sqrt{2\\pi m k_\\mathrm{B} T}},$$\n  $h$ 是普朗克常数，$m$ 是粒子质量，$k_\\mathrm{B}$ 是玻尔兹曼常数，$T$ 是绝对温度。\n\n任务：\n1. 从均匀理想气体的 $g(r)$ 定义和对称化假设出发，推导在低逸度（非简并极限）下，玻色子和费米子的 $g(r)$ 中仅由交换产生的修正。您的推导必须从上述给定的双粒子约化密度和自由粒子密度矩阵开始，不得引用任何预先记下的 $g(r)$ 目标表达式。\n2. 使用具有 $M$ 个虚时间片的路径积分表示和原始自由粒子作用量，将对估计量中的交换贡献表示为沿一对交换的世界线的非对角与对角自由粒子密度矩阵之比。证明对于均匀理想气体，该估计量仅依赖于标量间距 $r$ 和 $\\lambda_T$，并得出其对 $M$ 的显式依赖关系，该关系在连续极限下简化为关于 $r$ 和 $\\lambda_T$ 的闭式形式。\n3. 实现一个程序，该程序根据仅交换估计量计算三种统计类型选择 $s\\in\\{\\mathrm{MB},\\mathrm{FD},\\mathrm{BE}\\}$ 所预测的 $g(r)$，这三种类型分别对应 Maxwell–Boltzmann、Fermi–Dirac 和 Bose–Einstein 统计。对于 $\\mathrm{MB}$，不存在交换修正。\n\n物理单位和常数：\n- 输入间距单位必须是米。\n- 温度单位必须是开尔文。\n- 质量单位必须是千克。\n- 输出的 $g(r)$ 是无量纲的。\n- 使用 $h = 6.62607015\\times 10^{-34}\\ \\mathrm{J\\,s}$ 和 $k_\\mathrm{B} = 1.380649\\times 10^{-23}\\ \\mathrm{J\\,K^{-1}}$。\n- 一个原子质量单位是 $u = 1.66053906660\\times 10^{-27}\\ \\mathrm{kg}$。\n\n测试套件：\n使用以下参数集，每个参数集均由 $(s, m, T, \\{r_i\\})$ 组成，其中 $\\{r_i\\}$ 是以米为单位的间距的有限列表。对于每个测试用例，您的程序必须输出对应的列表 $\\{g(r_i)\\}$ 作为浮点数。\n\n- 测试 A（基线，无交换）：$s=\\mathrm{MB}$, $m = 4.002602\\,u$, $T=300$, $\\{r_i\\}=\\{0,\\ 1.0\\times 10^{-10},\\ 5.0\\times 10^{-10}\\}$。\n- 测试 B（费米子，低温）：$s=\\mathrm{FD}$, $m = 3.016\\,u$, $T=2$, $\\{r_i\\}=\\{0,\\ 5.0\\times 10^{-10},\\ 2.0\\times 10^{-9}\\}$。\n- 测试 C（玻色子，低温）：$s=\\mathrm{BE}$, $m = 4.002602\\,u$, $T=2$, $\\{r_i\\}=\\{0,\\ 5.0\\times 10^{-10},\\ 2.0\\times 10^{-9}\\}$。\n- 测试 D（玻色子，极低温，接近 $r=0$ 时的边缘行为以及大 $r$ 处的饱和行为）：$s=\\mathrm{BE}$, $m = 4.002602\\,u$, $T=0.5$, $\\{r_i\\}=\\{0,\\ 1.0\\times 10^{-9},\\ 1.0\\times 10^{-8}\\}$。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。列表中的每个元素对应一个测试用例，其本身也是一个按所提供间距顺序排列的 $g(r)$ 值列表。例如，所需格式为：$[[g_{A,1},g_{A,2},g_{A,3}],[g_{B,1},g_{B,2},g_{B,3}],\\dots]$。不要打印任何额外文本。", "solution": "问题陈述经过严格审查，被认定为有效。它在科学上植根于量子统计力学的既定原理，特别是理想量子气体理论和路径积分形式主义。该问题是良构的，提供了所有必要的定义、常数和一个关键条件（非简并极限），足以推导出一个唯一且有意义的解。其术语精确，各项任务从第一性原理的理论推导到计算实现，形成了一个逻辑上的递进。涉及Helium-3和Helium-4的物理参数和测试用例是符合实际的，用以阐释量子交换统计的核心概念——费米子的泡利不相容原理和玻色子的聚束效应。内容不存在不一致、模糊或事实错误。\n\n解决方案按要求分为两部分呈现：首先，从双粒子密度推导径向分布函数；其次，从路径积分蒙特卡洛估计量的角度进行解释。\n\n### 第一部分：径向分布函数 $g(r)$ 的推导\n\n对于一个数密度为 $n=N/V$ 的均匀系统，径向分布函数 $g(r)$ 通过双粒子密度 $\\rho^{(2)}(\\mathbf{r}_1, \\mathbf{r}_2)$ 定义为：\n$$\nn^2 g(|\\mathbf{r}_1 - \\mathbf{r}_2|) = \\rho^{(2)}(\\mathbf{r}_1, \\mathbf{r}_2)\n$$\n双粒子密度是双粒子约化密度矩阵的对角元，通过对完整的 $N$ 粒子密度矩阵 $\\hat{\\rho}_N$ 的 $N-2$ 个粒子坐标求迹得到：\n$$\n\\rho^{(2)}(\\mathbf{r}_1, \\mathbf{r}_2) = \\frac{N(N-1)}{Z_N} \\int d\\mathbf{r}_3 \\dots d\\mathbf{r}_N \\, \\langle \\mathbf{r}_1, \\dots, \\mathbf{r}_N | e^{-\\beta \\hat{H}} | \\mathbf{r}_1, \\dots, \\mathbf{r}_N \\rangle_{\\text{symm}}\n$$\n其中 $Z_N = \\mathrm{Tr}(e^{-\\beta \\hat{H}})$ 是正则配分函数，$\\beta = (k_\\mathrm{B} T)^{-1}$。下标“symm”表示态已经过适当的对称化（对玻色子）或反对称化（对费米子）。\n\n对于一个由 $N$ 个无相互作用（理想）粒子组成的系统，哈密顿量为 $\\hat{H} = \\sum_{i=1}^N \\hat{K}_i$，其中 $\\hat{K}_i$ 是粒子 $i$ 的动能算符。相应的对称化密度算符在坐标表象下的矩阵元为：\n$$\n\\langle \\mathbf{R} | e^{-\\beta \\hat{H}} | \\mathbf{R} \\rangle_{\\text{symm}} = \\frac{1}{N!} \\sum_{P \\in S_N} \\zeta^{\\epsilon(P)} \\prod_{i=1}^N \\langle \\mathbf{r}_i | e^{-\\beta \\hat{K}} | \\mathbf{r}_{P(i)} \\rangle = \\frac{1}{N!} \\sum_{P \\in S_N} \\zeta^{\\epsilon(P)} \\prod_{i=1}^N \\rho^{(1)}(\\mathbf{r}_i, \\mathbf{r}_{P(i)}; \\beta)\n$$\n此处，$\\mathbf{R} = \\{\\mathbf{r}_1, \\dots, \\mathbf{r}_N\\}$，$P$ 是粒子标签的一个置换，$\\epsilon(P)$ 是其宇称，$\\zeta=+1$ 对应玻色子（BE），$\\zeta=-1$ 对应费米子（FD）。$\\rho^{(1)}(\\mathbf{r}, \\mathbf{r}'; \\beta)$ 是单粒子自由粒子密度矩阵。\n\n我们在非简并（低逸度）极限下进行计算，此极限下密度很低，满足 $n\\lambda_T^3 \\ll 1$。在此区域，多粒子交换循环的概率可以忽略不计。因此，对于任意一对粒子 $(1, 2)$，我们只保留两个最显著的置换：单位置换 $P=I$ 和简单对换 $P=(12)$。所有其他置换都会产生密度的高阶项，因此被忽略。\n\n矩阵元变为：\n$$\n\\langle \\mathbf{R} | e^{-\\beta \\hat{H}} | \\mathbf{R} \\rangle_{\\text{symm}} \\approx \\frac{1}{N!} \\left( \\prod_{i=1}^N \\rho^{(1)}(\\mathbf{r}_i, \\mathbf{r}_i) + \\zeta \\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_2) \\rho^{(1)}(\\mathbf{r}_2, \\mathbf{r}_1) \\prod_{i=3}^N \\rho^{(1)}(\\mathbf{r}_i, \\mathbf{r}_i) \\right)\n$$\n我们将对角元 $\\rho^{(1)}(\\mathbf{r}, \\mathbf{r}; \\beta)$ 记为 $\\rho_d$。对于自由粒子，$\\rho_d = 1/\\lambda_T^3$ 且为常数。\n\n现在，我们计算 $\\rho^{(2)}(\\mathbf{r}_1, \\mathbf{r}_2)$：\n$$\n\\rho^{(2)}(\\mathbf{r}_1, \\mathbf{r}_2) \\approx \\frac{N(N-1)}{Z_N} \\frac{1}{N!} \\int d\\mathbf{r}_3 \\dots d\\mathbf{r}_N \\left[ (\\rho_d)^N + \\zeta \\frac{|\\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_2)|^2}{(\\rho_d)^2} (\\rho_d)^N \\right]\n$$\n对 $d\\mathbf{r}_3 \\dots d\\mathbf{r}_N$ 的积分得到一个因子 $V^{N-2}$。\n$$\n\\rho^{(2)}(\\mathbf{r}_1, \\mathbf{r}_2) \\approx \\frac{1}{(N-2)!} \\frac{V^{N-2} (\\rho_d)^N}{Z_N} \\left( 1 + \\zeta \\frac{|\\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_2)|^2}{(\\rho_d)^2} \\right)\n$$\n在相同的非简并极限下，配分函数 $Z_N$ 可由理想玻色或费米气体的配分函数很好地近似，在低逸度下趋近于经典理想气体的结果：$Z_N \\approx \\frac{Z_1^N}{N!} = \\frac{(V\\rho_d)^N}{N!}$。\n\n将此代入 $\\rho^{(2)}$ 的表达式中：\n$$\n\\rho^{(2)}(\\mathbf{r}_1, \\mathbf{r}_2) \\approx \\frac{1}{(N-2)!} \\frac{V^{N-2} (\\rho_d)^N}{ (V\\rho_d)^N / N! } \\left( \\dots \\right) = \\frac{N(N-1)}{V^2} \\left( 1 + \\zeta \\frac{|\\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_2)|^2}{(\\rho_d)^2} \\right)\n$$\n对于大的 $N$，$n \\approx N/V \\approx (N-1)/V$，所以 $\\frac{N(N-1)}{V^2} \\approx n^2$。\n$$\n\\rho^{(2)}(\\mathbf{r}_1, \\mathbf{r}_2) \\approx n^2 \\left( 1 + \\zeta \\frac{|\\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_2)|^2}{(\\rho_d)^2} \\right)\n$$\n使用定义 $g(r) = \\rho^{(2)}/n^2$，我们得到径向分布函数中的交换贡献：\n$$\ng(r) = 1 + \\zeta \\frac{|\\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_2)|^2}{(\\rho^{(1)}(\\mathbf{r}, \\mathbf{r}))^2}\n$$\n其中 $r = |\\mathbf{r}_1 - \\mathbf{r}_2|$。代入给定的自由粒子密度矩阵形式：\n$$\n\\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_2; \\beta) = \\frac{1}{\\lambda_T^3} \\exp\\left(-\\pi \\frac{r^2}{\\lambda_T^2}\\right)\n\\quad \\text{和} \\quad\n\\rho_d = \\rho^{(1)}(\\mathbf{r}, \\mathbf{r}; \\beta) = \\frac{1}{\\lambda_T^3}\n$$\n该比率变为：\n$$\n\\frac{|\\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_2)|^2}{(\\rho_d)^2} = \\frac{\\left( \\frac{1}{\\lambda_T^3} \\exp\\left(-\\pi \\frac{r^2}{\\lambda_T^2}\\right) \\right)^2}{\\left( \\frac{1}{\\lambda_T^3} \\right)^2} = \\exp\\left(-2\\pi \\frac{r^2}{\\lambda_T^2}\\right)\n$$\n因此，在此近似水平下，径向分布函数的最终表达式为：\n$$\ng(r) = 1 + \\zeta \\exp\\left(-2\\pi \\frac{r^2}{\\lambda_T^2}\\right)\n$$\n对于Maxwell-Boltzmann (MB) 统计，粒子是可区分的，因此只考虑单位置换，等同于设置 $\\zeta=0$。对于Fermi-Dirac (FD) 统计，$\\zeta=-1$，导致 $g(0)=0$（泡利不相容）。对于Bose-Einstein (BE) 统计，$\\zeta=+1$，导致 $g(0)=2$（玻色子聚束）。\n\n### 第二部分：路径积分蒙特卡洛（PIMC）估计量的视角\n\n在路径积分形式主义中，密度矩阵 $\\langle \\mathbf{R} | e^{-\\beta \\hat{H}} | \\mathbf{R}' \\rangle$ 被表示为连接 $\\mathbf{R}'$ 到 $\\mathbf{R}$ 的所有虚时间 $\\beta$ 路径上的积分。路径被离散化为 $M$ 个时长为 $\\tau = \\beta/M$ 的时间片。\n配分函数 $Z$ 涉及对所有置换 $P$ 的求和以及对与每个置换一致的所有路径的积分。对于两个粒子，构型要么是直接的（单位置换，$P=I$），要么是交换的（$P=(12)$）。\n某个量的“PIMC风格估计量”是指该量在所有采样路径构型上的平均值，并以路径概率为权重。$g(r)$ 的交换贡献可以理解为，找到两个处于交换构型与直接构型中的粒子的相对概率。\n\n相距 $r=|\\mathbf{r}_1-\\mathbf{r}_2|$ 的双粒子构型的统计权重与对角双粒子密度矩阵元成正比：\n$$\nW(\\mathbf{r}_1, \\mathbf{r}_2) \\propto \\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_1; \\beta)\\rho^{(1)}(\\mathbf{r}_2, \\mathbf{r}_2; \\beta) + \\zeta \\, \\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_2; \\beta)\\rho^{(1)}(\\mathbf{r}_2, \\mathbf{r}_1; \\beta)\n$$\n第一项对应于直接路径（世界线1从 $\\mathbf{r}_1$ 开始并在 $\\mathbf{r}_1$ 结束；世界线2从 $\\mathbf{r}_2$ 开始并在 $\\mathbf{r}_2$ 结束）。第二项对应于交换路径（世界线1从 $\\mathbf{r}_1$ 开始并在 $\\mathbf{r}_2$ 结束；世界线2从 $\\mathbf{r}_2$ 开始并在 $\\mathbf{r}_1$ 结束）。\n\n因此，交换贡献的估计量是非对角（交换）路径权重与对角（直接）路径权重之比：\n$$\nE_{\\text{exch}}(r) = \\frac{\\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_2; \\beta)\\rho^{(1)}(\\mathbf{r}_2, \\mathbf{r}_1; \\beta)}{\\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_1; \\beta)\\rho^{(1)}(\\mathbf{r}_2, \\mathbf{r}_2; \\beta)} = \\frac{|\\rho^{(1)}(\\mathbf{r}_1, \\mathbf{r}_2; \\beta)|^2}{(\\rho^{(1)}(\\mathbf{r}, \\mathbf{r}; \\beta))^2}\n$$\n这正是在第一部分中推导出的交换项。\n\n问题要求展示对虚时间片数量 $M$ 的依赖性。对于理想气体（$V=0$），短时传播子的原始近似是精确的：\n$$\n\\rho^{(1)}(\\mathbf{r}, \\mathbf{r}'; \\tau) = \\langle \\mathbf{r} | e^{-\\tau \\hat{K}} | \\mathbf{r}' \\rangle\n$$\n完整的密度矩阵 $\\rho^{(1)}(\\mathbf{r}, \\mathbf{r}'; \\beta)$ 是对中间时间片的卷积：\n$$\n\\rho^{(1)}(\\mathbf{r}, \\mathbf{r}'; \\beta=M\\tau) = \\int d\\mathbf{r}_1 \\dots d\\mathbf{r}_{M-1} \\, \\rho^{(1)}(\\mathbf{r}, \\mathbf{r}_1; \\tau) \\dots \\rho^{(1)}(\\mathbf{r}_{M-1}, \\mathbf{r}'; \\tau)\n$$\n因为自由粒子传播子是高斯型的，所以这个卷积是精确的，并产生相同的函数形式，只是将 $\\tau$ 替换为 $M\\tau = \\beta$。具体来说：\n$$\n\\int d\\mathbf{y} \\, \\exp(-a|\\mathbf{x}-\\mathbf{y}|^2) \\exp(-b|\\mathbf{y}-\\mathbf{z}|^2) \\propto \\exp\\left(-\\frac{ab}{a+b}|\\mathbf{x}-\\mathbf{z}|^2\\right)\n$$\n反复应用此公式可以证实，对于任何 $M \\ge 1$，$\\rho^{(1)}(\\mathbf{r}, \\mathbf{r}';\\beta)$ 的解析形式都能够被精确地恢复。\n因此，对于理想气体，估计量 $E_{\\text{exch}}(r)$ 与 $M$ 无关。连续极限 $M \\to \\infty$ 是平凡的；该表达式已经处于其最终的闭式形式，如第一部分所示，仅依赖于标量间距 $r$ 和热德布罗意波长 $\\lambda_T$。对于相互作用系统，情况则不同，$M \\to \\infty$ 将是一个必要且非平凡的极限。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the radial distribution function g(r) for an ideal quantum gas\n    considering Maxwell-Boltzmann, Fermi-Dirac, and Bose-Einstein statistics.\n    \"\"\"\n    \n    # Physical constants in SI units\n    H_PLANCK = 6.62607015e-34      # J s\n    K_BOLTZMANN = 1.380649e-23     # J K^-1\n    U_AMU = 1.66053906660e-27      # kg (atomic mass unit)\n\n    # Define the test cases from the problem statement.\n    # Each case: (statistics, mass in u, temperature in K, list of separations in m)\n    test_cases = [\n        ('MB', 4.002602, 300.0, [0.0, 1.0e-10, 5.0e-10]),\n        ('FD', 3.016, 2.0, [0.0, 5.0e-10, 2.0e-9]),\n        ('BE', 4.002602, 2.0, [0.0, 5.0e-10, 2.0e-9]),\n        ('BE', 4.002602, 0.5, [0.0, 1.0e-9, 1.0e-8])\n    ]\n\n    all_results = []\n\n    for s, m_u, temp, r_values in test_cases:\n        case_results = []\n        \n        # Set zeta based on statistics\n        # zeta = 0 for Maxwell-Boltzmann (distinguishable particles, no exchange)\n        # zeta = -1 for Fermi-Dirac (antisymmetric wavefunction)\n        # zeta = +1 for Bose-Einstein (symmetric wavefunction)\n        if s == 'MB':\n            zeta = 0.0\n        elif s == 'FD':\n            zeta = -1.0\n        elif s == 'BE':\n            zeta = 1.0\n        else:\n            # This case should not be reached with the given test suite\n            raise ValueError(f\"Unknown statistics type: {s}\")\n\n        # For Maxwell-Boltzmann statistics, g(r) is always 1 in the ideal gas limit.\n        if s == 'MB':\n            case_results = [1.0] * len(r_values)\n        else:\n            # For FD and BE, calculate the exchange contribution\n            m_kg = m_u * U_AMU\n            \n            # Calculate the square of the thermal de Broglie wavelength\n            # lambda_T^2 = h^2 / (2 * pi * m * k_B * T)\n            lambda_T_sq = (H_PLANCK**2) / (2 * np.pi * m_kg * K_BOLTZMANN * temp)\n\n            for r in r_values:\n                # The radial distribution function is g(r) = 1 + zeta * exp(-2*pi*r^2 / lambda_T^2)\n                # If lambda_T_sq is zero (T is infinite), the exponential term is zero.\n                if lambda_T_sq <= 0:\n                    exchange_term = 0.0\n                else:\n                    exponent = -2 * np.pi * (r**2) / lambda_T_sq\n                    exchange_term = np.exp(exponent)\n                \n                g_r = 1.0 + zeta * exchange_term\n                case_results.append(g_r)\n        \n        all_results.append(case_results)\n\n    # Format the final output string exactly as specified: [[...],[...],...]\n    output_str = \"[\" + \",\".join([f\"[{','.join(map(str, res))}]\" for res in all_results]) + \"]\"\n    print(output_str)\n\n# Run the solver.\nsolve()\n```", "id": "2798482"}]}