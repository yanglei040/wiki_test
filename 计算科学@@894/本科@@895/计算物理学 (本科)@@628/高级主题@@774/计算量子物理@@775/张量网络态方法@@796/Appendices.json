{"hands_on_practices": [{"introduction": "我们的第一个实践将处理最基本的任务：为一个已知的量子态显式构建其矩阵乘积态（MPS）表示。本练习 [@problem_id:2445466] 使用一个简单的双点费米子系统的基态 $|\\psi_0\\rangle$。通过完成这个推导，你将亲身体验MPS张量的结构，并理解它们如何编码量子态的振幅和纠缠。", "problem": "考虑一个具有开放边界条件，由 $L=2$ 个无自旋费米子格点组成的一维链。对于格点 $j \\in \\{1,2\\}$，其产生算符 $c_{j}^{\\dagger}$ 和湮灭算符 $c_{j}$ 满足正则反对易关系 $\\{c_{i},c_{j}^{\\dagger}\\}=\\delta_{ij}$ 和 $\\{c_{i},c_{j}\\}=0=\\{c_{i}^{\\dagger},c_{j}^{\\dagger}\\}$。哈密顿量为\n$$\nH \\;=\\; -\\,t\\,\\big(c_{1}^{\\dagger}c_{2}+c_{2}^{\\dagger}c_{1}\\big)\\,,\n$$\n其中 $t>0$。在总粒子数为 $N=1$ 的扇区中进行计算。从上述定义出发，不作任何额外假设，完成以下任务：\n\n- 确定在 $N=1$ 扇区中 $H$ 的唯一归一化基态 $|\\psi_{0}\\rangle$，并用占据数基 $\\{|n_{1}n_{2}\\rangle\\}$ (其中 $n_{j}\\in\\{0,1\\}$) 表示。\n- 将 $|\\psi_{0}\\rangle$ 精确地表示为矩阵乘积态 (MPS)，即\n$$\n|\\psi_{0}\\rangle \\;=\\; \\sum_{n_{1},n_{2}\\in\\{0,1\\}} A^{[1]}_{n_{1}}\\,A^{[2]}_{n_{2}}\\,|n_{1}n_{2}\\rangle\\,,\n$$\n其中 $A^{[1]}_{n_{1}}$ 是一个 $1\\times \\chi$ 的行向量，$A^{[2]}_{n_{2}}$ 是一个 $\\chi\\times 1$ 的列向量，$\\chi$ 为某个最小键维数。你的 MPS 必须精确地复现 $|\\psi_{0}\\rangle$ 在占据数基中的振幅。\n- 使用你的 MPS，直接验证两点关联函数 $\\langle \\psi_{0}|\\,c_{1}^{\\dagger}c_{2}\\,|\\psi_{0}\\rangle$ 具有由 $|\\psi_{0}\\rangle$ 所蕴含的正确值，并验证格点 1 的约化密度矩阵 $\\rho_{1}=\\mathrm{Tr}_{2}\\,|\\psi_{0}\\rangle\\langle\\psi_{0}|$ 是正确归一化且半正定的。\n\n答案要求：\n- 计算穿过两体划分 $\\{1\\}|\\{2\\}$ 的冯·诺依曼纠缠熵，其定义为 $S \\equiv -\\mathrm{Tr}\\big(\\rho_{1}\\,\\ln \\rho_{1}\\big)$，并将此作为你的最终答案。\n- 无需四舍五入；请提供一个精确的封闭形式解析表达式。\n- 最终答案不包含任何单位；熵以奈特（自然对数）为单位报告。", "solution": "所提出的问题是量子多体物理学中的一个标准练习，其定义明确、有科学依据且客观。它包含了确定唯一解所需的所有必要信息。因此，我们进行全面的分析。\n\n该系统是一个由 $L=2$ 个无自旋费米子格点组成的一维链。我们被限制在总粒子数为 $N=1$ 的扇区内。该扇区的基矢为 $|10\\rangle$（表示费米子在格点1上，格点2上没有）和 $|01\\rangle$（表示费米子在格点2上，格点1上没有）。因此，该扇区的希尔伯特空间是二维的。\n\n哈密顿量由 $H = -t(c_{1}^{\\dagger}c_{2}+c_{2}^{\\dagger}c_{1})$ 给出，其中 $t>0$。我们在基 $\\{|10\\rangle, |01\\rangle\\}$ 下求出 $H$ 的矩阵表示。我们将 $H$ 作用于每个基矢：\n$$\nH|10\\rangle = -t(c_{1}^{\\dagger}c_{2}+c_{2}^{\\dagger}c_{1})|10\\rangle = -t(c_{1}^{\\dagger}c_{2}|10\\rangle + c_{2}^{\\dagger}c_{1}|10\\rangle)\n$$\n由于在 $|10\\rangle$ 中格点2是空的，所以 $c_{2}|10\\rangle = 0$。算符 $c_{1}$ 湮灭格点1上的一个费米子，得到真空态 $|00\\rangle$，所以 $c_{1}|10\\rangle = |00\\rangle$。接着，$c_{2}^{\\dagger}c_{1}|10\\rangle = c_{2}^{\\dagger}|00\\rangle = |01\\rangle$。因此，$H|10\\rangle = -t|01\\rangle$。\n\n类似地，我们将 $H$ 作用于 $|01\\rangle$：\n$$\nH|01\\rangle = -t(c_{1}^{\\dagger}c_{2}+c_{2}^{\\dagger}c_{1})|01\\rangle = -t(c_{1}^{\\dagger}c_{2}|01\\rangle + c_{2}^{\\dagger}c_{1}|01\\rangle)\n$$\n这里，$c_{1}|01\\rangle = 0$。我们有 $c_{2}|01\\rangle=|00\\rangle$，所以 $c_{1}^{\\dagger}c_{2}|01\\rangle = c_{1}^{\\dagger}|00\\rangle = |10\\rangle$。因此，$H|01\\rangle = -t|10\\rangle$。\n\n在有序基 $(|10\\rangle, |01\\rangle)$ 中，哈密顿矩阵是：\n$$\n\\mathbf{H} = \\begin{pmatrix} \\langle 10|H|10\\rangle & \\langle 10|H|01\\rangle \\\\ \\langle 01|H|10\\rangle & \\langle 01|H|01\\rangle \\end{pmatrix} = \\begin{pmatrix} 0 & -t \\\\ -t & 0 \\end{pmatrix}\n$$\n本征值 $\\lambda$ 可通过 $\\det(\\mathbf{H} - \\lambda I) = \\lambda^2 - t^2 = 0$ 求得，这给出 $\\lambda = \\pm t$。因为 $t>0$，所以基态能量是 $E_0 = -t$。对应的本征矢量 $(a, b)^T$ 满足 $(\\mathbf{H} - E_0 I)\\begin{pmatrix} a \\\\ b \\end{pmatrix} = 0$：\n$$\n\\begin{pmatrix} t & -t \\\\ -t & t \\end{pmatrix} \\begin{pmatrix} a \\\\ b \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix} \\implies ta - tb = 0 \\implies a = b\n$$\n未归一化的基态是 $|10\\rangle + |01\\rangle$。将此态归一化，我们得到唯一的归一化基态 $|\\psi_0\\rangle$：\n$$\n|\\psi_0\\rangle = \\frac{1}{\\sqrt{2}} \\left( |10\\rangle + |01\\rangle \\right)\n$$\n\n接下来，我们将 $|\\psi_0\\rangle$ 表示为矩阵乘积态 (MPS)。在占据数基 $\\{|n_1 n_2\\rangle\\}$ 中，该态为 $|\\psi_0\\rangle = \\sum_{n_1,n_2} C_{n_1 n_2} |n_1 n_2\\rangle$。系数矩阵为：\n$$\nC = \\begin{pmatrix} C_{00} & C_{01} \\\\ C_{10} & C_{11} \\end{pmatrix} = \\begin{pmatrix} 0 & \\frac{1}{\\sqrt{2}} \\\\ \\frac{1}{\\sqrt{2}} & 0 \\end{pmatrix}\n$$\n最小键维数 $\\chi$ 是该矩阵的秩，即 $\\chi=2$。MPS表示由 $C_{n_1 n_2} = A^{[1]}_{n_1} A^{[2]}_{n_2}$ 给出，其中对于每个 $n_1 \\in \\{0, 1\\}$，$A^{[1]}_{n_1}$ 是一个 $1 \\times 2$ 的行向量；对于每个 $n_2 \\in \\{0, 1\\}$，$A^{[2]}_{n_2}$ 是一个 $2 \\times 1$ 的列向量。我们用行向量 $A^{[1]}_{n_1}$ 构成一个 $2 \\times 2$ 矩阵 $M_1$，用列向量 $A^{[2]}_{n_2}$ 构成一个 $2 \\times 2$ 矩阵 $M_2$，使得 $C = M_1 M_2$。一个有效且简单的选择是 $M_1 = C$ 和 $M_2 = I$：\n$$\nA^{[1]}_0 = \\begin{pmatrix} 0 & \\frac{1}{\\sqrt{2}} \\end{pmatrix}, \\quad A^{[1]}_1 = \\begin{pmatrix} \\frac{1}{\\sqrt{2}} & 0 \\end{pmatrix}\n$$\n$$\nA^{[2]}_0 = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}, \\quad A^{[2]}_1 = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}\n$$\n这个选择满足条件并能精确复现系数。\n\n现在我们用这个 MPS 来验证两点关联函数 $\\langle \\psi_0 | c_1^\\dagger c_2 | \\psi_0 \\rangle$。首先，从精确态出发，我们有 $\\langle \\psi_0 | c_1^\\dagger c_2 | \\psi_0 \\rangle = \\frac{1}{2}(\\langle 10| + \\langle 01|)c_1^\\dagger c_2(|10\\rangle + |01\\rangle) = \\frac{1}{2}(\\langle 10| + \\langle 01|)c_1^\\dagger|00\\rangle = \\frac{1}{2}(\\langle 10| + \\langle 01|)|10\\rangle = \\frac{1}{2}$。\n为了用 MPS 计算这个值，我们使用两格点算符 $\\hat{O}_1 \\otimes \\hat{O}_2$ 的公式：\n$$\n\\langle \\psi_0 | \\hat{O}_1 \\otimes \\hat{O}_2 | \\psi_0 \\rangle = \\sum_{n_1,m_1,n_2,m_2} (A^{[1]}_{m_1}A^{[2]}_{m_2})^* (\\hat{O}_1)_{m_1 n_1} (\\hat{O}_2)_{m_2 n_2} (A^{[1]}_{n_1}A^{[2]}_{n_2})\n$$\n该表达式可以重排为：\n$$\n\\langle \\psi_0 | \\hat{O}_1 \\otimes \\hat{O}_2 | \\psi_0 \\rangle = \\sum_{n_2, m_2} (\\hat{O}_2)_{m_2 n_2} (A^{[2]}_{m_2})^\\dagger \\left( \\sum_{n_1, m_1} (\\hat{O}_1)_{m_1 n_1} (A^{[1]}_{m_1})^\\dagger A^{[1]}_{n_1} \\right) A^{[2]}_{n_2}\n$$\n令 $\\tilde{E}_1 = \\sum_{n_1, m_1} \\langle m_1|\\hat{O}_1|n_1\\rangle (A^{[1]}_{m_1})^\\dagger A^{[1]}_{n_1}$。对于 $\\hat{O}_1 = c_1^\\dagger$，唯一的非零矩阵元是 $\\langle 1|c_1^\\dagger|0\\rangle=1$。\n$$\n\\tilde{E}_1 = (A^{[1]}_1)^\\dagger A^{[1]}_0 = \\begin{pmatrix} \\sqrt{2}^{-1} \\\\ 0 \\end{pmatrix} \\begin{pmatrix} 0 & \\sqrt{2}^{-1} \\end{pmatrix} = \\begin{pmatrix} 0 & \\frac{1}{2} \\\\ 0 & 0 \\end{pmatrix}\n$$\n因此期望值为 $\\sum_{n_2, m_2} \\langle m_2|\\hat{O}_2|n_2\\rangle (A^{[2]}_{m_2})^\\dagger \\tilde{E}_1 A^{[2]}_{n_2}$。对于 $\\hat{O}_2=c_2$，唯一的非零矩阵元是 $\\langle 0|c_2|1\\rangle=1$。\n$$\n\\langle \\psi_0 | c_1^\\dagger c_2 | \\psi_0 \\rangle = (A^{[2]}_0)^\\dagger \\tilde{E}_1 A^{[2]}_1 = \\begin{pmatrix} 1 & 0 \\end{pmatrix} \\begin{pmatrix} 0 & \\frac{1}{2} \\\\ 0 & 0 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 0 & \\frac{1}{2} \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix} = \\frac{1}{2}\n$$\n这证实了值的正确性。\n\n最后，我们求约化密度矩阵 $\\rho_1 = \\mathrm{Tr}_2(|\\psi_0\\rangle\\langle\\psi_0|)$。在 MPS 形式中，这与从系数矩阵 $C = U S V^\\dagger$ 的奇异值分解（SVD）导出的施密特分解有关。$\\rho_1$ 的本征值是 $C$ 的奇异值的平方。奇异值是 $C C^\\dagger = \\frac{1}{2}I$ 的本征值的平方根，即 $\\sigma_1^2 = \\sigma_2^2 = \\frac{1}{2}$。所以奇异值为 $s_1 = s_2 = \\frac{1}{\\sqrt{2}}$。\n$\\rho_1$ 的本征值为 $\\lambda_{1,2} = s_{1,2}^2 = \\frac{1}{2}$。$\\rho_1$ 的本征矢量是相应的施密特矢量，即 $U$ 的行向量。由于 $C C^\\dagger$ 与单位矩阵成正比，我们可以选择 $U=I$，得到本征矢量 $|0\\rangle$ 和 $|1\\rangle$。\n$$\n\\rho_1 = \\lambda_1 |0\\rangle\\langle 0| + \\lambda_2 |1\\rangle\\langle 1| = \\frac{1}{2}|0\\rangle\\langle 0| + \\frac{1}{2}|1\\rangle\\langle 1| = \\frac{1}{2} \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}\n$$\n归一性：$\\mathrm{Tr}(\\rho_1) = \\frac{1}{2}+\\frac{1}{2}=1$。该矩阵已正确归一化。\n半正定性：本征值 $\\frac{1}{2}, \\frac{1}{2}$ 均为非负数。该矩阵是半正定的。\n\n冯·诺依曼纠缠熵为 $S = -\\mathrm{Tr}(\\rho_1 \\ln \\rho_1)$。使用 $\\rho_1$ 的本征值 $\\lambda_i$：\n$$\nS = -\\sum_i \\lambda_i \\ln \\lambda_i = -\\left( \\frac{1}{2}\\ln\\left(\\frac{1}{2}\\right) + \\frac{1}{2}\\ln\\left(\\frac{1}{2}\\right) \\right) = - (2) \\left( \\frac{1}{2}\\ln\\left(\\frac{1}{2}\\right) \\right) = -\\ln\\left(\\frac{1}{2}\\right) = \\ln(2)\n$$\n纠缠熵为 $\\ln(2)$ 奈特，这是将系统两体划分为两个二能级系统时可能的最大值，表明了最大纠缠。", "answer": "$$\n\\boxed{\\ln(2)}\n$$", "id": "2445466"}, {"introduction": "在学会表示量子态之后，合乎逻辑的下一步是学习如何表示算符。本练习 [@problem_id:2445471] 演示了如何为一个作用于特定粒子数 $N$ 子空间的全局投影算符 $P_N$，构建一个优雅的矩阵乘积算符（MPO）。这个实践揭示了MPO结构如何能像一个有限状态机一样工作，沿着链追踪系统的属性——这是构建任何哈密顿量MPO的强大概念。", "problem": "考虑一个长度为 $L$ 的开放链，每个格点上的局域希尔伯特空间为 $\\{|0\\rangle, |1\\rangle\\}$，代表无自旋费米子的占据数基矢，其粒子数算符 $n_i$ 满足 $n_i |0\\rangle = 0 |0\\rangle$ 和 $n_i |1\\rangle = 1 |1\\rangle$。全局希尔伯特空间是这 $L$ 个局域空间的张量积。投影到总粒子数为 $N$ 的固定粒子数扇区上的投影算符，其作用是：对于满足 $\\sum_{i=1}^{L} n_i = N$ 的态，它表现为单位算符；对于所有其他态，它将其湮灭。\n\n仅使用矩阵乘积算符（MPO）和占据数基矢的基本定义，通过引入一个编码累计粒子数的虚键指标，为此投影算符构建一个显式的 MPO 表示。你的 MPO 必须由以下几部分指定：\n- 一个由从 $0$ 到 $N$ 的整数标记的态张成的键空间。\n- 强制总粒子数恰好为 $N$ 的左右边界向量。\n- 一个确保计数一致性以及在占据数基矢下对角性的局域格点张量。\n\n然后，使用你的构造和第一性原理（不使用任何已有的计数公式），计算该投影算符的迹，并给出一个用 $L$ 和 $N$ 表示的闭合形式解析表达式。只需提供迹的最终表达式作为你的答案。不需要进行数值计算，也不涉及任何单位。", "solution": "问题陈述具有科学依据、提法恰当、客观，并包含足够的信息以进行严谨求解。因此，我们将着手进行推导。\n\n投影到总粒子数固定为 $N$ 的态子空间上的投影算符 $P_N$ 在占据数基矢 $\\{|s_1 s_2 \\dots s_L\\rangle\\}$ 下是对角的，其中 $s_i \\in \\{0, 1\\}$ 是格点 $i$ 上的占据数。该算符可以写为：\n$$\nP_N = \\sum_{\\{s_i\\}} \\lambda(\\{s_i\\}) |s_1 \\dots s_L\\rangle \\langle s_1 \\dots s_L |\n$$\n其中，如果总粒子数 $\\sum_{i=1}^{L} s_i = N$，则本征值 $\\lambda(\\{s_i\\})$ 为 $1$，否则为 $0$。\n\n我们的任务是为 $P_N$ 构建一个矩阵乘积算符（MPO）表示。在这种表示中，本征值 $\\lambda(\\{s_i\\})$ 表示为矩阵的乘积：\n$$\n\\lambda(\\{s_i\\}) = B_L M^{s_1} M^{s_2} \\cdots M^{s_L} B_R\n$$\n此处，$M^{s_i}$ 是对应于局域物理态 $|s_i\\rangle$ 的矩阵，$B_L$ 是一个左边界行向量，$B_R$ 是一个右边界列向量。矩阵乘积是在一个虚拟的“键”空间上进行的。\n\n该构造是基于一个追踪累计粒子数的虚指标。\n\n$1$. **虚键空间**：\n虚键空间将由一组基矢态 $\\{|\\alpha\\rangle\\}$ 张成，其中指标 $\\alpha$ 代表到目前为止已计数的粒子数。由于总粒子数固定为 $N$，累计计数范围可以从 $0$ 到 $N$。任何累计计数超过 $N$ 的路径都是无效的。因此，虚键空间的维度为 $N+1$，指标 $\\alpha$ 取整数值 $0, 1, \\dots, N$。\n\n$2$. **局域格点张量**：\n格点 $i$ 上的局域张量是一组 $(N+1) \\times (N+1)$ 的矩阵 $\\{M^0, M^1\\}$，对应于物理占据态 $|0\\rangle$ 和 $|1\\rangle$。矩阵元 $[M^s]_{\\alpha, \\beta}$ 将一个输入的虚态 $|\\alpha\\rangle$（代表截至格点 $i-1$ 的计数）连接到一个输出的虚态 $|\\beta\\rangle$（代表截至格点 $i$ 的计数）。\n- 如果格点 $i$ 未被占据（$s_i=0$），粒子数不改变。因此，输出计数 $\\beta$ 必须等于输入计数 $\\alpha$。这定义了矩阵 $M^0$：\n$$\n[M^0]_{\\alpha, \\beta} = \\delta_{\\alpha, \\beta} \\quad \\text{for } \\alpha, \\beta \\in \\{0, 1, \\dots, N\\}\n$$\n这个矩阵是 $(N+1) \\times (N+1)$ 的单位矩阵 $I$。\n- 如果格点 $i$ 被占据（$s_i=1$），粒子数增加一。输出计数 $\\beta$ 必须是 $\\alpha+1$。这定义了矩阵 $M^1$：\n$$\n[M^1]_{\\alpha, \\beta} = \\delta_{\\beta, \\alpha+1} \\quad \\text{for } \\alpha, \\beta \\in \\{0, 1, \\dots, N\\}\n$$\n这个矩阵在第一上副对角线上的元素等于 $1$（即 $[M^1]_{k, k+1} = 1$），其他位置的元素为零。这是一个幂零矩阵，我们将其表示为 $S_u$，即“上移”算符。\n\n$3$. **边界向量**：\n- 左边界向量 $B_L$ 必须强制在第一个格点之前粒子数为 $0$ 的初始条件。它是一个 $1 \\times (N+1)$ 的行向量，用于选择虚态 $|\\alpha=0\\rangle$：\n$$\nB_L = \\begin{pmatrix} 1 & 0 & \\dots & 0 \\end{pmatrix} = e_0^T\n$$\n- 右边界向量 $B_R$ 必须强制在最后一个格点 $L$ 之后总粒子数恰好为 $N$ 的最终条件。它是一个 $(N+1) \\times 1$ 的列向量，用于选择虚态 $|\\alpha=N\\rangle$：\n$$\nB_R = \\begin{pmatrix} 0 \\\\ \\vdots \\\\ 0 \\\\ 1 \\end{pmatrix} = e_N\n$$\n通过这种构造，任何态 $|\\{s_i\\}\\rangle$ 的系数非零（且等于 1）当且仅当算符序列允许一条从虚态 $0$ 到虚态 $N$ 的路径。这种情况恰好在乘积中 $M^1$ 矩阵的数量等于 $N$ 时发生，这对应于 $\\sum s_i = N$。\n\n现在，我们来计算投影算符的迹 $\\text{Tr}(P_N)$。迹是整个物理希尔伯特空间上对角元素之和：\n$$\n\\text{Tr}(P_N) = \\sum_{s_1=0}^1 \\sum_{s_2=0}^1 \\cdots \\sum_{s_L=0}^1 \\langle s_1 \\dots s_L | P_N | s_1 \\dots s_L \\rangle\n$$\n使用对角元素的 MPO 形式：\n$$\n\\text{Tr}(P_N) = \\sum_{\\{s_i\\}} (B_L M^{s_1} M^{s_2} \\cdots M^{s_L} B_R)\n$$\n由于求和的结构，我们可以重排各项：\n$$\n\\text{Tr}(P_N) = B_L \\left(\\sum_{s_1=0}^1 M^{s_1}\\right) \\left(\\sum_{s_2=0}^1 M^{s_2}\\right) \\cdots \\left(\\sum_{s_L=0}^1 M^{s_L}\\right) B_R\n$$\n让我们定义转移矩阵 $T$ 为对局域算符的求和：\n$$\nT = \\sum_{s=0}^1 M^s = M^0 + M^1 = I + S_u\n$$\n那么迹由以下乘积给出：\n$$\n\\text{Tr}(P_N) = B_L T^L B_R = e_0^T (I+S_u)^L e_N\n$$\n该表达式对应于矩阵 $(I+S_u)^L$ 的第 0 行、第 N 列的矩阵元。\n我们使用二项式定理展开 $(I+S_u)^L$：\n$$\n(I+S_u)^L = \\sum_{k=0}^L \\binom{L}{k} I^{L-k} S_u^k = \\sum_{k=0}^L \\binom{L}{k} S_u^k\n$$\n因此，矩阵元为：\n$$\n[ (I+S_u)^L ]_{0,N} = \\sum_{k=0}^L \\binom{L}{k} [S_u^k]_{0,N}\n$$\n让我们分析上移矩阵 $S_u$ 的幂次。$S_u$ 的元素为 $[S_u]_{\\alpha, \\beta} = \\delta_{\\alpha, \\beta-1}$。其 k 次幂 $[S_u^k]_{\\alpha, \\beta}$ 的元素由下式给出：\n$$\n[S_u^k]_{\\alpha, \\beta} = \\delta_{\\alpha, \\beta-k}\n$$\n我们需要元素 $[S_u^k]_{0,N} = \\delta_{0, N-k}$。当 $k=N$ 时，此元素为 $1$，否则为 $0$。\n将此代入求和式中，只有 $k=N$ 这一项保留下来：\n$$\n\\text{Tr}(P_N) = \\sum_{k=0}^L \\binom{L}{k} \\delta_{k,N} = \\binom{L}{N}\n$$\n这个结果在 $0 \\le N \\le L$ 时有效。如果 $N > L$，对于 $k \\in \\{0, \\dots, L\\}$，条件 $k=N$ 永远不会被满足，因此求和为零，这正确地反映了在这种情况下 $\\binom{L}{N}=0$。该迹是从 $L$ 个格点中选择 $N$ 个来放置粒子的方式数，也就是被投影到的子空间的维度。", "answer": "$$\\boxed{\\binom{L}{N}}$$", "id": "2445471"}, {"introduction": "在学习了如何构建MPS和MPO之后，一个至关重要的问题是：需要多少计算资源（即键维数 $\\chi$）？我们最后的实践 [@problem_id:2445417] 将MPS的抽象键维数 $\\chi$ 与量子临界点附近系统的物理性质联系起来。通过应用共形场论的标度律，本练习展示了纠缠如何决定所需的键维数，从而让你深入了解为什么模拟临界系统具有挑战性。", "problem": "考虑一个尺寸为 $L$ 的一维量子格点系统，其具有一个控制参数 $g$。该参数调控系统在 $g = g_c$ 处跨越一个连续量子相变。在一个时间演化块消减 (Time-Evolving Block Decimation, TEBD) 模拟中，量子态被表示为一个矩阵乘积态 (Matrix Product State, MPS)，其键维数 $\\chi$ 通过边界 $S \\le \\log \\chi$ 控制着任意单个切割上的最大冯·诺依曼纠缠熵，其中对数是自然对数。在临界点附近，假设基态关联长度遵循标度律 $\\xi(g) = |g - g_c|^{-\\nu}$，并且单个切割上的纠缠熵满足共形场论标度关系 $S \\approx \\dfrac{c}{6} \\log \\xi_{\\mathrm{eff}}$，其中 $c$ 是中心荷，且 $\\xi_{\\mathrm{eff}} = \\min\\{L, \\max\\{1, \\xi(g)\\}\\}$。TEBD 算法采用一个截断上限 $\\chi_{\\mathrm{cap}}$，以防止 $\\chi$ 超过预设的最大值。将预测可达键维数 $\\chi^\\star$ 定义为 $\\chi_{\\mathrm{cap}}$ 与满足 $\\log \\chi \\ge \\dfrac{c}{6} \\log \\xi_{\\mathrm{eff}}$ 的最小整数 $\\chi$ 之间的最小值。\n\n编写一个完整、可运行的程序，对每个参数集，根据上述定义计算 $\\chi^\\star$。程序没有输入；您的程序必须使用以下有序的参数集测试套件，每个参数集指定为 $(L, g, g_c, \\nu, c, \\chi_{\\mathrm{cap}})$：\n- $\\left(128,\\, 0.9,\\, 1.0,\\, 1.0,\\, 1.0,\\, 256\\right)$\n- $\\left(128,\\, 1.0,\\, 1.0,\\, 1.0,\\, 1.0,\\, 256\\right)$\n- $\\left(64,\\, 3.0,\\, 1.0,\\, 1.0,\\, 1.0,\\, 256\\right)$\n- $\\left(1024,\\, 0.95,\\, 1.0,\\, 1.0,\\, 0.5,\\, 16\\right)$\n- $\\left(262144,\\, 1.0,\\, 1.0,\\, 1.0,\\, 1.0,\\, 4\\right)$\n- $\\left(8192,\\, 1.0001,\\, 1.0,\\, 0.5,\\, 1.0,\\, 32\\right)$\n\n您的程序应生成单行输出，其中包含与测试套件顺序相同的、用方括号括起来的逗号分隔结果列表，例如 $[x_1,x_2,\\dots,x_6]$，其中每个 $x_i$ 是第 $i$ 个测试用例的 $\\chi^\\star$ 的整数值。", "solution": "问题陈述已经过评估并被认定为有效。它具有科学依据，定义明确且客观。它基于计算物理学和量子临界现象理论的既定原理，提出了一个具体的计算任务，特别是关于使用矩阵乘积态 (MPS) 和时间演化块消减 (TEBD) 算法模拟一维量子系统。\n\n问题的核心是估算精确表示临界点附近量子系统基态所需的计算资源，具体来说是键维数 $\\chi$。解决方案通过系统地应用所提供的物理标度律来推进。\n\n首先，我们分析系统相对于其量子临界点 $g=g_c$ 的状态。对临界的接近程度由关联长度 $\\xi(g)$ 来量化。根据临界现象理论，对于由参数 $g$ 调控的系统，当其接近临界点 $g_c$ 时，关联长度会以一个普适的临界指数 $\\nu$ 发散。所提供的公式是：\n$$\n\\xi(g) = |g - g_c|^{-\\nu}\n$$\n当 $g=g_c$ 时，$\\xi(g)$ 变为无穷大，这在热力学极限下标志着标度不变性。\n\n然而，任何数值模拟都是在尺寸为 $L$ 的有限格点上进行的。在有限系统中，关联长度不能超过系统尺寸。此外，在远离临界区的有能隙相深处，关联长度可能小于晶格间距（我们将其取为单位1）。为了考虑这些物理现实，定义了有效关联长度 $\\xi_{\\mathrm{eff}}$。它是系统尺寸 $L$ 和裸关联长度 $\\xi(g)$ 中的较小者，但永远不小于1：\n$$\n\\xi_{\\mathrm{eff}} = \\min\\{L, \\max\\{1, \\xi(g)\\}\\}\n$$\n在临界点 ($g=g_c$) 处，$\\xi(g) \\to \\infty$，因此 $\\xi_{\\mathrm{eff}}$ 正确地饱和到系统尺寸，即 $\\xi_{\\mathrm{eff}}=L$。\n\n临界一维量子系统基态中一个子区域的纠缠熵 $S$ 不是任意的。共形场论 (Conformal Field Theory, CFT) 预测了其与有效关联长度之间存在特定的对数标度关系。链的单次二分所产生的纠缠熵公式为：\n$$\nS \\approx \\dfrac{c}{6} \\log \\xi_{\\mathrm{eff}}\n$$\n其中 $c$ 是中心荷，是临界理论的一个普适特征，而 $\\log$ 表示自然对数。\n\n矩阵乘积态 (Matrix Product State, MPS) 是对表现出有限纠缠的量子态的一种有效表示。一个键维数为 $\\chi$ 的 MPS 在任何切割上能捕获的最大纠缠熵由以下边界限制：\n$$\nS \\le \\log \\chi\n$$\n为了精确表示物理态，MPS 的键维数必须足够大以容纳该态的纠缠熵。结合 CFT 对 $S$ 的预测和 MPS 的边界，我们建立了对 $\\chi$ 的最低要求：\n$$\n\\log \\chi \\ge S \\approx \\dfrac{c}{6} \\log \\xi_{\\mathrm{eff}}\n$$\n这个不等式可以重写为 $\\log \\chi \\ge \\log\\left( (\\xi_{\\mathrm{eff}})^{c/6} \\right)$，这意味着 $\\chi \\ge (\\xi_{\\mathrm{eff}})^{c/6}$。设这个所需的值为 $\\chi_{\\mathrm{bound}} = (\\xi_{\\mathrm{eff}})^{c/6}$。由于键维数必须是整数，满足此条件的最小整数 $\\chi$（我们记为 $\\chi_{\\mathrm{req}}$）可通过对此值取上整（ceiling）得到：\n$$\n\\chi_{\\mathrm{req}} = \\lceil (\\xi_{\\mathrm{eff}})^{c/6} \\rceil\n$$\n\n最后，由于计算内存和时间的限制，实际的 TEBD 模拟在一个预定义的最高键维数 $\\chi_{\\mathrm{cap}}$ 下运行。模拟中实际达到的键维数 $\\chi^\\star$ 只有在不超过此上限时才会是所需的维度 $\\chi_{\\mathrm{req}}$。否则，它将受限于 $\\chi_{\\mathrm{cap}}$。这表示为两者中的较小值：\n$$\n\\chi^\\star = \\min\\{\\chi_{\\mathrm{cap}}, \\chi_{\\mathrm{req}}\\}\n$$\n\n因此，为每个参数集 $(L, g, g_c, \\nu, c, \\chi_{\\mathrm{cap}})$ 计算 $\\chi^\\star$ 的算法如下：\n1. 计算 $\\xi(g) = |g - g_c|^{-\\nu}$。如果 $g=g_c$，则将 $\\xi(g)$ 视为无穷大。\n2. 计算有效关联长度 $\\xi_{\\mathrm{eff}} = \\min\\{L, \\max\\{1, \\xi(g)\\}\\}$。\n3. 确定所需的键维数 $\\chi_{\\mathrm{req}} = \\lceil (\\xi_{\\mathrm{eff}})^{c/6} \\rceil$。\n4. 应用截断上限以找到可达键维数 $\\chi^\\star = \\min\\{\\chi_{\\mathrm{cap}}, \\chi_{\\mathrm{req}}\\}$。\n将此过程应用于每个测试用例以生成最终结果。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the predicted achieved bond dimension for a series of test cases\n    based on scaling laws in 1D quantum critical systems.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (L, g, g_c, nu, c, chi_cap)\n    test_cases = [\n        (128, 0.9, 1.0, 1.0, 1.0, 256),\n        (128, 1.0, 1.0, 1.0, 1.0, 256),\n        (64, 3.0, 1.0, 1.0, 1.0, 256),\n        (1024, 0.95, 1.0, 1.0, 0.5, 16),\n        (262144, 1.0, 1.0, 1.0, 1.0, 4),\n        (8192, 1.0001, 1.0, 0.5, 1.0, 32),\n    ]\n\n    results = []\n    for case in test_cases:\n        L, g, g_c, nu, c, chi_cap = case\n\n        # Step 1: Calculate the bare correlation length xi(g).\n        # Handle the critical point g = g_c where xi diverges.\n        delta_g = np.abs(g - g_c)\n        if delta_g == 0:\n            xi_g = np.inf\n        else:\n            xi_g = delta_g**(-nu)\n\n        # Step 2: Calculate the effective correlation length xi_eff.\n        # This accounts for finite-size effects (min{L, ...}) and\n        # ensures the length scale is at least 1 (max{1, ...}).\n        xi_eff = np.minimum(L, np.maximum(1, xi_g))\n\n        # Step 3: Determine the required bond dimension chi_req.\n        # This is the smallest integer chi satisfying log(chi) >= c/6 * log(xi_eff).\n        # This is equivalent to chi >= xi_eff^(c/6).\n        chi_bound = xi_eff**(c / 6.0)\n        # The ceiling function gives the smallest integer >= chi_bound.\n        chi_req = int(np.ceil(chi_bound))\n\n        # Step 4: Apply the truncation cap chi_cap to find the achieved bond dimension chi_star.\n        chi_star = int(np.minimum(chi_cap, chi_req))\n\n        results.append(chi_star)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2445417"}]}