{"hands_on_practices": [{"introduction": "统计力学的一个核心优势在于它能够将微观世界的涨落与宏观的热力学性质联系起来。在恒定粒子数、压强和温度（NPT）系综中，体积和能量的涨落并非相互独立；它们的互相关直接关系到可测量的材料特性，例如热膨胀系数和压缩性。本练习将引导您从第一性原理出发，推导这一重要的涨落-响应关系，从而巩固您对NPT系综及其实际物理意义的理解。[@problem_id:2375285]", "problem": "考虑一个等温等压系综，也称为粒子数、压力和温度恒定 (NPT) 系综。恒压器用于维持压力，微观态的平衡概率密度与负的焓乘以逆温度的指数成正比。设系统在温度 $T$（单位：开尔文）和外部压力 $P$（单位：帕斯卡）下包含固定数量的粒子 $N$。用 $E$ 表示内能（单位：焦耳），用 $V$ 表示体积（单位：立方米），用 $H = E + P V$ 表示焓（单位：焦耳）。玻尔兹曼常数为 $k_{\\mathrm{B}} = 1.380649\\times 10^{-23}\\,\\mathrm{J/K}$。\n\n从第一性原理出发，使用与 $\\exp(-\\beta H)$ 成正比的等温等压概率密度，其中 $\\beta = 1/(k_{\\mathrm{B}} T)$，并结合以下基础热力学定义：\n- 等温压缩率 $\\kappa_T$ 定义为 $\\kappa_T = -\\dfrac{1}{\\langle V \\rangle}\\left(\\dfrac{\\partial \\langle V \\rangle}{\\partial P}\\right)_T$。\n- 体积热膨胀系数 $\\alpha$ 定义为 $\\alpha = \\dfrac{1}{\\langle V \\rangle}\\left(\\dfrac{\\partial \\langle V \\rangle}{\\partial T}\\right)_P$。\n\n您的任务是：\n1) 根据上述定义和等温等压系综的概率密度，推导出一个表达式，将平衡互相关 $\\langle \\delta V\\, \\delta E \\rangle$ 与在 $N$、$P$ 和 $T$ 恒定下的热力学响应函数联系起来。将您的最终结果表示为一个关于 $k_{\\mathrm{B}}$、$T$、$P$、$\\langle V \\rangle$、$\\alpha$ 和 $\\kappa_T$ 的显式代数公式。此处，$\\delta X = X - \\langle X \\rangle$，尖括号表示系综平均。\n2) 实现一个程序，使用您推导的公式为以下测试套件计算 $\\langle \\delta V\\, \\delta E \\rangle$。对于每个案例，请使用提供的参数和 $k_{\\mathrm{B}} = 1.380649\\times 10^{-23}\\,\\mathrm{J/K}$。将给定的 $\\langle V \\rangle$ 视为输入到您公式中的系综平均体积。所需的数值答案必须是单位为焦耳–立方米（即 $\\mathrm{J}\\cdot\\mathrm{m}^3$）的实数，并应以浮点值的形式输出。\n\n测试套件（每个元组为 $(\\langle V \\rangle\\,\\mathrm{[m^3]}, T\\,\\mathrm{[K]}, P\\,\\mathrm{[Pa]}, \\alpha\\,\\mathrm{[K^{-1}]}, \\kappa_T\\,\\mathrm{[Pa^{-1}]})$）：\n- 案例A: $(1.0\\times 10^{-24}, 300, 1.0\\times 10^{5}, 1.0\\times 10^{-3}, 4.5\\times 10^{-10})$。\n- 案例B: $(5.0\\times 10^{-25}, 300, 0, 2.0\\times 10^{-4}, 1.0\\times 10^{-9})$。\n- 案例C: $(2.0\\times 10^{-24}, 1000, 5.0\\times 10^{6}, 0, 1.0\\times 10^{-11})$。\n- 案例D: $(8.0\\times 10^{-25}, 150, 2.0\\times 10^{5}, 3.0\\times 10^{-3}, 2.0\\times 10^{-10})$。\n\n您的程序应生成单行输出，其中包含一个逗号分隔的列表，用方括号括起来（例如，\"[resultA,resultB,resultC,resultD]\"）。每个条目必须是按 A、B、C、D 顺序计算的相应案例的 $\\langle \\delta V\\, \\delta E \\rangle$ 值，以 $\\mathrm{J}\\cdot\\mathrm{m}^3$ 为单位，表示为浮点数。\n\n请确保您的推导过程具有科学真实性，仅基于系综概率密度和上述热力学定义。未经推导，不得假定任何其他专门的涨落公式。程序必须完整且可运行，并且不得读取任何输入。输出必须严格遵循上述格式。", "solution": "该问题已经过验证，被认为是有效的。它具有科学依据，问题陈述清晰，并且包含了获得唯一解的充分信息。所提供的数据在物理上是一致的。现在将按照要求从第一性原理开始推导。\n\n系统处于等温等压 (NPT) 系综中。对于内能为 $E_i$、体积为 $V_i$ 的微观态 $i$，其概率由概率密度函数给出，该函数与 $\\exp(-\\beta H_i)$ 成正比，其中 $H_i = E_i + P V_i$ 是焓，$P$ 是恒定的外部压力，$\\beta = 1/(k_{\\mathrm{B}} T)$，$T$ 是恒定温度，$k_{\\mathrm{B}}$ 是玻尔兹曼常数。\n\n可观测量 $A$ 的系综平均由下式给出：\n$$\n\\langle A \\rangle = \\frac{\\sum_i A_i e^{-\\beta H_i}}{\\sum_i e^{-\\beta H_i}}\n$$\n其中，求和遍历系统的所有可能微观态。令 $Z_{NPT} = \\sum_i e^{-\\beta H_i}$ 为 NPT 系综的配分函数。\n\n目标是推导体积和内能涨落的互相关关系表达式 $\\langle \\delta V \\delta E \\rangle$，其中 $\\delta X = X - \\langle X \\rangle$。我们首先将热力学响应函数与涨落联系起来。响应函数是根据平均体积 $\\langle V \\rangle$ 对 $T$ 和 $P$ 的导数来定义的。\n\n首先，考虑在恒定压力 $P$ 下，$\\langle V \\rangle$ 对温度 $T$ 的导数。我们必须考虑 $\\beta$ 对 $T$ 的依赖性。使用链式法则，$\\frac{\\partial}{\\partial T} = \\frac{\\partial \\beta}{\\partial T} \\frac{\\partial}{\\partial \\beta} = -\\frac{1}{k_{\\mathrm{B}} T^2} \\frac{\\partial}{\\partial \\beta}$。对 $\\langle V \\rangle$ 的表达式应用商法则求导：\n$$\n\\left(\\frac{\\partial \\langle V \\rangle}{\\partial T}\\right)_P = \\frac{\\partial}{\\partial T} \\left( \\frac{\\sum_i V_i e^{-\\beta H_i}}{Z_{NPT}} \\right) = \\frac{1}{Z_{NPT}} \\sum_i V_i \\left( \\frac{\\partial e^{-\\beta H_i}}{\\partial T} \\right) - \\frac{\\sum_i V_i e^{-\\beta H_i}}{Z_{NPT}^2} \\sum_j \\left( \\frac{\\partial e^{-\\beta H_j}}{\\partial T} \\right)\n$$\n指数项的导数为：\n$$\n\\frac{\\partial e^{-\\beta H_i}}{\\partial T} = e^{-\\beta H_i} (-H_i) \\frac{\\partial \\beta}{\\partial T} = e^{-\\beta H_i} (-H_i) \\left( -\\frac{1}{k_{\\mathrm{B}} T^2} \\right) = \\frac{H_i}{k_{\\mathrm{B}} T^2} e^{-\\beta H_i}\n$$\n将此代回 $\\langle V \\rangle$ 的导数表达式：\n$$\n\\left(\\frac{\\partial \\langle V \\rangle}{\\partial T}\\right)_P = \\frac{1}{Z_{NPT}} \\sum_i V_i \\left( \\frac{H_i}{k_{\\mathrm{B}} T^2} e^{-\\beta H_i} \\right) - \\frac{\\langle V \\rangle}{Z_{NPT}} \\sum_j \\left( \\frac{H_j}{k_{\\mathrm{B}} T^2} e^{-\\beta H_j} \\right)\n$$\n提出公因子 $\\frac{1}{k_{\\mathrm{B}} T^2}$：\n$$\n\\left(\\frac{\\partial \\langle V \\rangle}{\\partial T}\\right)_P = \\frac{1}{k_{\\mathrm{B}} T^2} \\left( \\frac{\\sum_i V_i H_i e^{-\\beta H_i}}{Z_{NPT}} - \\langle V \\rangle \\frac{\\sum_j H_j e^{-\\beta H_j}}{Z_{NPT}} \\right) = \\frac{1}{k_{\\mathrm{B}} T^2} \\left( \\langle VH \\rangle - \\langle V \\rangle \\langle H \\rangle \\right)\n$$\n这给出了体积和焓的涨落：\n$$\n\\langle \\delta V \\delta H \\rangle = \\langle (V - \\langle V \\rangle)(H - \\langle H \\rangle) \\rangle = \\langle VH \\rangle - \\langle V \\rangle \\langle H \\rangle = k_{\\mathrm{B}} T^2 \\left(\\frac{\\partial \\langle V \\rangle}{\\partial T}\\right)_P\n$$\n利用体积热膨胀系数的定义 $\\alpha = \\frac{1}{\\langle V \\rangle}\\left(\\frac{\\partial \\langle V \\rangle}{\\partial T}\\right)_P$，我们得到：\n$$\n\\langle \\delta V \\delta H \\rangle = k_{\\mathrm{B}} T^2 \\langle V \\rangle \\alpha\n$$\n\n接下来，我们考虑在恒定温度 $T$ 下，$\\langle V \\rangle$ 对压力 $P$ 的导数。指数项对 $P$ 的导数为：\n$$\n\\frac{\\partial e^{-\\beta H_i}}{\\partial P} = \\frac{\\partial e^{-\\beta (E_i + P V_i)}}{\\partial P} = e^{-\\beta H_i} (-\\beta V_i)\n$$\n遵循与温度导数类似的过程：\n$$\n\\left(\\frac{\\partial \\langle V \\rangle}{\\partial P}\\right)_T = \\frac{1}{Z_{NPT}} \\sum_i V_i (-\\beta V_i e^{-\\beta H_i}) - \\frac{\\langle V \\rangle}{Z_{NPT}} \\sum_j (-\\beta V_j e^{-\\beta H_j})\n$$\n提出公因子 $-\\beta$：\n$$\n\\left(\\frac{\\partial \\langle V \\rangle}{\\partial P}\\right)_T = -\\beta \\left( \\frac{\\sum_i V_i^2 e^{-\\beta H_i}}{Z_{NPT}} - \\langle V \\rangle \\frac{\\sum_j V_j e^{-\\beta H_j}}{Z_{NPT}} \\right) = -\\beta (\\langle V^2 \\rangle - \\langle V \\rangle^2) = -\\beta \\langle (\\delta V)^2 \\rangle\n$$\n这给出了体积的方差：\n$$\n\\langle (\\delta V)^2 \\rangle = -\\frac{1}{\\beta} \\left(\\frac{\\partial \\langle V \\rangle}{\\partial P}\\right)_T = -k_{\\mathrm{B}} T \\left(\\frac{\\partial \\langle V \\rangle}{\\partial P}\\right)_T\n$$\n利用等温压缩率的定义 $\\kappa_T = -\\frac{1}{\\langle V \\rangle}\\left(\\frac{\\partial \\langle V \\rangle}{\\partial P}\\right)_T$，我们得到：\n$$\n\\langle (\\delta V)^2 \\rangle = k_{\\mathrm{B}} T \\langle V \\rangle \\kappa_T\n$$\n\n现在，我们将所求的涨落 $\\langle \\delta V \\delta E \\rangle$ 与上述推导出的量联系起来。焓的涨落是 $\\delta H = \\delta(E + PV)$。由于 $P$ 是系综的恒定参数，它不会涨落。因此：\n$$\n\\delta H = \\delta E + P \\delta V\n$$\n我们现在可以将焓-体积互相关写为：\n$$\n\\langle \\delta V \\delta H \\rangle = \\langle \\delta V (\\delta E + P \\delta V) \\rangle = \\langle \\delta V \\delta E \\rangle + P \\langle (\\delta V)^2 \\rangle\n$$\n整理以求解 $\\langle \\delta V \\delta E \\rangle$：\n$$\n\\langle \\delta V \\delta E \\rangle = \\langle \\delta V \\delta H \\rangle - P \\langle (\\delta V)^2 \\rangle\n$$\n最后，我们代入从热力学响应函数推导出的 $\\langle \\delta V \\delta H \\rangle$ 和 $\\langle (\\delta V)^2 \\rangle$ 的表达式：\n$$\n\\langle \\delta V \\delta E \\rangle = (k_{\\mathrm{B}} T^2 \\langle V \\rangle \\alpha) - P (k_{\\mathrm{B}} T \\langle V \\rangle \\kappa_T)\n$$\n提出公因子 $k_{\\mathrm{B}} T \\langle V \\rangle$，得到最终表达式：\n$$\n\\langle \\delta V \\delta E \\rangle = k_{\\mathrm{B}} T \\langle V \\rangle (T \\alpha - P \\kappa_T)\n$$\n该公式以指定的热力学量表示了体积和内能涨落之间的平衡互相关。至此，推导完成。下一步是为给定的测试用例实现此公式。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n# from scipy import ...\n\ndef solve():\n    \"\"\"\n    Computes the cross-correlation of volume and energy fluctuations <δV δE>\n    in the NPT ensemble for a given set of test cases.\n    \"\"\"\n    \n    # Define the Boltzmann constant in J/K.\n    k_B = 1.380649e-23\n    \n    # Define the test cases from the problem statement.\n    # Each tuple contains:\n    # (<V> [m^3], T [K], P [Pa], alpha [K^-1], kappa_T [Pa^-1])\n    test_cases = [\n        (1.0e-24, 300, 1.0e5, 1.0e-3, 4.5e-10),  # Case A\n        (5.0e-25, 300, 0, 2.0e-4, 1.0e-9),       # Case B\n        (2.0e-24, 1000, 5.0e6, 0, 1.0e-11),      # Case C\n        (8.0e-25, 150, 2.0e5, 3.0e-3, 2.0e-10),  # Case D\n    ]\n    \n    results = []\n    \n    # The derived formula is: <δV δE> = k_B * T * <V> * (T * alpha - P * kappa_T)\n    for case in test_cases:\n        V_avg, T, P, alpha, kappa_T = case\n        \n        # Calculate the dimensionless term in parenthesis\n        dimless_term = T * alpha - P * kappa_T\n        \n        # Calculate the fluctuation correlation in J·m^3\n        correlation = k_B * T * V_avg * dimless_term\n        \n        results.append(correlation)\n        \n    # Final print statement in the exact required format.\n    # The format is a comma-separated list of floating-point numbers in brackets.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2375285"}, {"introduction": "为了维持恒定压强，恒压器（barostat）会对模拟系统做功，尤其当系统因化学反应等过程导致其固有体积发生变化时。本练习侧重于将热力学功的基本定义 $W = \\int P dV$ 应用于一个由理想恒压器控制的动态系统。通过在不同情景下实施这一计算，您将在分析涉及反应或外部驱动的模拟中压强控制的能量学后果方面，获得宝贵的实践技能。[@problem_id:2375300]", "problem": "给定一个理想、等温、均匀的系统，其体积与一个外部恒压器耦合，该恒压器始终强制系统保持力学平衡。该系统发生一个单步化学反应，其反应进度函数为 $\\xi(t)$，该反应会改变总摩尔数 $n(t)$。温度 $T$ 恒定，状态方程为理想气体定律。外部压力是一个给定的函数 $P_{\\text{ext}}(t)$，且恒压器在任何时候都施加 $P_{\\text{int}}(t)=P_{\\text{ext}}(t)$。因此，瞬时体积为 $V(t) = \\dfrac{n(t) R T}{P_{\\text{ext}}(t)}$，其中 $R$ 是理想气体常数。在时间区间 $[0,\\tau]$ 内，恒压器对系统所做的功为\n$$\nW \\equiv \\int_{0}^{\\tau} P_{\\text{ext}}(t)\\, dV(t).\n$$\n你的任务是编写一个完整的程序，根据第一性原理为下列每个测试用例计算 $W$。使用 $R = 8.314462618\\,\\text{J}\\,\\text{mol}^{-1}\\,\\text{K}^{-1}$。最终答案以焦耳（J）为单位表示，并将每个结果四舍五入到六位小数。\n\n应使用的定义：\n- 总摩尔数：$n(t) = n_i + \\Delta \\nu \\,\\xi(t)$，其中 $\\Delta \\nu$ 是每单位反应进度的总摩尔数净变化量，$n_i$ 是 $t=0$ 时的初始摩尔数，而 $\\xi(t)$ 是反应进度，满足 $\\xi(0)=0$ 和 $\\xi(\\tau)=\\xi_f$。\n- 力学平衡与理想气体：$P_{\\text{int}}(t) = P_{\\text{ext}}(t)$ 且 $V(t) = \\dfrac{n(t) R T}{P_{\\text{ext}}(t)}$。\n- 恒压器做功：$W = \\int_{0}^{\\tau} P_{\\text{ext}}(t)\\, dV(t)$。\n\n测试套件（四个独立的案例）：\n\n案例1（恒定压力，摩尔数增加）：\n- $T = 300\\,\\text{K}$，$n_i = 1.0\\,\\text{mol}$，$\\Delta \\nu = +1$，$\\tau = 10\\,\\text{s}$。\n- 对于所有 $t \\in [0,\\tau]$，$P_{\\text{ext}}(t) = 1.0\\times 10^{5}\\,\\text{Pa}$。\n- $\\xi(t) = \\xi_f \\left(\\dfrac{t}{\\tau}\\right)^2$，其中 $\\xi_f = 0.5\\,\\text{mol}$。\n\n案例2（压力随时间变化，摩尔数增加）：\n- $T = 300\\,\\text{K}$，$n_i = 1.2\\,\\text{mol}$，$\\Delta \\nu = +1$，$\\tau = 5\\,\\text{s}$。\n- $P_{\\text{ext}}(t) = P_0 + A \\sin\\!\\left(2\\pi \\dfrac{t}{\\tau}\\right)$，其中 $P_0 = 1.0\\times 10^{5}\\,\\text{Pa}$ 且 $A = 2.0\\times 10^{4}\\,\\text{Pa}$。\n- $\\xi(t) = \\xi_f \\dfrac{t}{\\tau}$，其中 $\\xi_f = 0.6\\,\\text{mol}$。\n\n案例3（恒定压力，摩尔数减少）：\n- $T = 350\\,\\text{K}$，$n_i = 2.0\\,\\text{mol}$，$\\Delta \\nu = -1$，$\\tau = 8\\,\\text{s}$。\n- 对于所有 $t \\in [0,\\tau]$，$P_{\\text{ext}}(t) = 1.5\\times 10^{5}\\,\\text{Pa}$。\n- $\\xi(t) = \\xi_f \\left(3 s^2 - 2 s^3\\right)$，其中 $s = \\dfrac{t}{\\tau}$ 且 $\\xi_f = 0.8\\,\\text{mol}$。\n\n案例4（周期性压力循环，无反应）：\n- $T = 300\\,\\text{K}$，$n_i = 1.0\\,\\text{mol}$，$\\Delta \\nu = 0$，$\\tau = 4\\,\\text{s}$。\n- $P_{\\text{ext}}(t) = P_0 + A \\cos\\!\\left(4\\pi \\dfrac{t}{\\tau}\\right)$，其中 $P_0 = 1.2\\times 10^{5}\\,\\text{Pa}$ 且 $A = 1.0\\times 10^{4}\\,\\text{Pa}$。\n- 对于所有 $t$，$\\xi(t) \\equiv 0$（即 $\\xi_f = 0$）。\n\n要求的最终输出格式：\n- 你的程序应产生单行输出，其中包含按案例1到4顺序排列、用方括号括起来的、以逗号分隔的结果列表：例如，`\"[w_1,w_2,w_3,w_4]\"`，其中每个 $w_i$ 是一个以焦耳为单位、四舍五入到六位小数的浮点数。\n\n三角函数中出现的角度以弧度为单位。时间以秒为单位。压力以帕斯卡为单位。温度以开尔文为单位。摩尔数以 mol 为单位。功必须以焦耳为单位报告。程序必须是自包含的，并且不得读取任何输入。", "solution": "问题陈述经评估有效。它以经典热力学为科学基础，问题设定良好，提供了所有必要信息，并且表述客观。该问题要求计算一个与恒压器耦合的理想气体系统中，因化学反应导致摩尔数变化时所做的功。我们将进行严格的推导和计算。\n\n在时间区间 $[0, \\tau]$ 内，系统对环境所做的功 $W$ 定义为积分 $W \\equiv \\int_{0}^{\\tau} P_{\\text{ext}}(t)\\, dV(t)$。问题陈述指出，系统与外部恒压器处于力学平衡状态，因此内部压力 $P_{\\text{int}}(t)$ 在任何时候都等于外部压力 $P_{\\text{ext}}(t)$。系统遵循理想气体定律，因此其体积 $V(t)$ 由 $V(t) = \\dfrac{n(t) R T}{P_{\\text{ext}}(t)}$ 给出，其中 $T$ 是恒定温度，$R$ 是理想气体常数，$n(t)$ 是在时间 $t$ 的总摩尔数。摩尔数因化学反应而改变，由反应进度 $\\xi(t)$ 描述，即 $n(t) = n_i + \\Delta \\nu \\,\\xi(t)$。此处，$n_i$ 是 $t=0$ 时的初始摩尔数，$\\Delta \\nu$ 是摩尔数的净化学计量变化。\n\n为计算功，我们必须首先用给定的时间函数 $n(t)$ 和 $P_{\\text{ext}}(t)$ 来表示体积微分元 $dV(t)$。使用微分的链式法则，我们将 $dV(t)$ 写为 $\\frac{dV}{dt}dt$。对 $V(t)$ 的表达式应用商法则：\n$$\n\\frac{dV}{dt} = \\frac{d}{dt}\\left(\\frac{n(t) R T}{P_{\\text{ext}}(t)}\\right) = RT \\left( \\frac{\\frac{dn}{dt} P_{\\text{ext}}(t) - n(t) \\frac{dP_{\\text{ext}}}{dt}}{[P_{\\text{ext}}(t)]^2} \\right)\n$$\n功积分的被积函数是 $P_{\\text{ext}}(t) \\frac{dV}{dt}$：\n$$\nP_{\\text{ext}}(t) \\frac{dV}{dt} = P_{\\text{ext}}(t) \\left[ RT \\left( \\frac{\\frac{dn}{dt} P_{\\text{ext}}(t) - n(t) \\frac{dP_{\\text{ext}}}{dt}}{[P_{\\text{ext}}(t)]^2} \\right) \\right] = RT \\left( \\frac{dn}{dt} - \\frac{n(t)}{P_{\\text{ext}}(t)}\\frac{dP_{\\text{ext}}}{dt} \\right)\n$$\n总功 $W$ 是此表达式从 $t=0$ 到 $t=\\tau$ 的积分：\n$$\nW = \\int_{0}^{\\tau} RT \\left( \\frac{dn}{dt} - \\frac{n(t)}{P_{\\text{ext}}(t)}\\frac{dP_{\\text{ext}}}{dt} \\right) dt\n$$\n该积分可以分为两项：\n$$\nW = RT \\int_{0}^{\\tau} \\frac{dn}{dt} dt - RT \\int_{0}^{\\tau} \\frac{n(t)}{P_{\\text{ext}}(t)}\\frac{dP_{\\text{ext}}}{dt} dt\n$$\n第一项代表与摩尔数变化相关的功。它是一个恰当积分：\n$$\nRT \\int_{0}^{\\tau} \\frac{dn}{dt} dt = RT [n(t)]_{0}^{\\tau} = RT (n(\\tau) - n(0))\n$$\n给定 $n(t) = n_i + \\Delta \\nu \\xi(t)$，且 $\\xi(0)=0$ 和 $\\xi(\\tau)=\\xi_f$，我们有 $n(0) = n_i$ 和 $n(\\tau) = n_i + \\Delta\\nu\\xi_f$。第一项简化为 $RT \\Delta\\nu\\xi_f$。\n\n第二项代表与外部压力变化相关的功。因此，功的一般表达式为：\n$$\nW = RT\\Delta\\nu\\xi_f - RT \\int_{0}^{\\tau} \\frac{n_i + \\Delta\\nu\\xi(t)}{P_{\\text{ext}}(t)} \\frac{dP_{\\text{ext}}}{dt} dt\n$$\n我们现在将此公式应用于每个具体案例，使用 $R = 8.314462618\\,\\text{J}\\,\\text{mol}^{-1}\\,\\text{K}^{-1}$。\n\n案例1：\n压力恒定，$P_{\\text{ext}}(t) = 1.0\\times 10^{5}\\,\\text{Pa}$。因此，$\\frac{dP_{\\text{ext}}}{dt} = 0$。功表达式中的积分项消失。\n$W_1 = RT\\Delta\\nu\\xi_f$。\n给定 $T = 300\\,\\text{K}$，$\\Delta\\nu = +1$，$\\xi_f = 0.5\\,\\text{mol}$。\n$W_1 = (8.314462618\\,\\text{J}\\,\\text{mol}^{-1}\\,\\text{K}^{-1}) \\times (300\\,\\text{K}) \\times (1) \\times (0.5\\,\\text{mol}) = 1247.1693927\\,\\text{J}$。\n\n案例2：\n压力和摩尔数都随时间变化。我们使用完整的功表达式。\n第一项是 $RT\\Delta\\nu\\xi_f$。在 $T = 300\\,\\text{K}$，$\\Delta\\nu = +1$ 和 $\\xi_f = 0.6\\,\\text{mol}$ 的条件下，该项为 $(8.314462618) \\times (300) \\times (1) \\times (0.6) = 1496.60327316\\,\\text{J}$。\n第二项包含一个必须进行数值计算的非零积分：\n$$\n-RT \\int_{0}^{\\tau} \\frac{n_i + \\Delta\\nu\\xi_f(t/\\tau)}{P_0 + A \\sin(2\\pi t/\\tau)} \\left( A\\frac{2\\pi}{\\tau}\\cos(2\\pi t/\\tau) \\right) dt\n$$\n在 $T = 300\\,\\text{K}$，$n_i = 1.2\\,\\text{mol}$，$\\Delta\\nu = +1$，$\\tau = 5\\,\\text{s}$，$\\xi_f=0.6\\,\\text{mol}$，$P_0 = 1.0\\times 10^5\\,\\text{Pa}$ 和 $A=2.0\\times 10^4\\,\\text{Pa}$ 的条件下，积分部分 $\\int_0^\\tau (\\dots) dt$ 的数值计算结果约为 $-0.076841\\,\\text{mol}$。该项对功的贡献为 $-RT \\times (-0.076841\\,\\text{mol}) \\approx 191.647521\\,\\text{J}$。\n总功是两项之和：$W_2 = 1496.603273\\,\\text{J} + 191.647521\\,\\text{J} = 1688.250794\\,\\text{J}$。\n\n案例3：\n与案例1类似，压力是恒定的（$P_{\\text{ext}}(t) = 1.5\\times 10^{5}\\,\\text{Pa}$），所以 $\\frac{dP_{\\text{ext}}}{dt} = 0$。$\\xi(t)$ 的具体形式无关紧要；只有最终值 $\\xi_f$ 有影响。\n$W_3 = RT\\Delta\\nu\\xi_f$。\n给定 $T = 350\\,\\text{K}$，$\\Delta\\nu = -1$，$\\xi_f = 0.8\\,\\text{mol}$。\n$W_3 = (8.314462618\\,\\text{J}\\,\\text{mol}^{-1}\\,\\text{K}^{-1}) \\times (350\\,\\text{K}) \\times (-1) \\times (0.8\\,\\text{mol}) = -2328.04953304\\,\\text{J}$。\n负值表示恒压器对系统做了净功，这与恒压下摩尔数减少的情况一致。\n\n案例4：\n没有发生反应，因此 $\\Delta\\nu = 0$ 且 $\\xi(t)=0$。摩尔数是恒定的，$n(t)=n_i$。功的表达式简化为：\n$$\nW_4 = -RTn_i \\int_{0}^{\\tau} \\frac{1}{P_{\\text{ext}}(t)} \\frac{dP_{\\text{ext}}}{dt} dt\n$$\n这是一个关于压力的恰当积分：\n$$\nW_4 = -RTn_i \\int_{P_{\\text{ext}}(0)}^{P_{\\text{ext}}(\\tau)} \\frac{dP}{P} = -RTn_i [\\ln P_{\\text{ext}}]_{P_{\\text{ext}}(0)}^{P_{\\text{ext}}(\\tau)} = -RTn_i \\ln\\left(\\frac{P_{\\text{ext}}(\\tau)}{P_{\\text{ext}}(0)}\\right)\n$$\n压力函数是 $P_{\\text{ext}}(t) = P_0 + A \\cos(4\\pi t/\\tau)$。\n在 $t=0$ 时，$P_{\\text{ext}}(0) = P_0 + A \\cos(0) = P_0 + A$。\n在 $t=\\tau$ 时，$P_{\\text{ext}}(\\tau) = P_0 + A \\cos(4\\pi) = P_0 + A$。\n由于 $P_{\\text{ext}}(\\tau) = P_{\\text{ext}}(0)$，对数的参数为1，而 $\\ln(1)=0$。\n因此，总功为 $W_4 = 0\\,\\text{J}$。对于摩尔数恒定且在相同压力（因此体积也相同）下开始和结束的过程，这是预期的结果。", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import quad\n\ndef solve():\n    \"\"\"\n    Computes the work done by a barostat on an ideal gas system\n    undergoing a chemical reaction for four different test cases.\n    \"\"\"\n    R = 8.314462618  # J mol^-1 K^-1\n\n    test_cases = [\n        {\n            \"case\": 1,\n            \"T\": 300.0,\n            \"ni\": 1.0,\n            \"dv\": 1.0,\n            \"tau\": 10.0,\n            \"xi_f\": 0.5,\n            \"P_func\": lambda t, tau, P0, A: P0,\n            \"P_params\": {\"P0\": 1.0e5, \"A\": 0.0},\n            \"xi_func\": lambda t, tau, xi_f: xi_f * (t / tau)**2\n        },\n        {\n            \"case\": 2,\n            \"T\": 300.0,\n            \"ni\": 1.2,\n            \"dv\": 1.0,\n            \"tau\": 5.0,\n            \"xi_f\": 0.6,\n            \"P_func\": lambda t, tau, P0, A: P0 + A * np.sin(2 * np.pi * t / tau),\n            \"P_params\": {\"P0\": 1.0e5, \"A\": 2.0e4},\n            \"xi_func\": lambda t, tau, xi_f: xi_f * (t / tau)\n        },\n        {\n            \"case\": 3,\n            \"T\": 350.0,\n            \"ni\": 2.0,\n            \"dv\": -1.0,\n            \"tau\": 8.0,\n            \"xi_f\": 0.8,\n            \"P_func\": lambda t, tau, P0, A: P0,\n            \"P_params\": {\"P0\": 1.5e5, \"A\": 0.0},\n            \"xi_func\": lambda t, tau, xi_f: xi_f * (3 * (t/tau)**2 - 2 * (t/tau)**3)\n        },\n        {\n            \"case\": 4,\n            \"T\": 300.0,\n            \"ni\": 1.0,\n            \"dv\": 0.0,\n            \"tau\": 4.0,\n            \"xi_f\": 0.0,\n            \"P_func\": lambda t, tau, P0, A: P0 + A * np.cos(4 * np.pi * t / tau),\n            \"P_params\": {\"P0\": 1.2e5, \"A\": 1.0e4},\n            \"xi_func\": lambda t, tau, xi_f: 0.0\n        }\n    ]\n\n    results = []\n    \n    # Case 1: Constant pressure\n    case1 = test_cases[0]\n    W1 = R * case1[\"T\"] * case1[\"dv\"] * case1[\"xi_f\"]\n    results.append(W1)\n\n    # Case 2: Time-dependent pressure and moles\n    case2 = test_cases[1]\n    T, ni, dv, tau, xi_f = case2[\"T\"], case2[\"ni\"], case2[\"dv\"], case2[\"tau\"], case2[\"xi_f\"]\n    P0, A = case2[\"P_params\"][\"P0\"], case2[\"P_params\"][\"A\"]\n    pi = np.pi\n\n    work_term1_c2 = R * T * dv * xi_f\n\n    def integrand_c2(t):\n        P_ext = P0 + A * np.sin(2 * pi * t / tau)\n        dP_ext_dt = A * (2 * pi / tau) * np.cos(2 * pi * t / tau)\n        n_t = ni + dv * xi_f * (t / tau)\n        return (n_t / P_ext) * dP_ext_dt\n\n    integral_val, _ = quad(integrand_c2, 0, tau)\n    work_term2_c2 = -R * T * integral_val\n    W2 = work_term1_c2 + work_term2_c2\n    results.append(W2)\n\n    # Case 3: Constant pressure\n    case3 = test_cases[2]\n    W3 = R * case3[\"T\"] * case3[\"dv\"] * case3[\"xi_f\"]\n    results.append(W3)\n\n    # Case 4: No reaction, cyclic pressure change\n    case4 = test_cases[3]\n    # Since dv and xi_f are 0, n(t) is constant.\n    # The pressure function P(t) returns to its initial value at t=tau.\n    # W = -RTn_i * ln(P(tau)/P(0)) = -RTn_i * ln(1) = 0.\n    W4 = 0.0\n    results.append(W4)\n\n    # Format output\n    formatted_results = [f\"{res:.6f}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2375300"}, {"introduction": "先进的模拟技术，例如用于研究材料流变学的技术，常常需要修改标准算法以施加特定约束。本练习将挑战您改编Parrinello-Rahman恒压器的运动方程，以便在允许模拟盒子改变形状的同时，模拟一个恒定体积的系统。通过推导并实施对模拟单元应变率张量的必要约束，您将深入探索各向异性恒压器的核心机制，并培养对高级模拟研究至关重要的技能。[@problem_id:2375308]", "problem": "考虑一个分子动力学模拟单元，它由一个随时间变化的模拟单元矩阵 $H(t) \\in \\mathbb{R}^{d \\times d}$ 表示，其中 $d \\in \\{2,3\\}$。设该模拟单元的形状根据一个速率矩阵 $E(t) \\in \\mathbb{R}^{d \\times d}$ 通过以下运动学关系进行演化\n$$\n\\frac{dH}{dt} = H E.\n$$\n假设在一个Parrinello–Rahman类型的扩展系统模型中，速率矩阵 $E(t)$ 由一个恒定的对称驱动张量 $S \\in \\mathbb{R}^{d \\times d}$ 和一个虚拟质量参数 $\\mu > 0$ 根据以下方程驱动\n$$\n\\mu \\frac{dE}{dt} = S.\n$$\n您需要修改上述方程，以强制模拟单元的体积随时间保持恒定，只允许形状发生变化。具体而言，对于所有 $t \\ge 0$，其行列式必须满足\n$$\n\\det(H(t)) = \\det(H(0)).\n$$\n您的修改必须与上述的运动学和动力学相符，同时对于任何满足该约束的初始条件，都能精确地施加体积约束。所有量均为无量纲量。\n\n对于下面指定的每个测试用例，从给定的初始数据开始，使用您选择的、能够保持体积约束的稳定数值方法，将系统演化至指定的最终时间 $T$。对于每个测试用例，计算在整个模拟时间窗口内，行列式与其初始值的最大绝对偏差，\n$$\nM = \\max_{0 \\le n \\le N} \\left| \\det\\!\\left(H(t_n)\\right) - \\det\\!\\left(H(0)\\right) \\right|,\n$$\n其中 $t_n = n \\Delta t$，$\\Delta t$ 为给定的时间步长，且 $N = T / \\Delta t$ 为一个整数。报告每个用例的 $M$ 值。将所有输出表示为无量纲的浮点数，并采用小数点后有 $12$ 位数字的科学记数法格式。\n\n测试套件：\n- 用例 $1$ (二维剪切驱动): $d = 2$, $\\mu = 5.0$, $H(0) = \\begin{bmatrix} 2.0 & 0.0 \\\\ 0.0 & 1.0 \\end{bmatrix}$, $E(0) = \\begin{bmatrix} 0.0 & 0.0 \\\\ 0.0 & 0.0 \\end{bmatrix}$, $S = \\begin{bmatrix} 0.0 & 0.1 \\\\ 0.1 & 0.0 \\end{bmatrix}$, $T = 1.0$, $\\Delta t = 0.001$.\n- 用例 $2$ (三维偏应力驱动): $d = 3$, $\\mu = 2.0$, $H(0) = \\operatorname{diag}(1.0, 1.0, 1.0)$, $E(0) = 0_{3 \\times 3}$, $S = \\operatorname{diag}(0.3, -0.15, -0.15)$, $T = 1.0$, $\\Delta t = 0.001$.\n- 用例 $3$ (三维静水压驱动及非正交初始晶胞): $d = 3$, $\\mu = 1.0$, $H(0) = \\begin{bmatrix} 1.0 & 0.2 & 0.0 \\\\ 0.0 & 1.0 & 0.0 \\\\ 0.0 & 0.0 & 1.0 \\end{bmatrix}$, $E(0) = 0_{3 \\times 3}$, $S = \\operatorname{diag}(0.2, 0.2, 0.2)$, $T = 1.0$, $\\Delta t = 0.001$.\n\n最终输出格式：\n您的程序应生成单行输出，其中包含用方括号括起来的、以逗号分隔的结果列表。对于上述三个测试用例，输出必须采用以下格式\n\"[m1,m2,m3]\"\n其中每个 $m_i$ 是用例 $i$ 的 $M$ 值，格式为小数点后恰好有12位数字的科学记数法（例如，$1.234567890123\\mathrm{e}{-04}$）。不应打印任何其他文本。", "solution": "该问题要求修改给定的分子动力学模拟单元矩阵 $H(t)$ 的运动方程，以施加一个恒定体积约束，即 $\\det(H(t)) = \\text{const}$。随后，必须执行数值模拟，以量化由数值误差导致的与此约束的偏差。\n\n首先，我们验证问题陈述的有效性。\n已知条件如下：\n- 运动学方程：$\\frac{dH}{dt} = H(t) E(t)$，其中 $H \\in \\mathbb{R}^{d \\times d}$ 且 $E \\in \\mathbb{R}^{d \\times d}$。\n- 动力学方程：$\\mu \\frac{dE}{dt} = S$，其中 $\\mu > 0$ 且 $S$ 是一个恒定的对称矩阵。\n- 约束条件：对于 $t \\ge 0$，$\\det(H(t)) = \\det(H(0))$。\n- 测试用例指定了初始条件 $H(0)$、$E(0)$ 以及参数 $d, \\mu, S, T, \\Delta t$。\n\n该问题具有科学依据，它描述了一个简化的Parrinello-Rahman恒压器，这是计算物理学中的一个标准方法。该问题是适定的、客观的且自包含的。在无量纲框架内，所提供的数据是一致且物理上合理的。因此，该问题被视为有效。\n\n我们现在开始求解。\n\n恒定体积约束 $\\det(H(t)) = \\text{const}$ 意味着其时间导数为零：$\\frac{d}{dt}\\det(H(t)) = 0$。应用行列式导数的雅可比公式，并代入运动学关系 $\\frac{dH}{dt} = H E$，我们得到：\n$$\n\\frac{d}{dt}\\det(H(t)) = \\det(H(t)) \\operatorname{tr}\\left( H(t)^{-1} \\frac{dH(t)}{dt} \\right) = \\det(H(t)) \\operatorname{tr}\\left( H(t)^{-1} H(t) E(t) \\right) = V(t) \\operatorname{tr}(E(t))\n$$\n其中 $V(t) = \\det(H(t))$。对于一个非奇异的模拟单元矩阵（$V(t) \\neq 0$），恒定体积条件等价于速率矩阵 $E(t)$ 在任何时候都必须是无迹的这一运动学约束：\n$$\n\\operatorname{tr}(E(t)) = 0, \\quad \\forall t \\ge 0\n$$\n这个约束必须被主动施加。为使其在所有时间都成立，必须满足两个条件。首先，初始条件必须满足该约束：$\\operatorname{tr}(E(0)) = 0$。在所有给定的测试用例中，$E(0)$ 都是零矩阵，因此该条件得到满足。其次，时间演化必须保持该约束：$\\frac{d}{dt}\\operatorname{tr}(E(t)) = 0$。这是对动力学的一个约束。\n\n给定的动力学方程为 $\\mu \\frac{dE}{dt} = S$。对此方程取迹可得：\n$$\n\\mu \\operatorname{tr}\\left(\\frac{dE}{dt}\\right) = \\mu \\frac{d}{dt}\\operatorname{tr}(E) = \\operatorname{tr}(S)\n$$\n为满足 $\\frac{d}{dt}\\operatorname{tr}(E) = 0$，我们必须有 $\\operatorname{tr}(S) = 0$。然而，驱动张量 $S$ 是外部指定的，并且可能不是无迹的（如用例3所示）。因此，必须修改运动方程。这可以通过将驱动张量 $S$ 投影到无迹矩阵空间上来实现。$S$ 中导致体积变化的分量是它的迹。我们减去这个分量以获得一个新的有效驱动张量 $S_0$。\n$$\nS_0 = S - \\frac{1}{d} \\operatorname{tr}(S) I_d\n$$\n其中 $d$ 是空间维度，$I_d$ 是 $d \\times d$ 的单位矩阵。根据构造，$\\operatorname{tr}(S_0) = \\operatorname{tr}(S) - \\frac{1}{d}\\operatorname{tr}(S)\\operatorname{tr}(I_d) = \\operatorname{tr}(S) - \\operatorname{tr}(S) = 0$。\n修改后的、与约束兼容的 $E$ 的运动方程为：\n$$\n\\mu \\frac{dE}{dt} = S_0\n$$\n这保证了 $\\frac{d}{dt}\\operatorname{tr}(E) = 0$，从而确保如果 $\\operatorname{tr}(E(0))=0$，则对于所有 $t$ 都有 $\\operatorname{tr}(E(t))=0$。\n\n需要求解的常微分方程组是：\n$$\n\\frac{dH}{dt} = H(t) E(t)\n$$\n$$\n\\frac{dE}{dt} = \\frac{1}{\\mu} S_0\n$$\n由于 $S_0$ 是常数，第二个方程可以轻易积分。对于所有测试用例，$E(0) = 0$，我们有：\n$$\nE(t) = \\frac{t}{\\mu} S_0\n$$\n将此代入 $H$ 的方程，得到一个非自治线性常微分方程：\n$$\n\\frac{dH}{dt} = H(t) \\left( \\frac{t}{\\mu} S_0 \\right)\n$$\n形如 $\\frac{dX}{dt} = X(t) A(t)$ 的方程的正式解为 $X(t) = X(0) \\mathcal{T} \\exp\\left(\\int_0^t A(\\tau) d\\tau\\right)$，其中 $\\mathcal{T}$ 是时间排序算符。然而，由于对于所有 $t, t'$，$A(t) = \\frac{t}{\\mu}S_0$ 与 $A(t')$ 对易，解简化为：\n$$\nH(t) = H(0) \\exp\\left( \\int_0^t \\frac{\\tau}{\\mu} S_0 d\\tau \\right) = H(0) \\exp\\left( \\frac{t^2}{2\\mu} S_0 \\right)\n$$\n其中 $\\exp(\\cdot)$ 是矩阵指数。这个解析解证实了体积是精确守恒的：\n$$\n\\det(H(t)) = \\det(H(0)) \\det\\left(\\exp\\left( \\frac{t^2}{2\\mu} S_0 \\right)\\right) = \\det(H(0)) \\exp\\left(\\operatorname{tr}\\left( \\frac{t^2}{2\\mu} S_0 \\right)\\right) = \\det(H(0))\n$$\n因为 $\\operatorname{tr}(S_0) = 0$。\n\n对于数值解，我们必须选择一种“保持体积约束”的方法。像欧拉法或龙格-库塔法这样的标准有限差分法会引入体积的系统误差。一种更优的方法是使用基于解在小时间步长 $\\Delta t$ 上的解析结构的指数积分法。\n从时间 $t_n$ 到 $t_{n+1} = t_n + \\Delta t$ 的演化由下式给出：\n$$\nH(t_{n+1}) = H(t_n) \\exp\\left( \\int_{t_n}^{t_{n+1}} E(\\tau) d\\tau \\right)\n$$\n积分是：\n$$\n\\int_{t_n}^{t_{n+1}} E(\\tau) d\\tau = \\int_{t_n}^{t_{n+1}} \\frac{\\tau}{\\mu} S_0 d\\tau = \\frac{S_0}{\\mu} \\left[\\frac{\\tau^2}{2}\\right]_{t_n}^{t_{n+1}} = \\frac{S_0}{2\\mu} (t_{n+1}^2 - t_n^2) = \\frac{\\Delta t (t_n + t_{n+1})}{2\\mu} S_0 = \\frac{\\Delta t}{\\mu} \\left(t_n + \\frac{\\Delta t}{2}\\right) S_0\n$$\n这导出了数值更新规则：\n$$\nH_{n+1} = H_n \\exp\\left( \\frac{\\Delta t}{\\mu} \\left(t_n + \\frac{\\Delta t}{2}\\right) S_0 \\right)\n$$\n这个方案在每一步都解析地保持行列式不变，因为指数中矩阵的迹为零。任何测量到的与恒定体积的偏差都将仅源于矩阵指数和行列式计算中的浮点不精确性。\n\n算法如下：\n$1$. 对每个测试用例，定义 $d, \\mu, H_0, S, T, \\Delta t$。\n$2$. 计算无迹驱动张量 $S_0 = S - \\frac{1}{d} \\operatorname{tr}(S) I_d$。\n$3$. 初始化 $H = H_0$，初始行列式 $V_0 = \\det(H_0)$，以及最大偏差 $M = 0.0$。\n$4$. 确定步数 $N = T/\\Delta t$。\n$5$. 从 $n = 0$ 迭代到 $N - 1$：\n    a. 设当前时间为 $t_n = n \\Delta t$。\n    b. 计算指数的参数：$A_n = \\frac{\\Delta t}{\\mu} (t_n + \\frac{\\Delta t}{2}) S_0$。\n    c. 更新模拟单元矩阵：$H \\leftarrow H \\exp(A_n)$。\n    d. 计算当前行列式 $V = \\det(H)$。\n    e. 更新最大偏差：$M \\leftarrow \\max(M, |V - V_0|)$。\n$6$. 报告 $M$ 的最终值。\n\n对于用例3，$S$ 与单位矩阵成正比，因此 $S_0$ 是零矩阵。因此，$H(t)$ 保持不变，偏差 $M$ 在解析上为零。对于用例1和2，$S$ 本身就是无迹的，所以 $S_0=S$，预计会有一个小的数值偏差。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import expm\n\ndef solve():\n    \"\"\"\n    Solves the constrained cell dynamics problem for the given test cases.\n    \"\"\"\n    test_cases = [\n        {\n            \"d\": 2,\n            \"mu\": 5.0,\n            \"H0\": np.array([[2.0, 0.0], [0.0, 1.0]]),\n            \"E0\": np.array([[0.0, 0.0], [0.0, 0.0]]),\n            \"S\": np.array([[0.0, 0.1], [0.1, 0.0]]),\n            \"T\": 1.0,\n            \"dt\": 0.001,\n        },\n        {\n            \"d\": 3,\n            \"mu\": 2.0,\n            \"H0\": np.diag([1.0, 1.0, 1.0]),\n            \"E0\": np.zeros((3, 3)),\n            \"S\": np.diag([0.3, -0.15, -0.15]),\n            \"T\": 1.0,\n            \"dt\": 0.001,\n        },\n        {\n            \"d\": 3,\n            \"mu\": 1.0,\n            \"H0\": np.array([[1.0, 0.2, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]),\n            \"E0\": np.zeros((3, 3)),\n            \"S\": np.diag([0.2, 0.2, 0.2]),\n            \"T\": 1.0,\n            \"dt\": 0.001,\n        },\n    ]\n\n    results = []\n    for case in test_cases:\n        d = case[\"d\"]\n        mu = case[\"mu\"]\n        H0 = case[\"H0\"]\n        S = case[\"S\"]\n        T = case[\"T\"]\n        dt = case[\"dt\"]\n        \n        # 1. Compute the traceless driving tensor S0\n        tr_S = np.trace(S)\n        S0 = S - (tr_S / d) * np.identity(d)\n\n        # 2. Initialize simulation variables\n        H = np.copy(H0)\n        det0 = np.linalg.det(H0)\n        max_deviation = 0.0\n        \n        # Ensure number of steps is integer\n        num_steps = int(round(T / dt))\n\n        # 3. Time evolution loop\n        for n in range(num_steps):\n            t_n = n * dt\n            \n            # The argument to the matrix exponential is the integral of E(t) over the timestep\n            # integral_E_dt = (S0/mu) * dt * (t_n + dt/2.0)\n            arg_exp = (S0 / mu) * dt * (t_n + dt / 2.0)\n            \n            # Update the cell matrix using the exponential integrator\n            # The @ operator is for matrix multiplication\n            H = H @ expm(arg_exp)\n            \n            # Calculate the current determinant and the absolute deviation from the initial one\n            current_det = np.linalg.det(H)\n            deviation = abs(current_det - det0)\n            \n            # Update the maximum deviation found so far\n            if deviation > max_deviation:\n                max_deviation = deviation\n        \n        results.append(max_deviation)\n\n    # Format and print the final results\n    formatted_results = [f\"{res:.12e}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2375308"}]}