{"hands_on_practices": [{"introduction": "本练习提供了计算物理学中一项基础的动手实践：直接从微观时间相关函数计算宏观输运系数——自扩散系数 $D$。你将从均方根位移的基本定义出发，推导著名的 Green-Kubo 关系，该关系将 $D$ 与速度自相关函数 (VACF) 的时间积分联系起来。这项实践将巩固你对宏观扩散如何源于微观层面粒子持续相关运动的理解 [@problem_id:2447051]。", "problem": "您将通过推导和评估一个基于时间相关函数的表达式，来确定一种轻的间隙原子（例如氢）在重金属晶格（例如钯）中的自扩散系数。请从连接粒子位移、速度和统计平稳性的第一性原理出发，推导出一个用单分量速度自相关函数表示自扩散系数的关系式。您不能假定任何预先给定的输运公式；必须从均方位移和平稳时间相关的定义来构建此关系。然后，实现一个数值程序，在温度 $T$ 下，针对一个质量为 $m$ 的粒子，对三种人工合成但物理上合理的单分量速度自相关函数评估此关系。每种情况都定义了单分量速度自相关函数 $C(t)$，使得 $C(0) = \\langle v_x^2 \\rangle$ 由能量均分定理确定。您的实现必须使用一个均匀的时间网格，并在一个为控制截断误差而选择的有限域上使用一种收敛的数值积分方法。\n\n您可以使用的基本原理：\n- 自扩散系数的定义，其来自于均方位移的长时间极限。\n- 位置和速度之间作为时间导数的关系。\n- 平稳随机过程和时间相关函数的性质。\n- 热平衡中单个速度分量的能量均分。\n\n物理模型和参数：\n- 将重晶格视为一个热浴，它使得轻的间隙原子的单分量速度成为一个具有指定自相关函数 $C(t)$ 的平稳随机过程。\n- 使用温度 $T = 300$ K 和氢的质量 $m = 1.6735575 \\times 10^{-27}$ kg。\n- 玻尔兹曼常数为 $k_{\\mathrm{B}} = 1.380649 \\times 10^{-23}$ J/K。\n- 根据能量均分定理，$C(0) = \\langle v_x^2 \\rangle = k_{\\mathrm{B}} T / m$。\n\n测试套件（$C(t)$ 的三种情况）：\n- 情况 A（单指数弛豫）：$C(t) = C_0 \\exp(-t/\\tau)$，其中 $C_0 = k_{\\mathrm{B}} T / m$ 且 $\\tau = 0.04$ ps。请将皮秒转换为秒；即，$1$ ps $= 10^{-12}$ s。\n- 情况 B（双指数弛豫，以模拟多时间尺度动力学）：$C(t) = C_0 \\left[a \\exp(-t/\\tau_1) + (1-a)\\exp(-t/\\tau_2)\\right]$，其中 $C_0 = k_{\\mathrm{B}} T / m$，$a = 0.7$，$\\tau_1 = 0.02$ ps，$\\tau_2 = 0.2$ ps。\n- 情况 C（阻尼振荡相关，以模仿与晶格振动的耦合）：$C(t) = C_0 \\exp(-\\gamma t)\\cos(\\omega t)$，其中 $C_0 = k_{\\mathrm{B}} T / m$，$\\gamma = 1/(0.05$ ps$)$，单位为 s$^{-1}$，$\\omega = 2\\pi \\times 5 \\times 10^{12}$ rad/s。\n\n数值要求：\n- 构建一个从 $t=0$ 到 $t=t_{\\max}$ 的均匀时间网格，$t_{\\max}$ 的选择应确保对于每种情况，在 $t_{\\max}$ 之后被忽略的尾部可以忽略不计。一个科学上合理的选择是 $t_{\\max} \\geq 10 \\times$ 当前存在的最大衰减时间（例如，$\\max\\{\\tau,\\tau_1,\\tau_2,1/\\gamma\\}$），并且对于振荡相关，还应包含几个振荡周期。时间步长 $\\Delta t$ 必须能够分辨当前的最快尺度（例如，衰减时间和振荡周期中的最小值）。\n- 使用在均匀网格上的收敛积分方法（例如，复合辛普森法则或具有足够分辨率的梯形法则），数值计算推导表达式的时间积分。\n- 所有计算必须在国际单位制（SI）中进行。最终的扩散系数以 $\\text{m}^2/\\text{s}$ 为单位表示。\n\n您必须产出的内容：\n1. 一个简要的推导过程（在您自己的开发过程中内部完成；不要打印出来），得出一个可计算的积分表达式，该表达式将自扩散系数与单分量速度自相关函数联系起来。\n2. 一个程序，该程序：\n   - 实现上述三种 $C(t)$ 定义，并使用给定的数值参数。\n   - 按照规定选择合适的时间网格，并数值计算得出每种情况下自扩散系数的积分。\n   - 分别输出情况 A、B 和 C 的三个扩散系数，单位为 $\\text{m}^2/\\text{s}$。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔的结果列表（例如，“[resultA,resultB,resultC]”），并按此顺序排列。\n- 每个浮点数结果必须以科学记数法打印，小数点后恰好有六位数字（例如，“9.900000e-08”），该行不包含单位；数值的单位默认为 $\\text{m}^2/\\text{s}$。\n\n测试套件即为上面列出的三种情况。每个测试用例的答案是一个实数（浮点数）。最终打印的行以指定的格式和顺序聚合这三个浮点数。", "solution": "所给出的问题陈述是有效的。它在科学上基于统计力学的原理，特别是将宏观输运系数与微观相关函数的时间积分联系起来的 Green-Kubo 关系。该问题是适定的，提供了所有必要的物理常数、参数以及速度自相关函数（VACF）的函数形式。整个设置是内部一致、客观且计算上可行的。我们现在开始求解。\n\n我们的目标是从单分量速度自相关函数 $C(t) = \\langle v_x(t) v_x(0) \\rangle$ 中求出自扩散系数，记为 $D$。我们从第一性原理开始。\n\n在三维空间中，自扩散系数 $D$ 由粒子的均方位移（MSD）的长时间行为定义：\n$$\nD = \\lim_{t \\to \\infty} \\frac{1}{6t} \\langle |\\mathbf{r}(t) - \\mathbf{r}(0)|^2 \\rangle\n$$\n其中 $\\mathbf{r}(t)$ 是粒子在时间 $t$ 的位置矢量，尖括号 $\\langle \\dots \\rangle$ 表示在热平衡下对等效系统进行的系综平均。\n\n粒子的位移矢量 $\\mathbf{r}(t) - \\mathbf{r}(0)$ 是其速度矢量 $\\mathbf{v}(t)$ 的时间积分：\n$$\n\\mathbf{r}(t) - \\mathbf{r}(0) = \\int_0^t \\mathbf{v}(t') dt'\n$$\n将此代入 MSD 表达式中得到：\n$$\n\\langle |\\mathbf{r}(t) - \\mathbf{r}(0)|^2 \\rangle = \\left\\langle \\left( \\int_0^t \\mathbf{v}(t') dt' \\right) \\cdot \\left( \\int_0^t \\mathbf{v}(t'') dt'' \\right) \\right\\rangle\n$$\n根据积分和期望算符的线性性质，我们可以将其写成一个二重积分：\n$$\n\\text{MSD}(t) = \\int_0^t dt' \\int_0^t dt'' \\langle \\mathbf{v}(t') \\cdot \\mathbf{v}(t'') \\rangle\n$$\n项 $\\langle \\mathbf{v}(t') \\cdot \\mathbf{v}(t'') \\rangle$ 是完整速度矢量的速度自相关函数。对于一个平稳过程，此相关性仅取决于时间差 $\\tau = |t' - t''|$。在一个各向同性系统中，不同速度分量之间的互相关在平均意义上为零，即对于 $i \\neq j$，有 $\\langle v_i(t') v_j(t'') \\rangle = 0$。此外，每个分量的自相关是相同的：$\\langle v_x(t') v_x(t'') \\rangle = \\langle v_y(t') v_y(t'') \\rangle = \\langle v_z(t') v_z(t'') \\rangle$。设单分量 VACF 为 $C(t' - t'') = \\langle v_x(t') v_x(t'') \\rangle$。\n则完整的 VACF 为：\n$$\n\\langle \\mathbf{v}(t') \\cdot \\mathbf{v}(t'') \\rangle = 3 \\langle v_x(t') v_x(t'') \\rangle = 3 C(t' - t'')\n$$\n然而，问题隐含地采用了文献中一种更常见的约定，它源于一个略有不同的起点，并得出一个更简单的最终关系。让我们仔细地重新推导这一点。MSD 可以写为 $\\langle \\Delta x^2 + \\Delta y^2 + \\Delta z^2 \\rangle$。对于各向同性系统，这等于 $3\\langle \\Delta x^2 \\rangle$。一维 MSD 是：\n$$\n\\langle (x(t) - x(0))^2 \\rangle = \\int_0^t dt' \\int_0^t dt'' \\langle v_x(t') v_x(t'') \\rangle = \\int_0^t dt' \\int_0^t dt'' C(t' - t'')\n$$\n这个在方形域上的二重积分可以转换为一个单重积分：\n$$\n\\langle (x(t) - x(0))^2 \\rangle = 2 \\int_0^t (t-\\tau) C(\\tau) d\\tau\n$$\n现在，我们将此代入 $D$ 的定义中：\n$$\nD = \\lim_{t \\to \\infty} \\frac{1}{6t} \\langle |\\mathbf{r}(t) - \\mathbf{r}(0)|^2 \\rangle = \\lim_{t \\to \\infty} \\frac{3}{6t} \\langle (x(t) - x(0))^2 \\rangle = \\lim_{t \\to \\infty} \\frac{1}{2t} \\left( 2 \\int_0^t (t-\\tau) C(\\tau) d\\tau \\right)\n$$\n$$\nD = \\lim_{t \\to \\infty} \\left( \\int_0^t C(\\tau) d\\tau - \\frac{1}{t} \\int_0^t \\tau C(\\tau) d\\tau \\right)\n$$\n为了使扩散系数为一个有限的非零常数，VACF $C(\\tau)$ 必须足够快地衰减到零，以使其积分收敛。假设 $\\int_0^\\infty C(\\tau)d\\tau$ 是一个有限值，并且积分 $\\int_0^\\infty \\tau C(\\tau) d\\tau$ 也收敛，那么当 $t \\to \\infty$ 时，第二项消失。这就得到了最终的表达式，一个基石性的 Green-Kubo 关系：\n$$\nD = \\int_0^\\infty C(t) dt\n$$\n这就是我们必须评估的公式。问题指明，单分量 VACF 的初始值由一维能量均分定理决定：$C(0) = \\langle v_x^2 \\rangle = k_{\\mathrm{B}} T / m$。\n\n对积分 $D = \\int_0^\\infty C(t) dt$ 的数值评估需要用一个有限的截断值 $t_{\\max}$ 来近似无限的上界。因此，该积分被近似为 $D \\approx \\int_0^{t_{\\max}} C(t) dt$。$t_{\\max}$ 的选择必须足够大，以确保被忽略的尾部 $\\int_{t_{\\max}}^\\infty C(t) dt$ 的贡献可以忽略不计。问题要求 $t_{\\max}$ 至少是最长特征衰减时间的 10 倍。特征时间尺度为：情况 A：$\\tau = 0.04$ ps；情况 B：$\\tau_2 = 0.2$ ps；情况 C：$1/\\gamma = 0.05$ ps。其中最大的是 $\\tau_2 = 0.2$ ps。因此，我们必须选择 $t_{\\max} \\geq 10 \\times 0.2$ ps $= 2.0$ ps。选择 $t_{\\max} = 2.5$ ps 是足够保守的。\n\n对于数值积分，我们将构建一个均匀时间网格 $t_i = i \\Delta t$，$i=0, 1, \\dots, N$，其中 $t_N = t_{\\max}$。时间步长 $\\Delta t$ 必须足够小以分辨最快的动力学。最快的时间尺度是情况 B 的 $\\tau_1 = 0.02$ ps，以及情况 C 的振荡周期 $P = 1/(5 \\times 10^{12} \\text{ Hz}) = 0.2$ ps。最短的特征时间是 $\\tau_1 = 0.02$ ps。时间步长 $\\Delta t = 0.001$ ps 为分辨这个最快的衰减提供了 20 个点，这是足够的。这将产生 $N+1 = t_{\\max}/\\Delta t + 1 = 2.5/0.001 + 1 = 2501$ 个网格点。在此网格上，我们将为每种情况评估函数 $C(t_i)$，然后使用一个收敛的数值积分方法。我们将采用复合辛普森法则，正如在 `scipy.integrate.simpson` 中实现的，它非常适合在均匀网格上对采样数据进行积分，并且对于光滑的被积函数，其精度通常高于梯形法则。\n\n所有计算都必须在 SI 基本单位（米、千克、秒、开尔文）中进行。所提供的以皮秒（$1$ ps $= 10^{-12}$ s）为单位的时间常数、衰减率和频率必须相应转换。$D$ 的最终结果将以 $\\text{m}^2/\\text{s}$ 为单位。该实现将计算 $C_0 = k_{\\mathrm{B}} T / m$，然后对三种指定的 $C(t)$ 形式中的每一种计算定积分。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import simpson\n\ndef solve():\n    \"\"\"\n    Calculates the self-diffusion coefficient for three cases of a single-component\n    velocity autocorrelation function (VACF).\n    \"\"\"\n    # Physical constants in SI units\n    T = 300.0  # Temperature in Kelvin\n    M_H = 1.6735575e-27  # Mass of hydrogen in kg\n    K_B = 1.380649e-23  # Boltzmann's constant in J/K\n\n    # Conversion factor\n    PS_TO_S = 1e-12\n\n    # Calculate the initial value of the VACF, C(0), from equipartition theorem\n    c0 = (K_B * T) / M_H\n\n    # Define test case parameters\n    # Case A: Single-exponential relaxation\n    tau_A = 0.04 * PS_TO_S\n    # Case B: Bi-exponential relaxation\n    a_B = 0.7\n    tau1_B = 0.02 * PS_TO_S\n    tau2_B = 0.2 * PS_TO_S\n    # Case C: Damped oscillatory correlation\n    gamma_C = 1.0 / (0.05 * PS_TO_S)\n    omega_C = 2.0 * np.pi * 5.0e12\n\n    # Numerical integration parameters\n    # The longest decay timescale is tau2_B = 0.2 ps.\n    # Set t_max to be > 10 * 0.2 ps. We choose 2.5 ps.\n    t_max = 2.5 * PS_TO_S\n    # The fastest timescale is tau1_B = 0.02 ps.\n    # We choose dt to resolve this well. dt = 0.001 ps gives 20 points for 0.02 ps.\n    num_points = 2501  # Gives dt = t_max / (num_points - 1) = 1e-15 s = 0.001 ps\n    t = np.linspace(0, t_max, num_points)\n\n    test_cases = [\n        {\n            \"name\": \"A\",\n            \"func\": lambda t_vals: c0 * np.exp(-t_vals / tau_A)\n        },\n        {\n            \"name\": \"B\",\n            \"func\": lambda t_vals: c0 * (a_B * np.exp(-t_vals / tau1_B) + (1 - a_B) * np.exp(-t_vals / tau2_B))\n        },\n        {\n            \"name\": \"C\",\n            \"func\": lambda t_vals: c0 * np.exp(-gamma_C * t_vals) * np.cos(omega_C * t_vals)\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        # Evaluate the VACF C(t) on the time grid\n        c_t = case[\"func\"](t)\n\n        # Numerically integrate C(t) from 0 to t_max using Simpson's rule\n        # D = integral from 0 to infinity of C(t) dt\n        diffusion_coeff = simpson(y=c_t, x=t)\n        results.append(diffusion_coeff)\n\n    # Format and print the final results as specified\n    formatted_results = [f\"{r:.6e}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2447051"}, {"introduction": "在直接计算输运系数的基础上，本实践将深入探讨由速度自相关函数 (VACF) 所描述的粒子动力学的深层结构。利用广义朗之万方程 (GLE) 的框架，你将学习到 VACF 的衰减是由一个“记忆函数” $K(t)$ 控制的，它量化了作用在粒子上的随机力的时间相关特性。你的任务是数值求解 Volterra 方程，从给定的 VACF 中重构出 $K(t)$，从而实现从“描述”动力学到“解释”动力学的跨越 [@problem_id:2447068]。", "problem": "您的任务是从已知的、数值采样的速度自相关函数 (VACF) 出发，基于第一性原理并通过基于原理的离散化方法，重构简单流体的记忆函数 $K(t)$。这一重构必须通过数值求解广义朗之万方程中连接归一化 VACF 与记忆核的沃尔泰拉卷积方程来完成。您最终的程序必须是完整且可运行的，并且必须在指定的测试集上计算一个定量的误差度量。\n\n假设归一化速度自相关函数 (VACF) 记为 $\\varphi(t)$，其定义为 $\\varphi(t) \\equiv C_{vv}(t)/C_{vv}(0)$，其中 $C_{vv}(t) = \\langle \\mathbf{v}(t) \\cdot \\mathbf{v}(0) \\rangle$ 且 $C_{vv}(0) = \\langle \\mathbf{v}^{2} \\rangle$，并满足 $\\varphi(0) = 1$。对于处于热平衡状态的各向同性流体，$\\varphi(t)$ 是时间的偶函数，因此 $\\varphi'(0) = 0$。针对归一化 VACF 的广义朗之万方程 (GLE) (Mori–Zwanzig 投影算符形式理论的一个推论) 导出了以下因果沃尔泰拉方程：\n$$\n\\frac{d\\varphi(t)}{dt} = - \\int_{0}^{t} K(t-\\tau)\\,\\varphi(\\tau)\\,d\\tau\n$$\n其中 $K(t)$ 是一个实的、因果的记忆核。您的任务是从离散采样的 $\\varphi(t)$ 中数值重构 $K(t)$。\n\n您必须：\n- 从上述沃尔泰拉卷积方程出发，结合对 $\\varphi'(t)$ 的有限差分近似和对时间积分的黎曼和近似，推导出一个数值稳定的时间离散算法，用于在均匀网格上计算 $K(t)$。您必须采用均匀时间步长 $\\Delta t$ 和左黎曼和来计算积分。所得到的离散格式必须能够根据先前计算出的值，在网格时间 $t_n = n\\,\\Delta t$ (对于 $n \\ge 1$) 上对 $K$ 进行递归计算。\n- 实现该算法，从数值采样的 $\\varphi(t)$ 中重构 $K(t)$。\n\n为了使问题完全可测试，请使用以下形式的物理上自洽的模型记忆核在内部生成合成的 $\\varphi(t)$ 数据：\n$$\nK_{\\text{true}}(t) = a\\,e^{-b t}\n$$\n其中 $a>0$ 且 $b>0$。对于此选择，归一化 VACF 是由上述沃尔泰拉方程所隐含的一个线性、常系数、齐次二阶常微分方程的解。您可以在网格上生成 $\\varphi(t)$，方法是使用该常微分方程的精确闭式解，或者用足够小的时间步长对其进行数值积分，以使 $\\varphi(t)$ 的离散化误差与反演误差相比可以忽略不计；在所有情况下，都需强制满足 $\\varphi(0)=1$ 和 $\\varphi'(0)=0$。\n\n数值规格：\n- 使用均匀时间步长 $\\Delta t = 10^{-3}$ 和总时长 $T = 1.5$，因此网格包含 $N+1$ 个点，其中 $N = T/\\Delta t$，且 $t_n = n\\,\\Delta t$ (对于 $n=0,1,\\dots,N$) 。\n- 在可能的情况下，使用二阶精度的有限差分来近似 $\\varphi'(t_n)$ (对内部点使用中心差分，如需在端点处使用单边差分)。\n- 在 $\\tau$ 网格上使用左黎曼和来近似沃尔泰拉方程中的时间积分，以确保在每个时间步的离散方程中只出现先前已计算出的 $K$ 值。\n\n测试集：\n- 对 $K_{\\text{true}}(t) = a\\,e^{-b t}$ 使用以下三对参数 $(a,b)$：\n  - 情况1：$(a,b) = (1.0,\\,1.5)$。\n  - 情况2：$(a,b) = (0.25,\\,1.0)$。\n  - 情况3：$(a,b) = (0.10,\\,1.0)$。\n- 对于每种情况，在规定的时间网格上生成 $\\varphi(t)$，数值重构 $K(t)$，并通过将重构的 $K(t)$ 与真实的 $K_{\\text{true}}(t)$ 进行比较，在评估时间点 $t \\in \\{0.01,\\,0.20,\\,0.50,\\,1.00\\}$ 评估重构质量。\n- 对于每种情况，计算一个单一的标量误差，即在四个指定的评估时间点上绝对误差的均方根：\n$$\n\\varepsilon = \\sqrt{\\frac{1}{4}\\sum_{j=1}^{4}\\left| K_{\\text{num}}(t_j)-K_{\\text{true}}(t_j)\\right|^2 }\n$$\n\n输出要求：\n- 本问题中没有物理单位；所有量在构造上都是无量纲的。\n- 您的程序必须输出单一行，其中包含一个含有三个浮点数的列表，每个浮点数是对应一种情况的均方根绝对误差 $\\varepsilon$，顺序与上述情况一致。格式必须严格为方括号内以逗号分隔的列表，例如 $[r_1,r_2,r_3]$，其中每个 $r_k$ 是一个浮点数。\n\n您的程序必须是完全自包含的，并且不需要任何输入。它必须确定性地为三种情况生成合成的 $\\varphi(t)$，按照规定通过数值反演沃尔泰拉方程来重构 $K(t)$，在给定的时间点评估误差，并打印最终的列表。您实现的算法步骤和近似必须遵循给定的基本方程和标准的数值分析构造，而不是任何未声明的快捷公式。", "solution": "所提出的问题是计算物理学中一个有效且适定的练习。它在科学上植根于统计力学的 Mori-Zwanzig 形式理论，特别是广义朗之万方程 (GLE)，该方程通过一个沃尔泰拉积分方程将时间相关函数与记忆核联系起来。该问题要求对这个方程进行数值反演，这是分析分子动力学模拟数据中的一项标准任务。所有参数、方法和约束都得到了清晰、客观的定义，构成了一个自包含且可验证的问题。因此，我们将着手解决它。\n\n主要任务是通过数值求解第一类因果沃尔泰拉方程，从归一化速度自相关函数 (VACF) $\\varphi(t)$ 中重构记忆函数 $K(t)$：\n$$\n\\frac{d\\varphi(t)}{dt} = - \\int_{0}^{t} K(t-\\tau)\\,\\varphi(\\tau)\\,d\\tau\n$$\n提供的初始条件是 $\\varphi(0) = 1$ 和 $\\varphi'(0) = 0$。\n\n首先，我们推导用于重构的离散算法。我们引入一个均匀时间网格 $t_n = n\\,\\Delta t$，$n = 0, 1, 2, \\dots, N$，其中 $\\Delta t$ 是时间步长。令 $\\varphi_n = \\varphi(t_n)$ 和 $K_n = K(t_n)$。在 $t=t_n$ 处计算沃尔泰拉方程，得到：\n$$\n\\varphi'(t_n) = - \\int_{0}^{t_n} K(t_n-\\tau)\\,\\varphi(\\tau)\\,d\\tau\n$$\n我们对导数和积分都进行离散化。对于内部点 ($n \\ge 1$ 且 $n < N$)，导数 $\\varphi'(t_n)$ 使用二阶精度的中心有限差分进行近似：\n$$\n\\varphi'(t_n) \\approx \\frac{\\varphi_{n+1} - \\varphi_{n-1}}{2\\,\\Delta t}\n$$\n积分使用指定的左黎曼和进行近似。积分区间 $[0, t_n]$ 被划分为 $n$ 个宽度为 $\\Delta t$ 的子区间。求和是在点 $\\tau_j = j\\,\\Delta t$ (对于 $j=0, 1, \\dots, n-1$) 上进行的：\n$$\n\\int_{0}^{t_n} K(t_n-\\tau)\\,\\varphi(\\tau)\\,d\\tau \\approx \\sum_{j=0}^{n-1} K(t_n - \\tau_j)\\,\\varphi(\\tau_j)\\,\\Delta t = \\Delta t \\sum_{j=0}^{n-1} K(t_{n-j})\\,\\varphi(t_j) = \\Delta t \\sum_{j=0}^{n-1} K_{n-j}\\,\\varphi_j\n$$\n左黎曼和的这种特定选择至关重要，因为它能导出一个可解的递归结构。将离散近似代入控制方程，得到：\n$$\n\\frac{\\varphi_{n+1} - \\varphi_{n-1}}{2\\,\\Delta t} \\approx - \\Delta t \\sum_{j=0}^{n-1} K_{n-j}\\,\\varphi_j\n$$\n我们可以从和式中分离出包含未知数 $K_n$ 的项。和式为 $K_n\\varphi_0 + K_{n-1}\\varphi_1 + \\dots + K_1\\varphi_{n-1}$。\n$$\n\\frac{\\varphi_{n+1} - \\varphi_{n-1}}{2\\,\\Delta t} \\approx - \\Delta t \\left( K_n\\varphi_0 + \\sum_{j=1}^{n-1} K_{n-j}\\,\\varphi_j \\right)\n$$\n现在我们可以求解 $K_n$。利用给定的条件 $\\varphi_0 = \\varphi(0) = 1$，我们得到对于 $n \\ge 1$ 的递归公式：\n$$\nK_n \\approx -\\frac{\\varphi_{n+1} - \\varphi_{n-1}}{2\\,(\\Delta t)^2} - \\sum_{j=1}^{n-1} K_{n-j}\\,\\varphi_j\n$$\n这个公式允许顺序计算 $K_1, K_2, K_3, \\dots$。对于 $n=1$，和式为空，得到 $K_1 \\approx -(\\varphi_2 - \\varphi_0)/(2(\\Delta t)^2)$。对于 $n=2$，得到 $K_2 \\approx -(\\varphi_3 - \\varphi_1)/(2(\\Delta t)^2) - K_1\\varphi_1$，依此类推。\n\n接下来，我们处理为 $\\varphi(t)$ 生成合成测试数据的问题。问题指定了真实的记忆核 $K_{\\text{true}}(t) = a\\,e^{-b t}$。为了找到对应的 $\\varphi(t)$，我们可以将积分-微分方程转换为纯粹的常微分方程 (ODE)。使用莱布尼茨积分法则对沃尔泰拉方程关于 $t$ 求导，得到：\n$$\n\\varphi''(t) = - \\frac{d}{dt} \\int_{0}^{t} K(t-\\tau)\\,\\varphi(\\tau)\\,d\\tau = - \\left( K(0)\\varphi(t) + \\int_{0}^{t} K'(t-\\tau)\\varphi(\\tau)\\,d\\tau \\right)\n$$\n对于 $K(t) = a\\,e^{-b t}$，我们有 $K(0)=a$ 和 $K'(t) = -ab\\,e^{-b t} = -b K(t)$。将这些代入 $\\varphi''(t)$ 的方程：\n$$\n\\varphi''(t) = -a\\varphi(t) - \\int_{0}^{t} [-b\\,K(t-\\tau)]\\varphi(\\tau)\\,d\\tau = -a\\varphi(t) + b\\int_{0}^{t} K(t-\\tau)\\varphi(\\tau)\\,d\\tau\n$$\n认识到剩下的积分等于 $-\\varphi'(t)$，我们得到一个二阶线性齐次常微分方程，其系数为常数：\n$$\n\\varphi''(t) + b\\,\\varphi'(t) + a\\,\\varphi(t) = 0\n$$\n这个常微分方程必须在初始条件 $\\varphi(0) = 1$ 和 $\\varphi'(0) = 0$ 下求解。解取决于特征方程 $r^2 + b\\,r + a = 0$ 的根，即 $r_{1,2} = (-b \\pm \\sqrt{b^2 - 4a})/2$。我们考虑判别式 $\\Delta = b^2 - 4a$ 的三种情况：\n\n1.  **过阻尼 (Overdamped, $\\Delta > 0$)**: $\\varphi(t) = \\frac{1}{r_1-r_2}(-r_2 e^{r_1 t} + r_1 e^{r_2 t})$。测试用例 $(a,b) = (0.10, 1.0)$ 属于这一类，因为 $1.0^2 - 4(0.10) = 0.6 > 0$。\n\n2.  **临界阻尼 (Critically Damped, $\\Delta = 0$)**: $\\varphi(t) = (1 + \\frac{b}{2}t)e^{-bt/2}$。测试用例 $(a,b) = (0.25, 1.0)$ 属于这一类，因为 $1.0^2 - 4(0.25) = 0$。\n\n3.  **欠阻尼 (Underdamped, $\\Delta < 0$)**: $\\varphi(t) = e^{-bt/2}\\left(\\cos(\\omega t) + \\frac{b}{2\\omega}\\sin(\\omega t)\\right)$，其中 $\\omega = \\frac{\\sqrt{4a - b^2}}{2}$。测试用例 $(a,b) = (1.0, 1.5)$ 属于这一类，因为 $1.5^2 - 4(1.0) = -1.75 < 0$。\n\n实现将按以下步骤进行。对于每个测试用例 $(a,b)$：\n1.  建立时间网格，设置 $\\Delta t = 10^{-3}$ 和 $T = 1.5$。\n2.  通过在每个网格点 $t_n$ 上评估上述三种情况中相应的解析解，生成 $\\varphi_n$ 值数组。\n3.  通过对 $n=1, \\dots, N-1$ 迭代应用推导出的递归公式，计算数值记忆核数组 $K_{\\text{num}}$。\n4.  在指定的评估时间 $t_j \\in \\{0.01, 0.20, 0.50, 1.00\\}$，找到对应的整数索引 $n_j = t_j/\\Delta t$。\n5.  计算均方根误差 $\\varepsilon = \\sqrt{\\frac{1}{4}\\sum_{j=1}^{4}\\left| K_{\\text{num}}(t_{n_j}) - K_{\\text{true}}(t_j)\\right|^2}$。\n这个过程是确定性的，并直接实现了所推导的原理。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem of reconstructing a memory kernel from a synthetic\n    velocity autocorrelation function (VACF) for three test cases and\n    computes the reconstruction error.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        (1.0, 1.5),  # Case 1\n        (0.25, 1.0), # Case 2\n        (0.10, 1.0), # Case 3\n    ]\n\n    # Numerical specifications\n    dt = 1e-3\n    T = 1.5\n    N = int(T / dt)\n    t_grid = np.linspace(0, T, N + 1)\n    \n    evaluation_times = np.array([0.01, 0.20, 0.50, 1.00])\n    evaluation_indices = (evaluation_times / dt).astype(int)\n\n    results = []\n    for a, b in test_cases:\n        # Step 1: Generate synthetic VACF data phi(t)\n        phi = generate_phi(a, b, t_grid)\n\n        # Step 2: Reconstruct the memory kernel K(t) numerically\n        K_num = reconstruct_K(phi, dt, N)\n\n        # Step 3: Evaluate the error\n        error = calculate_error(K_num, a, b, evaluation_times, evaluation_indices)\n        results.append(error)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.10f}' for r in results)}]\")\n\ndef generate_phi(a, b, t_grid):\n    \"\"\"\n    Generates the normalized VACF phi(t) for a given memory kernel K(t) = a*exp(-b*t).\n    The function phi(t) is the solution to phi'' + b*phi' + a*phi = 0\n    with phi(0)=1, phi'(0)=0.\n    \"\"\"\n    discriminant = b**2 - 4 * a\n    \n    if discriminant > 0: # Overdamped case\n        sqrt_delta = np.sqrt(discriminant)\n        r1 = (-b + sqrt_delta) / 2\n        r2 = (-b - sqrt_delta) / 2\n        C1 = -r2 / (r1 - r2)\n        C2 = r1 / (r1 - r2)\n        phi = C1 * np.exp(r1 * t_grid) + C2 * np.exp(r2 * t_grid)\n    elif discriminant == 0: # Critically damped case\n        r = -b / 2\n        C1 = 1\n        C2 = -r\n        phi = (C1 + C2 * t_grid) * np.exp(r * t_grid)\n    else: # Underdamped case\n        omega = np.sqrt(4 * a - b**2) / 2\n        alpha = b / 2\n        C1 = 1\n        C2 = alpha / omega\n        phi = np.exp(-alpha * t_grid) * (C1 * np.cos(omega * t_grid) + C2 * np.sin(omega * t_grid))\n        \n    return phi\n\ndef reconstruct_K(phi, dt, N):\n    \"\"\"\n    Numerically reconstructs the memory kernel K(t) from phi(t)\n    using the derived recursive formula.\n    \"\"\"\n    K_num = np.zeros(N + 1)\n    dt_sq = dt**2\n\n    # The recursion is for n >= 1. We compute up to K_{N-1}\n    # as the derivative approximation needs phi_{n+1}.\n    for n in range(1, N):\n        # Derivative part: -(phi_{n+1} - phi_{n-1}) / (2 * dt^2)\n        derivative_part = -(phi[n + 1] - phi[n - 1]) / (2 * dt_sq)\n        \n        # Summation part: sum_{j=1}^{n-1} K_{n-j} * phi_j\n        # This is a discrete convolution.\n        sum_part = 0.0\n        if n > 1:\n            # Vectorized summation for efficiency\n            # K_indices from 1 to n-1. phi_indices from n-1 down to 1.\n            sum_part = np.dot(K_num[1:n], phi[n-1:0:-1])\n        \n        K_num[n] = derivative_part - sum_part\n        \n    return K_num\n\ndef calculate_error(K_num, a, b, eval_times, eval_indices):\n    \"\"\"\n    Calculates the root-mean-square error between the numerical\n    and true memory kernel at specified evaluation times.\n    \"\"\"\n    K_true_eval = a * np.exp(-b * eval_times)\n    K_num_eval = K_num[eval_indices]\n    \n    squared_errors = (K_num_eval - K_true_eval)**2\n    mean_squared_error = np.mean(squared_errors)\n    rms_error = np.sqrt(mean_squared_error)\n    \n    return rms_error\n\nsolve()\n```", "id": "2447068"}, {"introduction": "前面的练习使用了理想化或给定的相关函数。本实践则探讨了一个在真实分子动力学模拟中至关重要的问题：模拟算法的选择如何影响计算出的 VACF，并进而影响输运系数？你将分析动量守恒和动量不守恒的动力学之间的深刻差异，特别是关注 VACF 著名的“长时尾”现象。这个概念性问题对于培养产生物理上有意义的模拟结果所必需的批判性判断力至关重要 [@problem_id:2447093]。", "problem": "在一个三维周期性边界条件下的简单单原子流体的平衡态分子动力学 (MD) 模拟中，比较在相同数密度和温度下的两种情况：(i) 确定性的牛顿动力学，其中力是成对相加的，并遵守牛顿第三定律，因此总动量严格守恒；(ii) 一种随机的 Andersen 恒温器，它以 $\\nu$ 的泊松速率，用一个从 Maxwell–Boltzmann 分布中独立抽取的速度来替换某个粒子的速度，从而破坏了动量守恒。设速度自相关函数 (VACF) 定义为 $C_{v}(t)=\\langle \\mathbf{v}(0)\\cdot \\mathbf{v}(t)\\rangle$，其中尖括号表示平衡系综平均，并通过 Green–Kubo 关系 $D=\\frac{1}{3}\\int_{0}^{\\infty} C_{v}(t)\\, \\mathrm{d}t$ 来定义自扩散系数。对于一个大到足以表现出流体动力学行为的系统，哪个陈述最能定性地描述破坏动量守恒对 $C_{v}(t)$ 和对 $D$ 的 Green–Kubo 估计值的影响？\n\nA. 在动量不守恒的 Andersen 动力学中，$C_{v}(t)$ 的长时代数流体动力学拖尾被抑制，并被一个时间尺度由 $\\nu^{-1}$ 决定的指数衰减所取代；因此，与相同状态点下的动量守恒牛顿动力学相比，该积分收敛更快，且得到一个更小的 $D$ 值。\n\nB. 只要温度相同，$C_{v}(t)$ 不会因动力学选择而改变，因此两种情况下的 $D$ 是相同的。\n\nC. 动量守恒的破坏导致 $C_{v}(t)$ 出现振幅不衰减的持续振荡，这是由于缺少守恒的动量模式，从而使得用于计算 $D$ 的时间积分不收敛。\n\nD. 因为动量不守恒，能量均分定理被违背，且初始值 $C_{v}(0)$ 不同于 $k_{\\mathrm{B}}T/m$ 乘以速度分量的数量，这使得 Green–Kubo 关系无效。", "solution": "首先将验证问题陈述的有效性。\n\n**步骤1：提取已知条件**\n- 系统：简单单原子流体，三维 ($d=3$)，处于平衡态。\n- 边界条件：周期性。\n- 状态点：恒定的数密度 ($n$) 和温度 ($T$) 。\n- 情况 (i)：确定性牛顿动力学。力是成对相加的，并遵守牛顿第三定律。总动量守恒。\n- 情况 (ii)：随机 Andersen 恒温器。以泊松速率 $\\nu$，一个随机粒子的速度被一个从 Maxwell–Boltzmann 分布中抽取的新速度所取代。总动量不守恒。\n- 速度自相关函数 (VACF)：$C_{v}(t)=\\langle \\mathbf{v}(0)\\cdot \\mathbf{v}(t)\\rangle$。尖括号 $\\langle \\dots \\rangle$ 表示平衡系综平均。\n- 自扩散系数，Green-Kubo 关系：$D=\\frac{1}{3}\\int_{0}^{\\infty} C_{v}(t)\\, \\mathrm{d}t$。\n- 假设：系统足够大，以至于流体动力学行为是相关的。\n- 问题：比较情况 (i) 和情况 (ii) 中 $C_{v}(t)$ 的定性行为以及 $D$ 的值。\n\n**步骤2：使用提取的已知条件进行验证**\n该问题描述了计算统计物理中的一个标准情景。它比较了从两种常见的模拟方法中导出的输运性质：类微正则系综动力学（牛顿动力学，在短时间尺度上为 NVE，总动量守恒）和正则系综动力学（Andersen 恒温器，NVT）。\n\n1.  **科学依据：** 所提出的概念是统计力学和分子模拟的基础。Newtonian 和 Andersen 动力学是标准算法。用于输运系数的 Green-Kubo 关系是线性响应理论的基石。对于动量守恒的流体，其速度自相关函数中存在长时拖尾是一个已被公认的现象，并得到了理论（模式耦合理论）和模拟（Alder 和 Wainwright）的证实。动量不守恒的恒温器对这些拖尾的抑制作用也是一个已知并被理解的效应。该问题在科学上是合理的。\n2.  **问题定义明确：** 该问题表述清晰，比较了两种不同且定义明确的物理模型。它要求对一个特定可观测量 ($C_v(t)$) 和一个导出属性 ($D$) 的差异进行定性描述，对此存在一个基于已确立物理学的唯一答案。\n3.  **客观性：** 该问题以精确的技术语言陈述，没有歧义或主观论断。\n\n问题陈述在内部是一致的，在模拟模型的背景下是物理上现实的，并且在科学上是合理的。这是一个有效的问题。\n\n**步骤3：结论与行动**\n问题是有效的。将推导一个完整的解。\n\n**推导与分析**\n\n自扩散系数 $D$ 通过 Green-Kubo 公式与速度自相关函数 $C_v(t)$ 的时间积分相关：\n$$D = \\frac{1}{3} \\int_{0}^{\\infty} C_{v}(t) \\, \\mathrm{d}t = \\frac{1}{3} \\int_{0}^{\\infty} \\langle \\mathbf{v}_i(0) \\cdot \\mathbf{v}_i(t) \\rangle \\, \\mathrm{d}t$$\n其中 $\\mathbf{v}_i(t)$ 是被标记粒子 $i$ 在时间 $t$ 的速度，平均是对平衡态和所有粒子进行的。$C_v(t)$ 的长时行为对这个积分的值至关重要。这种长时行为由系统中最慢的衰减模式决定，这些模式是与守恒量相关的流体动力学模式。\n\n**情况 (i)：动量守恒的牛顿动力学**\n在动量守恒的流体中，总动量是一个守恒量。被标记粒子的速度可以与流体的集体流体动力学模式耦合。具体来说，粒子的速度与横向动量模式（剪切模式或涡旋模式）耦合。一个粒子在流体中产生一个涡旋，这个涡旋缓慢地扩散开去，并携带动量。同一个涡旋可以在稍后的时间反作用于该粒子，导致其速度存在持续的相关性。模式耦合理论预测，这种机制导致 VACF 的缓慢代数衰减，即所谓的“长时拖尾”。对于三维流体 ($d=3$)，这个拖尾的行为如下：\n$$C_{v}(t) \\propto t^{-3/2} \\quad \\text{当 } t \\text{ 很大时}$$\n这个拖尾的系数是正的。由于指数 $-3/2$ 小于 $-1$，积分 $\\int_{0}^{\\infty} C_{v}(t) \\, \\mathrm{d}t$ 是收敛的，但缓慢的衰减为扩散系数 $D$ 提供了一个不可忽略的正贡献。\n\n**情况 (ii)：动量不守恒的 Andersen 动力学**\nAndersen 恒温器引入了随机事件，其中粒子的速度根据温度 $T$ 下的 Maxwell-Boltzmann 分布被完全重新随机化。这个过程明确地破坏了总动量的守恒。每个这样的事件都充当动量的“汇”，因为粒子在“碰撞”前的动量丢失了，并被一个新的、随机的动量所取代。\n因为总动量不再是守恒量，相应的流体动力学剪切模式不再是真正的、缓慢的流体动力学模式。它们获得了一个由恒温过程决定的有限衰减率。因此，由这些模式介导的长程空间和时间相关性被抑制了。以速率 $\\nu$ 发生的随机碰撞引入了一个量级为 $\\nu^{-1}$ 的截止时间尺度。任何速度相关性都会被这些随机事件破坏。因此，$C_v(t)$ 的幂律拖尾在长时被一个更快的指数衰减所取代：\n$$C_{v}(t) \\propto e^{-t/\\tau} \\quad \\text{当 } t \\text{ 很大时}$$\n其中衰减时间 $\\tau$ 与恒温器碰撞频率 $\\nu$ 及其他流体性质有关。\n\n**比较及对 $D$ 的影响**\n1.  **对 $C_{v}(t)$ 的影响：** 在动量守恒的情况下存在的长时代数拖尾 ($t^{-3/2}$) 在动量不守恒的情况下被抑制，并被一个更快的指数衰减所取代。\n2.  **对 $D$ 的影响：** 在动量守恒的情况下，长时拖尾对计算 $D$ 的积分有正贡献。抑制这个正贡献意味着，与牛顿动力学情况相比，在 Andersen 动力学情况下 $C_{v}(t)$ 曲线下的总面积会更小。因此，$D$ 的 Green-Kubo 估计值会更小。\n3.  **收敛性：** 指数衰减显著快于 $t^{-3/2}$ 的代数衰减。因此，在使用 Andersen 恒温器时，计算 $D$ 的积分收敛得更快。\n\n**选项评估**\n\n**A. 在动量不守恒的 Andersen 动力学中，$C_{v}(t)$ 的长时代数流体动力学拖尾被抑制，并被一个时间尺度由 $\\nu^{-1}$ 决定的指数衰减所取代；因此，与相同状态点下的动量守恒牛顿动力学相比，该积分收敛更快，且得到一个更小的 $D$ 值。**\n该陈述与上述分析完全一致。Andersen 恒温器破坏动量守恒，从而抑制了流体动力学拖尾，并用一个与恒温器速率 $\\nu$ 相关的指数截断取而代之。这种对正贡献的抑制减少了总积分，导致计算出的 $D$ 更小。指数衰减确保了积分的更快收敛。\n**结论：正确。**\n\n**B. 只要温度相同，$C_{v}(t)$ 不会因动力学选择而改变，因此两种情况下的 $D$ 是相同的。**\n这是不正确的。虽然静态平衡性质（如温度或对关联函数）可能相同，但像时间相关函数这样的动态性质从根本上取决于运动方程。守恒量的存在与否会极大地改变相关函数的长时行为。\n**结论：不正确。**\n\n**C. 动量守恒的破坏导致 $C_{v}(t)$ 出现振幅不衰减的持续振荡，这是由于缺少守恒的动量模式，从而使得用于计算 $D$ 的时间积分不收敛。**\n这是不正确的。Andersen 恒温器是一个随机的、耗散的过程，它会加速相关性向其平衡值零的衰减。它不会引入不衰减的振荡。一个不衰减的相关函数将违背平衡系统中的遍历性和混合性原理。对于表现出标准扩散的系统，计算 $D$ 的积分必须是收敛的。\n**结论：不正确。**\n\n**D. 因为动量不守恒，能量均分定理被违背，且初始值 $C_{v}(0)$ 不同于 $k_{\\mathrm{B}}T/m$ 乘以速度分量的数量，这使得 Green–Kubo 关系无效。**\n这是不正确的，原因有多个。\n首先，Andersen 恒温器是专门设计用于从正则 (NVT) 系综生成构型的。处于正则系综平衡态的系统严格遵守能量均分定理。\n其次，VACF 的初始值 $C_{v}(0) = \\langle \\mathbf{v}(0) \\cdot \\mathbf{v}(0) \\rangle = \\langle |\\mathbf{v}|^2 \\rangle$ 是一个静态性质。根据能量均分定理，$\\langle \\frac{1}{2} m v_x^2 \\rangle = \\frac{1}{2} k_{\\mathrm{B}} T$，这意味着 $\\langle v_x^2 \\rangle = k_{\\mathrm{B}}T/m$。对于三维空间，$C_{v}(0) = \\langle v_x^2 + v_y^2 + v_z^2 \\rangle = 3 k_{\\mathrm{B}}T/m$。这恰好是“$k_{\\mathrm{B}}T/m$ 乘以速度分量的数量（即 3）”。所以 $C_{v}(0)$ 并没有不同。\n第三，Green-Kubo 关系是线性响应理论对于平衡系统的一个普遍结果。动力学的选择不会使关系本身失效；它只改变了必须积分的时间相关函数的形式。\n**结论：不正确。**", "answer": "$$\\boxed{A}$$", "id": "2447093"}]}