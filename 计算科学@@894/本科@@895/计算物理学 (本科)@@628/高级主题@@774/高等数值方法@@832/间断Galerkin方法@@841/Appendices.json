{"hands_on_practices": [{"introduction": "显式时间步进格式的一个关键实践方面是稳定性。本练习将带您深入探讨双曲问题的DG方法稳定性的核心，通过推导著名的Courant-Friedrichs-Lewy (CFL)条件来实现。对于任何使用DG方法的计算科学家来说，理解最大稳定时间步长如何依赖于网格尺寸 $h$ 和多项式阶数 $p$ 是一项基本技能。[@problem_id:2443069]", "problem": "在一个一维周期性域上，提出了一个常系数线性平流初值问题。考虑偏微分方程 $u_{t} + a\\,u_{x} = 0$，其定义在 $x \\in [0,L]$ 上，具有常数平流速度 $a \\in \\mathbb{R}$ 和周期性边界条件。该域被划分为一个由 $N$ 个宽度为 $h = L/N$ 的单元组成的均匀网格。在每个单元上，用一个 $p$ 次多项式来逼近 $u$，并使用来自相同多项式空间的检验函数来构建一个间断伽辽金（DG）半离散格式。在单元交界面处使用迎风数值通量。使用显式前向欧拉法对所得系统进行时间推进。\n\n从每个单元上的弱形式和 DG 数值通量的定义出发，为保证显式时间推进的稳定性，推导由 Courant–Friedrichs–Lewy (CFL) 条件所要求的充分时间步长限制。你的推导必须：\n- 从逐单元质量内积下的半离散能量入手，并解释交界面项如何控制能量的增长。\n- 仅使用标准的一维多项式性质作为基础，例如区间上 $p$ 次多项式的尖锐迹不等式，并利用域的周期性来消除全局边界项。\n- 清楚地指明最终限制条件中对多项式阶数 $p$ 的依赖关系是如何产生的。\n\n然后，对于具体参数 $L = 1.0$ m, $N = 50$, $a = 1.5$ m/s, 和 $p = 2$，评估你的结果。将最大稳定时间步长报告为一个四舍五入到四位有效数字的实数。最终时间步长以秒（s）为单位表示。", "solution": "本问题要求推导应用于一维线性平流方程的间断伽辽金（DG）方法的充分时间步长限制，并进行数值评估。推导必须基于对显式前向欧拉时间积分格式的能量分析。\n\n控制偏微分方程（PDE）是线性平流方程：\n$$u_t + a u_x = 0$$\n定义在一个周期性域 $x \\in [0,L]$ 上，具有常数平流速度 $a$。\n\n首先，我们建立半离散 DG 格式。域被划分为 $N$ 个宽度为 $h = L/N$ 的均匀单元 $I_j = [x_{j-1/2}, x_{j+1/2}]$。近似解 $u_h(x,t)$ 在空间 $V_h$ 中寻找，该空间由在每个单元 $I_j$ 上次数最高为 $p$ 的多项式函数组成。\n单元 $I_j$ 上的弱形式是通过将 PDE 乘以一个检验函数 $v_h \\in P^p(I_j)$ 并在 $I_j$ 上积分得到的：\n$$\\int_{I_j} (u_h)_t v_h \\,dx + \\int_{I_j} a (u_h)_x v_h \\,dx = 0$$\n对平流项应用分部积分法得到：\n$$\\int_{I_j} (u_h)_t v_h \\,dx - \\int_{I_j} a u_h (v_h)_x \\,dx + [a u_h v_h]_{x_{j-1/2}}^{x_{j+1/2}} = 0$$\n边界项是 $[a u_h v_h]_{x_{j-1/2}}^{x_{j+1/2}} = a u_h(x_{j+1/2}^-)v_h(x_{j+1/2}^-) - a u_h(x_{j-1/2}^+)v_h(x_{j-1/2}^+)$，其中 $u_h(x^\\pm)$ 表示从左/右侧的极限。在 DG 方法中，解在单元交界面上是间断的。单值通量 $a u_h$ 被一个数值通量 $\\hat{f}(u_h^-, u_h^+)$ 所取代。对于迎风通量，$\\hat{f}(u^-, u^+) = a u^{\\text{upwind}}$，其中 $u^{\\text{upwind}}$ 是来自迎风方向的值。如果 $a > 0$，则为 $u^-$；如果 $a < 0$，则为 $u^+$。这可以紧凑地写为 $\\hat{f} = \\frac{a}{2}(u^-+u^+) - \\frac{|a|}{2}(u^+-u^-)$。\n\n于是 DG 格式为：对每个单元 $I_j$，寻找 $u_h|_{I_j} \\in P^p(I_j)$ 使得对于所有 $v_h \\in P^p(I_j)$：\n$$\\int_{I_j} (u_h)_t v_h \\,dx - \\int_{I_j} a u_h (v_h)_x \\,dx + \\hat{f}_{j+1/2}v_h(x_{j+1/2}^-) - \\hat{f}_{j-1/2}v_h(x_{j-1/2}^+) = 0$$\n其中 $\\hat{f}_{j+1/2} = \\hat{f}(u_h(x_{j+1/2}^-), u_h(x_{j+1/2}^+))$。\n\n为了进行能量分析，我们设置检验函数 $v_h = u_h$。第一项变为 $\\frac{1}{2}\\frac{d}{dt}\\int_{I_j} u_h^2 \\,dx$。第二项是 $-\\int_{I_j} a u_h (u_h)_x \\,dx = -\\frac{a}{2}\\int_{I_j} \\frac{d}{dx}(u_h^2) \\,dx = -\\frac{a}{2}[u_h^2(x_{j+1/2}^-) - u_h^2(x_{j-1/2}^+)]$。\n将这些代入弱形式得到：\n$$\\frac{1}{2}\\frac{d}{dt}\\int_{I_j} u_h^2 \\,dx - \\frac{a}{2}(u_h(x_{j+1/2}^-)^2 - u_h(x_{j-1/2}^+)^2) + \\hat{f}_{j+1/2}u_h(x_{j+1/2}^-) - \\hat{f}_{j-1/2}u_h(x_{j-1/2}^+) = 0$$\n令 $\\|u_h\\|^2 = \\sum_{j=1}^N \\int_{I_j} u_h^2 \\,dx$ 为总能量。将局部能量方程对所有单元 $j=1, \\dots, N$ 求和：\n$$ \\frac{1}{2}\\frac{d}{dt}\\|u_h\\|^2 + \\sum_{j=1}^N \\left( -\\frac{a}{2}(u_h(x_{j+1/2}^-)^2 - u_h(x_{j-1/2}^+)^2) + \\hat{f}_{j+1/2}u_h(x_{j+1/2}^-) - \\hat{f}_{j-1/2}u_h(x_{j-1/2}^+) \\right) = 0 $$\n涉及交界面值的项构成一个伸缩求和。在单元 $I_k$ 和 $I_{k+1}$ 之间的一个通用交界面 $x_{k+1/2}$ 处，贡献项为：\n来自 $I_k$（在其右边界）：$-\\frac{a}{2}u_h(x_{k+1/2}^-)^2 + \\hat{f}_{k+1/2}u_h(x_{k+1/2}^-)$\n来自 $I_{k+1}$（在其左边界）：$+\\frac{a}{2}u_h(x_{k+1/2}^+)^2 - \\hat{f}_{k+1/2}u_h(x_{k+1/2}^+)$\n在 $x_{k+1/2}$ 处的交界面项之和为 $\\frac{a}{2}(u_h(x_{k+1/2}^+)^2 - u_h(x_{k+1/2}^-)^2) - \\hat{f}_{k+1/2}[u_h]_{k+1/2}$，其中 $[u_h] = u_h^+ - u_h^-$。\n代入迎风通量 $\\hat{f}_{k+1/2} = \\frac{a}{2}(u_h^-+u_h^+) - \\frac{|a|}{2}[u_h]$：\n$$\\text{Sum} = \\frac{a}{2}(u_h^+ + u_h^-)[u_h] - \\left( \\frac{a}{2}(u_h^-+u_h^+) - \\frac{|a|}{2}[u_h] \\right)[u_h] = \\frac{|a|}{2}[u_h]_{k+1/2}^2$$\n由于周期性，没有全局边界项。半离散能量方程变为：\n$$\\frac{d}{dt}\\|u_h\\|^2 = -|a| \\sum_{k=1}^N [u_h]_{k-1/2}^2 \\le 0$$\n这表明半离散格式是能量耗散的（或稳定的），耗散发生在解有跳跃的交界面处。\n\n接下来，我们考虑使用前向欧拉时间积分的全离散格式。半离散系统可以写成 $\\frac{d}{dt}u_h = L_h(u_h)$。前向欧拉法是 $u_h^{n+1} = u_h^n + \\Delta t L_h(u_h^n)$。\n在时间步 $n+1$ 的能量是：\n$$\\|u_h^{n+1}\\|^2 = \\|u_h^n + \\Delta t L_h(u_h^n)\\|^2 = \\|u_h^n\\|^2 + 2\\Delta t (u_h^n, L_h(u_h^n)) + \\Delta t^2 \\|L_h(u_h^n)\\|^2$$\n其中 $(f,g) = \\sum_j \\int_{I_j} fg \\,dx$。从半离散分析可知，$(u_h, L_h(u_h)) = \\frac{1}{2}\\frac{d}{dt}\\|u_h\\|^2 = -\\frac{|a|}{2}\\sum_k [u_h]_k^2$。\n将此代入能量演化方程得到：\n$$\\|u_h^{n+1}\\|^2 = \\|u_h^n\\|^2 - \\Delta t |a| \\sum_k [u_h^n]_k^2 + \\Delta t^2 \\|L_h(u_h^n)\\|^2$$\n为了稳定性，我们要求 $\\|u_h^{n+1}\\|^2 \\le \\|u_h^n\\|^2$。这导出了条件：\n$$\\Delta t^2 \\|L_h(u_h^n)\\|^2 \\le \\Delta t |a| \\sum_k [u_h^n]_k^2$$\n对于任何存在跳跃的解（$\\sum [u_h]^2 \\ne 0$），我们必须有：\n$$ \\Delta t \\le \\frac{|a| \\sum_k [u_h^n]_k^2}{\\|L_h(u_h^n)\\|^2}$$\n这个条件必须对任何非平凡解 $u_h \\in V_h$ 成立。因此，我们需要一个基于右侧对所有 $u_h$ 的最小值的时间步长限制。这需要一个将算子范数 $\\|L_h(u_h)\\|$ 与耗散项 $\\sum [u_h]^2$ 联系起来的估计。此类不等式的简单应用导致了一个悲观的时间步长限制，其标度为 $1/p^4$ 或 $1/p^2$。\n\n通过对算子 $L_h$ 进行谱分析可以得到一个更尖锐的结果。前向欧拉法的稳定性要求对于 $L_h$ 的所有特征值 $\\lambda$，值 $1+\\Delta t \\lambda$ 必须位于复平面内的单位圆内。这施加了约束 $\\Delta t \\le \\min_{\\lambda \\ne 0} \\frac{-2 \\text{Re}(\\lambda)}{|\\lambda|^2}$。\n对带迎风通量的一维 DG 算子的详细谱分析表明，特征值受到的约束方式使得最严格的条件与多项式次数 $p$ 成反比。在 DG 方法的分析中，这是一个标准结果，即这会导致一个形式如下的充分时间步长限制：\n$$\\Delta t \\le \\frac{h}{|a|(2p+1)}$$\n因子 $(2p+1)$ 源于离散微分算子的谱性质与通量项的结合，特别是与网格上高频模式的行为有关。尽管从第一性原理完全推导这个因子技术性很强，且依赖于正交多项式的高级性质，但它是该格式已确立的尖锐结果。对 $p$ 的依赖是 $p$ 次多项式的迹逆不等式的直接结果，该不等式确立了对于一个多项式 $v$，$\\|v'\\|_{L^2(I_j)}$ 可以由其在迹上的值来界定，而这些值构成了提供耗散的跳跃。这种关系对于高阶多项式最为明显，需要更小的时间步长来保持稳定性。\n\n现在，我们为给定参数评估此限制：$L = 1.0$ m, $N = 50$, $a = 1.5$ m/s, 和 $p = 2$。\n单元宽度为 $h = L/N = 1.0 / 50 = 0.02$ m。\n平流速度为 $|a| = 1.5$ m/s。\n多项式阶数为 $p=2$。\n最大稳定时间步长 $\\Delta t_{\\text{max}}$ 是：\n$$\\Delta t_{\\text{max}} = \\frac{h}{|a|(2p+1)} = \\frac{0.02}{1.5 \\times (2 \\cdot 2 + 1)} = \\frac{0.02}{1.5 \\times 5} = \\frac{0.02}{7.5}$$\n$$\\Delta t_{\\text{max}} = \\frac{2}{750} = \\frac{1}{375} \\approx 0.002666... \\text{ s}$$\n四舍五入到四位有效数字，我们得到 $\\Delta t_{\\text{max}} = 0.002667$ s。\n最终答案要求为一个实数。", "answer": "$$\\boxed{0.002667}$$", "id": "2443069"}, {"introduction": "一个数值方法的理论优美性依赖于其正确的实现。本练习探讨了一个常见的陷阱：使用不充分的数值积分，这可能会破坏对称内罚DG (SIPG) 方法的稳定性。通过分析欠积分的后果，您将对“矫顽性”这一概念及其在确保椭圆问题解的稳定性和可靠性方面的关键作用有更深刻的理解。[@problem_id:2386861]", "problem": "考虑在有界 Lipschitz 域 $\\Omega \\subset \\mathbb{R}^d$ 上的标量泊松问题，其带有齐次 Dirichlet 边界条件，\n$$\n-\\nabla \\cdot \\left(\\kappa \\nabla u \\right) = f \\quad \\text{in } \\Omega, \n\\qquad u = 0 \\quad \\text{on } \\partial \\Omega,\n$$\n其中 $\\kappa(\\boldsymbol{x}) \\ge \\kappa_{\\min} > 0$ 是给定的系数，$f$ 是给定的源项。令 $\\mathcal{T}_h$ 为 $\\Omega$ 的一个形状正则的网格，令 $V_h$ 为 $\\mathcal{T}_h$ 上总次数至多为 $p \\ge 1$ 的分片多项式构成的间断有限元空间。考虑标准的对称内部罚间断 Galerkin (DG) 方法，在该方法中，刚度矩阵来自一个双线性形式，该形式通过对单元梯度项和通过跳跃、平均和罚项耦合单元迹的边项进行积分得到。\n\n假设，在组装刚度矩阵时，您将双线性形式中的所有精确积分替换为相对于被积函数多项式次数积分不足的数值求积规则。特别地，所选的求积规则不能精确地对单元梯度项和边项中出现的多项式（或映射后的多项式）次数进行积分。\n\n下列哪项结果最准确地描述了由于这种积分不足可能发生的情况？\n\nA. 离散双线性形式可能在 DG 能量范数下失去矫顽性，导致伪零能（沙漏）模式、网格相关的振荡，以及可能的不稳定或收敛性丧失。\n\nB. 只有右端载荷向量受到影响，最多产生一个常数偏移；刚度矩阵仍然表示具有相同稳定性和收敛性质的同一算子。\n\nC. 选择一个足够大的罚参数可以完全消除积分不足对稳定性和精度的任何不利影响。\n\nD. 尽管使用了对称内部罚格式，刚度矩阵必然会变得非对称。\n\nE. 积分不足起到了额外的数值耗散作用，总是能提高稳定性且从不降低精度。", "solution": "用户要求分析在用于泊松问题的对称内部罚间断 Galerkin (SIPG) 方法中，对双线性形式进行积分不足所带来的后果。\n\n### 问题陈述验证\n\n首先，我将验证问题陈述。\n\n**第 1 步：提取给定信息**\n- **偏微分方程**: $-\\nabla \\cdot \\left(\\kappa \\nabla u \\right) = f$，在有界 Lipschitz 域 $\\Omega \\subset \\mathbb{R}^d$ 中。\n- **边界条件**: 在 $\\partial \\Omega$ 上 $u = 0$ (齐次 Dirichlet)。\n- **系数**: $\\kappa(\\boldsymbol{x}) \\ge \\kappa_{\\min} > 0$。\n- **源项**: $f(\\boldsymbol{x})$。\n- **网格**: $\\mathcal{T}_h$，$\\Omega$ 的一个形状正则网格。\n- **有限元空间**: $V_h$，分片多项式空间，总次数至多为 $p \\ge 1$。\n- **数值方法**: 对称内部罚间断 Galerkin (SIPG) 方法。\n- **核心问题**: 刚度矩阵双线性形式的精确积分被“积分不足”的数值求积规则所替代，这意味着它们不能精确地对生成的多项式进行积分。\n\n**第 2 步：使用提取的给定信息进行验证**\n- **科学依据**: 该问题在偏微分方程数值分析理论中有充分的依据，特别是在有限元方法领域。泊松方程、SIPG 方法和数值求积的概念都是标准课题。\n- **适定性**: 该问题要求在一个明确定义的数值算法中，分析一个特定程序选择（积分不足）的后果。这是高等数值方法课程中的一个标准问题，并且基于稳定性和收敛性的数学理论有明确的答案。\n- **客观性**: 问题以精确、客观、技术性的语言陈述，没有歧义或主观论断。\n- **完整性与一致性**: 问题提供了足够的背景来理解设置。没有缺失的定义或矛盾的陈述。\n- **现实性**: 积分不足是计算代码实现中的一个现实考虑，有时为了降低计算成本而故意使用（称为“减缩积分”）。因此，分析其后果是一项实用且重要的任务。\n\n**第 3 步：结论与行动**\n问题陈述是有效的。它是一个计算科学中的标准、适定的问题。我将继续进行详细解答。\n\n### 推导与选项分析\n\nDG 方法寻求一个解 $u_h \\in V_h$，使得对于所有测试函数 $v_h \\in V_h$，下式成立：\n$$a_h(u_h, v_h) = l_h(v_h)$$\n其中 $l_h(v_h) = \\int_\\Omega f v_h \\, d\\boldsymbol{x}$ 是载荷向量的线性形式，$a_h(u_h, v_h)$ 是刚度矩阵的 SIPG 双线性形式。SIPG 双线性形式由下式给出：\n$$\na_h(u_h, v_h) = \\sum_{K \\in \\mathcal{T}_h} \\int_K \\kappa \\nabla u_h \\cdot \\nabla v_h \\, d\\boldsymbol{x} - \\sum_{e \\in \\mathcal{F}_h} \\int_e \\left( \\{ \\kappa \\nabla u_h \\} \\cdot \\llbracket v_h \\rrbracket + \\{ \\kappa \\nabla v_h \\} \\cdot \\llbracket u_h \\rrbracket \\right) ds + \\sum_{e \\in \\mathcal{F}_h} \\int_e \\sigma_e \\llbracket u_h \\rrbracket \\cdot \\llbracket v_h \\rrbracket ds\n$$\n这里，$\\mathcal{F}_h$ 是所有边的集合，$\\{ \\cdot \\}$ 表示平均，$\\llbracket \\cdot \\rrbracket$ 表示跨边的跳跃算子，$\\sigma_e$ 是罚参数，它依赖于局部网格尺寸 $h_e$ 和多项式次数 $p$。\n\n该方法的稳定性由双线性形式 $a_h(\\cdot, \\cdot)$ 在 DG 能量范数下的矫顽性保证，该范数定义为 $\\|v_h\\|_{DG}^2 = a_h(v_h, v_h)$（对于足够大的罚参数）。具体来说，存在一个常数 $C_{coer} > 0$ 使得：\n$$\na_h(v_h, v_h) \\ge C_{coer} \\|v_h\\|^2_{DG} \\quad \\forall v_h \\in V_h\n$$\n其中\n$$\n\\|v_h\\|^2_{DG} = \\sum_{K \\in \\mathcal{T}_h} \\int_K \\kappa |\\nabla v_h|^2 \\, d\\boldsymbol{x} + \\sum_{e \\in \\mathcal{F}_h} \\int_e \\sigma_e |\\llbracket v_h \\rrbracket|^2 ds\n$$\n这种矫顽性确保了最终的刚度矩阵 $A$ 是对称正定的，这保证了唯一且稳定的解。\n\n问题指出，精确积分 $\\int$ 被非精确的数值求积所替代，我们记作 $(\\cdot)_q$。离散双线性形式变为 $a_{h,q}(u_h, v_h)$。积分不足的根本问题在于，得到的离散形式 $a_{h,q}(v_h, v_h)$ 对于所有非零的 $v_h \\in V_h$ 可能不再是正的。\n\n考虑一个非零函数 $v_h \\in V_h$。$a_h(v_h, v_h)$ 中的被积函数，如 $\\kappa |\\nabla v_h|^2$ 和 $\\sigma_e |\\llbracket v_h \\rrbracket|^2$，是非负多项式。如果求积规则是积分不足的，它可能会使用一组求积点，而这些多项式被积函数在这些点上恰好为零。例如，如果 $\\nabla v_h$ 在所有单元求积点上为零，并且 $\\llbracket v_h \\rrbracket$ 在所有边求积点上为零，那么基于求积的范数将为零：$\\|v_h\\|_{DG,q}^2 = 0$。即使 $v_h$ 不是零函数，这种情况也可能发生。\n\n一个非零函数 $v_h$，若其离散能量 $a_{h,q}(v_h, v_h)$ 为零或负，则被称为**伪模式**或**零能模式**。术语**沙漏模式**是结构力学中使用低阶单元的一个经典例子。如果存在这样的模式，离散刚度矩阵 $A_q$ 将不再是正定的。它会变成奇异的（如果 $a_{h,q}(v_h, v_h) = 0$）或不定的（如果 $a_{h,q}(v_h, v_h) < 0$）。\n\n一个奇异的刚度矩阵意味着线性系统 $A_q \\boldsymbol{U} = \\boldsymbol{F}$ 没有唯一解。解会被这些伪模式的任意倍数所污染，导致严重的、非物理的振荡。这是数值不稳定性的表现。这种不稳定性破坏了方法的收敛性质；加密网格不会得到更好的解。因此，积分不足会导致矫顽性的丧失，从而引出不稳定性。\n\n现在我将分析每个选项。\n\n**A. 离散双线性形式可能在 DG 能量范数下失去矫顽性，导致伪零能（沙漏）模式、网格相关的振荡，以及可能的不稳定或收敛性丧失。**\n该陈述是对上述讨论的精确和正确的总结。失去矫顽性是根本的数学失效。伪零能模式是积分不足的刚度算子核空间中的向量。这些模式表现为解中的非物理振荡。综合效应是数值不稳定性和理论收敛率的丧失。\n**结论：正确。**\n\n**B. 只有右端载荷向量受到影响，最多产生一个常数偏移；刚度矩阵仍然表示具有相同稳定性和收敛性质的同一算子。**\n这是不正确的。问题明确指出**双线性形式**中的积分是积分不足的。双线性形式定义了刚度矩阵。双线性形式中的错误直接影响算子、其稳定性及其收敛性质。右端载荷向量的错误会是另一个问题，但这里描述的缺陷在于矩阵本身。\n**结论：不正确。**\n\n**C. 选择一个足够大的罚参数可以完全消除积分不足对稳定性和精度的任何不利影响。**\n这是不正确的。罚参数 $\\sigma_e$ 是罚项积分 $\\int_e \\sigma_e |\\llbracket v_h \\rrbracket|^2 ds$ 内的一个乘法因子。如果求积规则过于粗糙，以至于对某个伪模式计算出的该积分为零（例如，如果 $\\llbracket v_h \\rrbracket$ 在所有边求积点上都为零），那么增大 $\\sigma_e$ 将没有任何效果。计算出的积分值将保持为零，无论 $\\sigma_e$ 的大小如何。一个大的罚项无法补偿一个对某些多项式行为“视而不见”的求积规则。\n**结论：不正确。**\n\n**D. 尽管使用了对称内部罚格式，刚度矩阵必然会变得非对称。**\n这是不正确的。SIPG 双线性形式 $a_h(u, v)$ 在构造上是对称的：$a_h(u,v) = a_h(v,u)$。数值求积是一个线性运算，通常是被积函数值的加权和。对一个对称形式应用线性泛函 $(\\cdot)_q$ 会保持对称性：$a_{h,q}(u, v) = (a_h(u,v))_q = (a_h(v,u))_q = a_{h,q}(v,u)$。因此，最终的刚度矩阵 $A_q$ 保持对称。对于对称格式，对称性的丧失不是积分不足的特征。\n**结论：不正确。**\n\n**E. 积分不足起到了额外的数值耗散作用，总是能提高稳定性且从不降低精度。**\n这个陈述与实际发生的情况相反。积分不足通常会通过产生伪模式来降低稳定性，使系统变得更不鲁棒，而不是更鲁棒。数值耗散是一种抑制振荡并与稳定性增加相关的机制。此外，使用非精确求积规则会引入求积误差，从而降低方法的整体精度，并可能降低收敛阶。声称它“从不降低精度”是错误的。\n**结论：不正确。**", "answer": "$$\\boxed{A}$$", "id": "2386861"}, {"introduction": "选择数值方法通常需要在精度和计算成本之间进行权衡。这个动手练习将指导您对求解泊松方程的高阶间断Galerkin (DG) 方法和传统的连续Galerkin有限元法 (FEM) 进行定量比较。通过精确计算浮点运算次数 (FLOPs)，您将对DG方法在增加灵活性和自由度的同时所带来的效率权衡有一个具体的认识。[@problem_id:2386802]", "problem": "考虑单位正方形 $\\Omega = [0,1]^2$ 上的标量泊松方程 $-\\nabla^2 u = f$，其边界条件为齐次狄利克雷边界条件 $u|_{\\partial \\Omega}=0$。在均匀网格上使用两种不同的空间离散化方法，并将通过对一个向量施加一次全局刚度矩阵（即一次稀疏矩阵向量乘积）所需的浮点运算次数 (FLOPs) 来比较计算成本。您必须根据下文详述的规则，通过计算每种方法和每个测试用例中全局刚度矩阵的非零标量元的确切数量，从第一性原理出发计算 FLOP 次数。\n\n离散化方法 A（间断 Galerkin，三角形上的 $P^3$ 元）：从 $\\Omega$ 上的一个均匀 $M \\times M$ 全等正方形网格开始，通过同一条对角线将每个正方形分割成两个三角形，从而生成一个单纯剖分。在每个三角形上使用对称内罚间断 Galerkin 方法，并采用间断多项式空间 $P^3$。令 $p=3$ 表示多项式次数。令 $n_p$ 为每个三角形上的标量基函数数量，其值为 $n_p = (p+1)(p+2)/2$。使用泊松算子的标准双线性形式，通过在内部边上使用数值通量并在边界边上弱施加边界条件，来组装全局刚度矩阵。为便于计数，将每个单元自耦合块以及跨内部边的每个耦合块都视为一个稠密的 $n_p \\times n_p$ 块。每个单元恰好有一个这样的自耦合块，对于共享一条内部边的每一对相邻单元的有序对，也恰好有一个这样的非对角块。假设边界边仅对单元（对角）块有贡献。用 $N_{\\mathrm{elem}}$ 表示三角形的数量，用 $E_{\\mathrm{int}}$ 表示此剖分中内部边的数量。则非零标量元的总数为\n$$\n\\mathrm{nnz}_{\\mathrm{DG}} = n_p^2 \\left( N_{\\mathrm{elem}} + 2\\, E_{\\mathrm{int}} \\right).\n$$\n\n离散化方法 B（连续 Galerkin，四边形上的 $Q^3$ 元）：使用相同的均匀 $M \\times M$ 正方形网格，不进行三角剖分，并在每个正方形上使用连续拉格朗日张量积空间 $Q^3$。令 $p=3$。在一维空间中，网格点（节点）的数量为 $M p + 1$，在施加齐次狄利克雷边界条件后，内部节点的数量为 $N_1 = M p - 1$。在二维空间中，内部自由度的总数则为 $N_{\\mathrm{cg}} = N_1^2$。在一维中，两个基函数相互作用（即产生一个非零的刚度矩阵元）的充要条件是它们的网格索引之差最多为 $p$；因此，在一维中，每个内部行具有至多为 $2p+1$ 的带宽，并且对于位置在 $i \\in \\{1,2,\\dots,N_1\\}$ 的节点，其一维邻点（包括自身）的确切数量为\n$$\nn_{1\\mathrm{D}}(i) = \\min(p, i-1) + 1 + \\min(p, N_1 - i).\n$$\n在二维中，泊松算子的 $Q^3$ 双线性形式可分解为一维矩阵的张量积之和，全局刚度矩阵的稀疏模式等于 $x$ 和 $y$ 方向上一维耦合的笛卡尔积。因此，对于一个二维节点 $(i,j)$（其中 $i,j \\in \\{1,2,\\dots,N_1\\}$），相应全局矩阵行中的非零元数量为\n$$\nn_{2\\mathrm{D}}(i,j) = n_{1\\mathrm{D}}(i)\\, n_{1\\mathrm{D}}(j).\n$$\n因此，非零标量元的总确切数量为\n$$\n\\mathrm{nnz}_{\\mathrm{CG}} = \\sum_{i=1}^{N_1} \\sum_{j=1}^{N_1} n_{2\\mathrm{D}}(i,j) = \\left( \\sum_{i=1}^{N_1} n_{1\\mathrm{D}}(i) \\right)^2.\n$$\n\n成本模型与计算内容：对于两种离散化方法，将一次全局刚度矩阵与向量相乘的成本定义为每个非零标量元恰好两次浮点运算（一次乘法和一次加法）。即，\n$$\n\\mathrm{FLOPs}_{\\mathrm{DG}} = 2\\, \\mathrm{nnz}_{\\mathrm{DG}}, \\qquad \\mathrm{FLOPs}_{\\mathrm{CG}} = 2\\, \\mathrm{nnz}_{\\mathrm{CG}}.\n$$\n您的任务是为每个测试用例计算比率\n$$\nR(M) = \\frac{\\mathrm{FLOPs}_{\\mathrm{DG}}}{\\mathrm{FLOPs}_{\\mathrm{CG}}}.\n$$\n\n离散化方法 A 必须使用的几何计数细节：在 $M \\times M$ 的正方形网格上，每个正方形都由同一条对角线分割，共有 $N_{\\mathrm{elem}} = 2 M^2$ 个三角形。剖分中的内部边数量是内部垂直界面、内部水平界面以及正方形内部的 $M^2$ 条对角线之和，即\n$$\nE_{\\mathrm{int}} = M(M-1) + M(M-1) + M^2 = 3 M^2 - 2 M.\n$$\n\n测试套件：对以下网格尺寸 $M \\in \\{\\, 1,\\, 2,\\, 4,\\, 8 \\,\\}$ 计算 $R(M)$。所有量均为无量纲；无需物理单位。\n\n最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，按测试套件的顺序排列结果，例如 $[r_1,r_2,r_3,r_4]$，其中每个 $r_k$ 是对应 $M$ 计算出的 $R(M)$ 值。", "solution": "该问题陈述已经过严格验证，被认定为科学上合理、适定、客观且自洽。所有进行确定性计算所需的定义、公式和参数均已提供。其物理和数学背景，即比较应用于泊松方程的间断和连续Galerkin方法的计算成本，是计算科学与工程领域的标准问题。不存在矛盾、歧义或违反基本原理之处。因此，我们着手求解。\n\n目标是为一系列均匀网格尺寸 $M \\in \\{1, 2, 4, 8\\}$ 计算比率 $R(M) = \\mathrm{FLOPs}_{\\mathrm{DG}} / \\mathrm{FLOPs}_{\\mathrm{CG}}$。两种方法的多项式次数均固定为 $p=3$。\n\n首先，我们分析离散化方法 A 的计算成本，即使用 $P^3$ 三角形单元的对称内罚间断 Galerkin (DG) 方法。\n多项式次数为 $p=3$。每个三角形上的局部基函数数量由总次数为 $p$ 的多项式公式给出：\n$$\nn_p = \\frac{(p+1)(p+2)}{2} = \\frac{(3+1)(3+2)}{2} = \\frac{4 \\times 5}{2} = 10.\n$$\n问题基于单元自耦合和单元间耦合的稠密块结构，提供了全局刚度矩阵中非零元总数 $\\mathrm{nnz}_{\\mathrm{DG}}$ 的计算方法：\n$$\n\\mathrm{nnz}_{\\mathrm{DG}} = n_p^2 \\left( N_{\\mathrm{elem}} + 2 E_{\\mathrm{int}} \\right).\n$$\n问题也提供了均匀 $M \\times M$ 网格（其中每个正方形被细分为两个三角形）的几何量：\n三角形（单元）的数量为 $N_{\\mathrm{elem}} = 2 M^2$。\n内部边的数量为 $E_{\\mathrm{int}} = 3 M^2 - 2 M$。\n将这些量代入 $\\mathrm{nnz}_{\\mathrm{DG}}$ 的公式中：\n$$\n\\mathrm{nnz}_{\\mathrm{DG}} = 10^2 \\left( (2 M^2) + 2(3 M^2 - 2 M) \\right) = 100 \\left( 2 M^2 + 6 M^2 - 4 M \\right) = 100 \\left( 8 M^2 - 4 M \\right).\n$$\n化简后得到：\n$$\n\\mathrm{nnz}_{\\mathrm{DG}} = 400 M (2 M - 1).\n$$\n一次矩阵向量乘积的浮点运算 (FLOPs) 成本定义为每个非零元 2次 FLOP。因此：\n$$\n\\mathrm{FLOPs}_{\\mathrm{DG}} = 2 \\cdot \\mathrm{nnz}_{\\mathrm{DG}} = 2 \\cdot 400 M (2 M - 1) = 800 M (2 M - 1).\n$$\n\n接下来，我们分析离散化方法 B 的计算成本，即使用 $Q^3$ 四边形单元的连续 Galerkin (CG) 方法。\n多项式次数同样为 $p=3$。对于均匀的 $M \\times M$ 网格，施加齐次狄利克雷边界条件后，一维内部自由度的数量为：\n$$\nN_1 = M p - 1 = 3 M - 1.\n$$\n二维全局刚度矩阵中的非零元总数由以下公式给出：\n$$\n\\mathrm{nnz}_{\\mathrm{CG}} = \\left( \\sum_{i=1}^{N_1} n_{1\\mathrm{D}}(i) \\right)^2,\n$$\n其中 $n_{1\\mathrm{D}}(i)$ 是一维刚度矩阵一行中的非零元数量：\n$$\nn_{1\\mathrm{D}}(i) = \\min(p, i-1) + 1 + \\min(p, N_1 - i).\n$$\n我们用 $S_1 = \\sum_{i=1}^{N_1} n_{1\\mathrm{D}}(i)$ 表示这个和。这个和代表了一维刚度矩阵中非零元的总数。一个更直接计算 $S_1$ 的方法是考虑其带状结构。该矩阵有 $N_1$ 个对角元以及 $p$ 条非零的超对角线和次对角线。只要矩阵足够大（即 $N_1 \\ge p$），这个结构就成立。第 $k$ 条超对角线（对于 $k \\in \\{1, \\dots, p\\}$）的元素数量为 $N_1 - k$。根据对称性，次对角线是相同的。\n因此，对于 $N_1 \\ge p$，非零元的总数为：\n$$\nS_1 = N_1 + 2 \\sum_{k=1}^{p} (N_1 - k) = N_1 + 2 \\left( p N_1 - \\frac{p(p+1)}{2} \\right) = (2p+1)N_1 - p(p+1).\n$$\n在 $N_1 < p$ 的情况下，带宽未完全形成。对于任何内部节点 $i$，都有 $i-1 < p$ 和 $N_1 - i < p$。$n_{1\\mathrm{D}}(i)$ 的公式简化为：\n$$\nn_{1\\mathrm{D}}(i) = (i-1) + 1 + (N_1 - i) = N_1.\n$$\n在这种情况下，和为 $S_1 = \\sum_{i=1}^{N_1} N_1 = N_1^2$。\n\n现在我们将这些 $p=3$ 的公式应用于测试套件中的每个 $M$ 值。\n对于 $M=1$：$N_1 = 3(1) - 1 = 2$。由于 $N_1 < p$（即 $2 < 3$），我们使用 $S_1 = N_1^2 = 2^2 = 4$。\n对于 $M=2$：$N_1 = 3(2) - 1 = 5$。由于 $N_1 \\ge p$（即 $5 \\ge 3$），我们使用 $S_1 = (2(3)+1)N_1 - 3(3+1) = 7(5) - 12 = 35 - 12 = 23$。\n对于 $M=4$：$N_1 = 3(4) - 1 = 11$。由于 $N_1 \\ge p$（即 $11 \\ge 3$），我们使用 $S_1 = 7(11) - 12 = 77 - 12 = 65$。\n对于 $M=8$：$N_1 = 3(8) - 1 = 23$。由于 $N_1 \\ge p$（即 $23 \\ge 3$），我们使用 $S_1 = 7(23) - 12 = 161 - 12 = 149$。\n\nCG 方法的非零元总数为 $\\mathrm{nnz}_{\\mathrm{CG}} = S_1^2$，成本为 $\\mathrm{FLOPs}_{\\mathrm{CG}} = 2 \\cdot S_1^2$。\n\n最后，我们为每个 $M$ 计算比率 $R(M) = \\mathrm{FLOPs}_{\\mathrm{DG}} / \\mathrm{FLOPs}_{\\mathrm{CG}}$。\n\n情况 $M=1$：\n$\\mathrm{FLOPs}_{\\mathrm{DG}} = 800(1)(2(1) - 1) = 800$。\n$\\mathrm{FLOPs}_{\\mathrm{CG}} = 2 \\cdot 4^2 = 32$。\n$R(1) = 800 / 32 = 25$。\n\n情况 $M=2$：\n$\\mathrm{FLOPs}_{\\mathrm{DG}} = 800(2)(2(2) - 1) = 1600 \\cdot 3 = 4800$。\n$\\mathrm{FLOPs}_{\\mathrm{CG}} = 2 \\cdot 23^2 = 2 \\cdot 529 = 1058$。\n$R(2) = 4800 / 1058 \\approx 4.5368619$。\n\n情况 $M=4$：\n$\\mathrm{FLOPs}_{\\mathrm{DG}} = 800(4)(2(4) - 1) = 3200 \\cdot 7 = 22400$。\n$\\mathrm{FLOPs}_{\\mathrm{CG}} = 2 \\cdot 65^2 = 2 \\cdot 4225 = 8450$。\n$R(4) = 22400 / 8450 \\approx 2.6508875$。\n\n情况 $M=8$：\n$\\mathrm{FLOPs}_{\\mathrm{DG}} = 800(8)(2(8) - 1) = 6400 \\cdot 15 = 96000$。\n$\\mathrm{FLOPs}_{\\mathrm{CG}} = 2 \\cdot 149^2 = 2 \\cdot 22201 = 44402$。\n$R(8) = 96000 / 44402 \\approx 2.16206477$。\n\n这些计算出的比率将按照最终答案的指定格式进行格式化。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the ratio of computational costs for DG and CG methods\n    for solving the Poisson equation on a unit square.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [1, 2, 4, 8]\n    \n    # Polynomial degree p for both methods.\n    p = 3\n\n    results = []\n    for M in test_cases:\n        # --- Discretization A (DG) Cost Calculation ---\n        # The number of FLOPs for DG is derived from the problem statement as:\n        # FLOPs_DG = 2 * nnz_DG\n        # nnz_DG = n_p^2 * (N_elem + 2 * E_int)\n        # n_p = (p+1)(p+2)/2 = 10\n        # N_elem = 2*M^2\n        # E_int = 3*M^2 - 2*M\n        # So, nnz_DG = 100 * (2*M^2 + 2*(3*M^2 - 2*M)) = 100 * (8*M^2 - 4*M)\n        # nnz_DG = 400 * M * (2*M - 1)\n        # FLOPs_DG = 800 * M * (2*M - 1)\n        \n        flops_dg = 800 * M * (2 * M - 1)\n\n        # --- Discretization B (CG) Cost Calculation ---\n        # Number of 1D interior degrees of freedom.\n        N1 = M * p - 1\n        \n        # S1 is the sum of nonzeros per row in the 1D matrix, which is the\n        # total number of nonzeros in the 1D stiffness matrix.\n        S1 = 0\n        if N1 < p:\n            # For N1 < p, the formula for n_1D(i) simplifies to N1.\n            # The sum is then Sum(N1 for i=1..N1) = N1*N1.\n            S1 = N1**2\n        else:\n            # For N1 >= p, we use the general formula for the number of nonzeros\n            # in a banded matrix.\n            # S1 = (2*p + 1)*N1 - p*(p+1)\n            S1 = (2 * p + 1) * N1 - p * (p + 1)\n            \n        # The number of FLOPs for CG is derived from:\n        # FLOPs_CG = 2 * nnz_CG\n        # nnz_CG = (Sum(n_1D(i)))^2 = S1^2\n        flops_cg = 2 * (S1**2)\n\n        # --- Ratio Calculation ---\n        if flops_cg == 0:\n            # Avoid division by zero, though not expected in this problem.\n            ratio = float('inf')\n        else:\n            ratio = flops_dg / flops_cg\n        \n        results.append(ratio)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2386802"}]}