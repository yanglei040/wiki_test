{"hands_on_practices": [{"introduction": "在我们运用范数来解决复杂问题之前，熟练掌握其基本计算至关重要。这个练习旨在通过一个简单但富有启发性的全一矩阵，让您练习计算最常见的几种矩阵范数：$1$-范数、$2$-范数、无穷范数以及 Frobenius 范数。通过这个实践，您将对这些不同的“标尺”如何衡量矩阵“大小”建立起具体的直觉。[@problem_id:2449594]", "problem": "设 $m,n \\in \\mathbb{N}$ 且 $m \\geq 1$，$n \\geq 1$。对于矩阵 $A \\in \\mathbb{R}^{m \\times n}$ 和 $p \\in \\{1,2,\\infty\\}$，由向量 $p$-范数诱导的算子范数定义为\n$$\n\\|A\\|_{p} = \\sup_{x \\neq 0} \\frac{\\|A x\\|_{p}}{\\|x\\|_{p}},\n$$\n其中，对于 $x \\in \\mathbb{R}^{k}$，向量范数分别为 $\\|x\\|_{1} = \\sum_{i=1}^{k} |x_{i}|$，$\\|x\\|_{2} = \\sqrt{\\sum_{i=1}^{k} |x_{i}|^{2}}$，以及 $\\|x\\|_{\\infty} = \\max_{1 \\leq i \\leq k} |x_{i}|$. 矩阵 $A$ 的 Frobenius 范数定义为\n$$\n\\|A\\|_{F} = \\sqrt{\\sum_{i=1}^{m} \\sum_{j=1}^{n} |a_{ij}|^{2}}.\n$$\n考虑全 1 矩阵 $J \\in \\mathbb{R}^{m \\times n}$，其元素为 $J_{ij} = 1$（对所有 $i,j$）。求 $\\|J\\|_{1}$、$\\|J\\|_{2}$、$\\|J\\|_{\\infty}$ 和 $\\|J\\|_{F}$ 关于 $m$ 和 $n$ 的显式函数。请以单行向量的形式，按照 $\\big(\\|J\\|_{1}, \\|J\\|_{2}, \\|J\\|_{\\infty}, \\|J\\|_{F}\\big)$ 的顺序给出最终答案。答案必须是精确值，请勿近似。", "solution": "对问题陈述进行验证。\n\n**第 1 步：提取已知条件**\n- $m, n \\in \\mathbb{N}$ 且 $m \\geq 1$，$n \\geq 1$。\n- 矩阵 $A \\in \\mathbb{R}^{m \\times n}$。\n- 算子范数：$\\|A\\|_{p} = \\sup_{x \\neq 0} \\frac{\\|A x\\|_{p}}{\\|x\\|_{p}}$，其中 $p \\in \\{1, 2, \\infty\\}$。\n- 对于 $x \\in \\mathbb{R}^{k}$ 的向量范数：\n  - $\\|x\\|_{1} = \\sum_{i=1}^{k} |x_{i}|$\n  - $\\|x\\|_{2} = \\sqrt{\\sum_{i=1}^{k} |x_{i}|^{2}}$\n  - $\\|x\\|_{\\infty} = \\max_{1 \\leq i \\leq k} |x_{i}|$\n- Frobenius 范数：$\\|A\\|_{F} = \\sqrt{\\sum_{i=1}^{m} \\sum_{j=1}^{n} |a_{ij}|^{2}}$。\n- 所考虑的矩阵是全 1 矩阵 $J \\in \\mathbb{R}^{m \\times n}$，其元素为 $J_{ij} = 1$（对所有 $i,j$）。\n- 目标是求 $\\|J\\|_{1}$、$\\|J\\|_{2}$、$\\|J\\|_{\\infty}$ 和 $\\|J\\|_{F}$ 作为 $m$ 和 $n$ 的显式函数。\n- 最终答案要求以行向量格式给出：$\\big(\\|J\\|_{1}, \\|J\\|_{2}, \\|J\\|_{\\infty}, \\|J\\|_{F}\\big)$。\n\n**第 2 步：使用提取的已知条件进行验证**\n根据所需标准对问题进行评估。\n- **科学性：** 问题使用了线性代数和数值分析领域中向量和矩阵范数的标准、普遍接受的定义。它在科学上和数学上是合理的。\n- **适定性：** 问题陈述清晰。矩阵 $J$ 和待计算的范数都有明确的定义。对于所要求的四个量，都存在唯一且有意义的解。\n- **客观性：** 问题采用精确的数学语言表述，没有任何主观性或歧义。\n\n发现该问题没有任何科学不合理、不完整或矛盾等缺陷。\n\n**第 3 步：结论和行动**\n该问题是**有效的**。将提供一个完整的、有理有据的解答。\n\n我们继续计算全 1 矩阵 $J \\in \\mathbb{R}^{m \\times n}$ 的四个指定范数。\n\n**1. 计算 $1$-范数, $\\|J\\|_{1}$**\n矩阵 $A \\in \\mathbb{R}^{m \\times n}$ 的算子 $1$-范数定义为最大绝对列和：\n$$\n\\|A\\|_{1} = \\max_{1 \\leq j \\leq n} \\sum_{i=1}^{m} |a_{ij}|\n$$\n对于矩阵 $J$，所有元素均为 $J_{ij} = 1$。我们计算任意第 $j$ 列的绝对值之和：\n$$\n\\sum_{i=1}^{m} |J_{ij}| = \\sum_{i=1}^{m} |1| = \\sum_{i=1}^{m} 1 = m\n$$\n对于每一个列 $j$（其中 $1 \\leq j \\leq n$），这个和都是一个常数。因此，这些相同和的最大值是 $m$。\n$$\n\\|J\\|_{1} = m\n$$\n\n**2. 计算 $\\infty$-范数, $\\|J\\|_{\\infty}$**\n矩阵 $A \\in \\mathbb{R}^{m \\times n}$ 的算子 $\\infty$-范数定义为最大绝对行和：\n$$\n\\|A\\|_{\\infty} = \\max_{1 \\leq i \\leq m} \\sum_{j=1}^{n} |a_{ij}|\n$$\n对于矩阵 $J$，我们计算任意第 $i$ 行的绝对值之和：\n$$\n\\sum_{j=1}^{n} |J_{ij}| = \\sum_{j=1}^{n} |1| = \\sum_{j=1}^{n} 1 = n\n$$\n对于每一行 $i$（其中 $1 \\leq i \\leq m$），这个和都是一个常数。这些相同和的最大值是 $n$。\n$$\n\\|J\\|_{\\infty} = n\n$$\n\n**3. 计算 Frobenius 范数, $\\|J\\|_{F}$**\n矩阵 $A \\in \\mathbb{R}^{m \\times n}$ 的 Frobenius 范数定义为：\n$$\n\\|A\\|_{F} = \\sqrt{\\sum_{i=1}^{m} \\sum_{j=1}^{n} |a_{ij}|^{2}}\n$$\n对于矩阵 $J$，这变为：\n$$\n\\|J\\|_{F} = \\sqrt{\\sum_{i=1}^{m} \\sum_{j=1}^{n} |1|^{2}} = \\sqrt{\\sum_{i=1}^{m} \\sum_{j=1}^{n} 1}\n$$\n双重求和表示矩阵中元素的总数，即 $mn$。\n$$\n\\|J\\|_{F} = \\sqrt{mn}\n$$\n\n**4. 计算 $2$-范数 (谱范数), $\\|J\\|_{2}$**\n矩阵 $A$ 的算子 $2$-范数是它的最大奇异值 $\\sigma_{\\max}(A)$。这等价于矩阵 $A^T A$ 的最大特征值的平方根。\n$$\n\\|A\\|_{2} = \\sqrt{\\lambda_{\\max}(A^T A)}\n$$\n对于我们的矩阵 $J$，我们首先构造矩阵 $J^T J$。矩阵 $J$ 是一个 $m \\times n$ 的全 1 矩阵，所以其转置 $J^T$ 是一个 $n \\times m$ 的全 1 矩阵。乘积 $J^T J$ 是一个 $n \\times n$ 矩阵。该乘积的第 $(k,l)$ 个元素是：\n$$\n(J^T J)_{kl} = \\sum_{i=1}^{m} (J^T)_{ki} J_{il} = \\sum_{i=1}^{m} J_{ik} J_{il} = \\sum_{i=1}^{m} 1 \\cdot 1 = m\n$$\n因此，$J^T J$ 是一个 $n \\times n$ 矩阵，其中每个元素都等于 $m$。我们可以将其写为 $J^T J = m U_n$，其中 $U_n$ 是 $n \\times n$ 的全 1 矩阵。$J^T J$ 的特征值是 $U_n$ 的特征值的 $m$ 倍。\n\n矩阵 $U_n$ 的秩为 $1$，因为它的所有列都相同。一个秩为 $k$ 的矩阵至少有 $n-k$ 个零特征值。因此，$U_n$ 有一个特征值 $0$，其重数为至少 $n-1$。一个矩阵的特征值之和等于其迹。$U_n$ 的迹为 $\\text{Tr}(U_n) = \\sum_{i=1}^{n} 1 = n$。因为有 $n-1$ 个特征值为 $0$，剩下的一个特征值必须是 $n$。所以，$U_n$ 的特征值为 $n$（重数为 $1$）和 $0$（重数为 $n-1$）。\n\n$J^T J = m U_n$ 的特征值因此是 $mn$（重数为 $1$）和 $0$（重数为 $n-1$）。最大特征值为 $\\lambda_{\\max}(J^T J) = mn$。\n$2$-范数是该值的平方根：\n$$\n\\|J\\|_{2} = \\sqrt{\\lambda_{\\max}(J^T J)} = \\sqrt{mn}\n$$\n\n总而言之，计算出的四个范数是：\n- $\\|J\\|_{1} = m$\n- $\\|J\\|_{2} = \\sqrt{mn}$\n- $\\|J\\|_{\\infty} = n$\n- $\\|J\\|_{F} = \\sqrt{mn}$\n\n最终答案按指定顺序以行向量的形式呈现。", "answer": "$$\n\\boxed{\\begin{pmatrix} m & \\sqrt{mn} & n & \\sqrt{mn} \\end{pmatrix}}\n$$", "id": "2449594"}, {"introduction": "矩阵范数不仅仅是抽象的数学概念，它们更为分析物理系统提供了有力的工具。本问题将引导您将一维定态薛定谔方程离散化，并利用无穷范数来估算量子谐振子基态能量的上限，从而将线性代数与量子力学的基石问题直接联系起来。这个过程巧妙地应用了范数的一个基本性质，即任何诱导范数都是其谱半径（最大特征值绝对值）的上界，这也是盖尔圆定理 (Gershgorin Circle Theorem) 背后的思想精髓。[@problem_id:2449165]", "problem": "一个质量为 $m$ 的非相对论性单粒子在一维空间中的行为由不含时薛定谔方程 $-\\dfrac{\\hbar^{2}}{2m}\\dfrac{d^{2}\\psi}{dx^{2}} + V(x)\\,\\psi = E\\,\\psi$ 支配。在有限区域 $x \\in [-L,L]$ 上，使用齐次狄利克雷边界条件 $\\psi(-L)=\\psi(L)=0$，引入一个包含 $N$ 个内部点的均匀网格，并用中心有限差分公式近似二阶导数。在原子单位制中进行计算，其中 $\\hbar=1$ 且 $m=1$，因此动能项的系数为 $1/2$。考虑谐振子势 $V(x) = \\dfrac{1}{2}\\,\\omega^{2} x^{2}$，其中 $\\omega = 3$，区域半宽 $L=1$，内部网格点数为 $N=4$。\n\n从这些定义出发，将薛定谔方程离散化为一个关于 $N \\times N$ 哈密顿矩阵 $H$ 的矩阵特征值问题 $H\\mathbf{\\psi} = E\\mathbf{\\psi}$。然后，使用诱导无穷范数（由向量无穷范数诱导的算子范数），为离散问题的基态能量的绝对值 $|E_{0}|$ 提供一个严格的上限，并根据给定参数对此上限进行数值计算。将最终的上限以哈特里（Hartree）为单位表示，并将答案四舍五入到四位有效数字。", "solution": "题目陈述已经过验证，被认定是有效的。这是一个在计算物理学中提法恰当、有科学依据的问题，没有矛盾或含糊之处。所有必要的参数和方法都已明确。我们开始进行求解。\n\n质量为 $m$ 的粒子在一维空间中的不含时薛定谔方程为：\n$$\n-\\dfrac{\\hbar^{2}}{2m}\\dfrac{d^{2}\\psi}{dx^{2}} + V(x)\\,\\psi(x) = E\\,\\psi(x)\n$$\n根据要求，我们在原子单位制中进行计算，其中 $\\hbar=1$ 和 $m=1$。方程简化为：\n$$\n-\\dfrac{1}{2}\\dfrac{d^{2}\\psi}{dx^{2}} + V(x)\\,\\psi(x) = E\\,\\psi(x)\n$$\n区域被指定为 $x \\in [-L, L]$，具有齐次狄利克雷边界条件 $\\psi(-L)=\\psi(L)=0$。该区域使用一个包含 $N$ 个内部点的均匀网格进行离散化。总区域长度为 $2L$。此网格上的区间数量为 $N+1$。因此，网格间距（或步长）$h$ 由下式给出：\n$$\nh = \\dfrac{2L}{N+1}\n$$\n内部网格点记为 $x_j$，其中 $j=1, 2, \\dots, N$。它们的位置由 $x_j = -L + j \\cdot h$ 给出。边界点是 $x_0 = -L$ 和 $x_{N+1} = L$。在这些离散点上的波函数记为 $\\psi_j = \\psi(x_j)$。边界条件意味着 $\\psi_0 = 0$ 和 $\\psi_{N+1} = 0$。\n\n二阶导数项 $\\dfrac{d^{2}\\psi}{dx^{2}}$ 在每个内部点 $x_j$ 处使用二阶中心有限差分公式进行近似：\n$$\n\\dfrac{d^{2}\\psi}{dx^{2}}\\bigg|_{x_j} \\approx \\dfrac{\\psi(x_j - h) - 2\\psi(x_j) + \\psi(x_j + h)}{h^2} = \\dfrac{\\psi_{j-1} - 2\\psi_j + \\psi_{j+1}}{h^2}\n$$\n将此近似代入薛定谔方程，得到一个关于未知值 $\\psi_j$ 的线性方程组：\n$$\n-\\dfrac{1}{2}\\left(\\dfrac{\\psi_{j-1} - 2\\psi_j + \\psi_{j+1}}{h^2}\\right) + V(x_j)\\,\\psi_j = E\\,\\psi_j \\quad \\text{对 } j=1, 2, \\dots, N\n$$\n重新排列各项以适应矩阵方程的结构，我们得到：\n$$\n-\\dfrac{1}{2h^2}\\psi_{j-1} + \\left(\\dfrac{1}{h^2} + V(x_j)\\right)\\psi_j - \\dfrac{1}{2h^2}\\psi_{j+1} = E\\,\\psi_j\n$$\n这个包含 $N$ 个方程的方程组可以写成矩阵形式 $H\\mathbf{\\psi} = E\\mathbf{\\psi}$，其中 $\\mathbf{\\psi} = (\\psi_1, \\psi_2, \\dots, \\psi_N)^T$ 是波函数值的向量，而 $H$ 是 $N \\times N$ 的离散哈密顿矩阵。该矩阵的元素 $H_{ij}$ 为：\n$$\nH_{ij} =\n\\begin{cases}\n\\dfrac{1}{h^2} + V(x_i) & \\text{如果 } i=j \\\\\n-\\dfrac{1}{2h^2} & \\text{如果 } |i-j|=1 \\\\\n0 & \\text{其它情况}\n\\end{cases}\n$$\n现在，我们代入给定的数值：$L=1$，$N=4$，对于势能 $V(x) = \\dfrac{1}{2}\\omega^2 x^2$，我们有 $\\omega=3$。\n首先，我们计算网格间距 $h$：\n$$\nh = \\dfrac{2 \\cdot 1}{4+1} = \\dfrac{2}{5} = 0.4\n$$\n矩阵中的动能项由 $h$ 决定：\n$$\n\\dfrac{1}{h^2} = \\dfrac{1}{(0.4)^2} = \\dfrac{1}{0.16} = 6.25\n$$\n$$\n-\\dfrac{1}{2h^2} = -\\dfrac{6.25}{2} = -3.125\n$$\n接下来，我们确定内部网格点的位置 $x_j = -1 + j \\cdot (0.4)$：\n$$\nx_1 = -1 + 1(0.4) = -0.6 \\\\\nx_2 = -1 + 2(0.4) = -0.2 \\\\\nx_3 = -1 + 3(0.4) = 0.2 \\\\\nx_4 = -1 + 4(0.4) = 0.6\n$$\n势能为 $V(x) = \\dfrac{1}{2}(3)^2 x^2 = 4.5 x^2$。我们在每个网格点上计算势能值：\n$$\nV(x_1) = 4.5(-0.6)^2 = 4.5(0.36) = 1.62 \\\\\nV(x_2) = 4.5(-0.2)^2 = 4.5(0.04) = 0.18 \\\\\nV(x_3) = 4.5(0.2)^2 = 4.5(0.04) = 0.18 \\\\\nV(x_4) = 4.5(0.6)^2 = 4.5(0.36) = 1.62\n$$\n现在我们组装 $4 \\times 4$ 的哈密顿矩阵 $H$：\n对角元素为 $H_{jj} = \\dfrac{1}{h^2} + V(x_j) = 6.25 + V(x_j)$：\n$$\nH_{11} = 6.25 + 1.62 = 7.87 \\\\\nH_{22} = 6.25 + 0.18 = 6.43 \\\\\nH_{33} = 6.25 + 0.18 = 6.43 \\\\\nH_{44} = 6.25 + 1.62 = 7.87\n$$\n非对角元素为 $H_{j, j\\pm1} = -3.125$。矩阵 $H$ 为：\n$$\nH = \\begin{pmatrix}\n7.87 & -3.125 & 0 & 0 \\\\\n-3.125 & 6.43 & -3.125 & 0 \\\\\n0 & -3.125 & 6.43 & -3.125 \\\\\n0 & 0 & -3.125 & 7.87\n\\end{pmatrix}\n$$\n问题要求使用诱导无穷范数来找到基态能量绝对值 $|E_0|$ 的一个严格上限。对于任何矩阵 $A$ 及其任意特征值 $\\lambda$，一个基本定理指出，对于任何诱导矩阵范数，都有 $|\\lambda| \\le \\|A\\|$。\n矩阵 $A$ 的诱导无穷范数，记作 $\\|A\\|_{\\infty}$，定义为最大绝对行和：\n$$\n\\|A\\|_{\\infty} = \\max_{1 \\le i \\le N} \\sum_{j=1}^{N} |A_{ij}|\n$$\n将此应用于我们的哈密顿矩阵 $H$，我们得到对所有特征值 $E_k$（包括基态能量 $E_0$）的不等式 $|E_k| \\le \\|H\\|_{\\infty}$。因此， $|E_0|$ 的一个严格上限是 $\\|H\\|_{\\infty}$。\n\n我们计算矩阵 $H$ 的绝对行和：\n第1行: $|7.87| + |-3.125| + |0| + |0| = 7.87 + 3.125 = 10.995$\n第2行: $|-3.125| + |6.43| + |-3.125| + |0| = 3.125 + 6.43 + 3.125 = 12.68$\n第3行: $|0| + |-3.125| + |6.43| + |-3.125| = 3.125 + 6.43 + 3.125 = 12.68$\n第4行: $|0| + |0| + |-3.125| + |7.87| = 3.125 + 7.87 = 10.995$\n\n这些和的最大值为：\n$$\n\\|H\\|_{\\infty} = \\max\\{10.995, 12.68, 12.68, 10.995\\} = 12.68\n$$\n因此，基态能量大小的上限是 $|E_0| \\le 12.68$。\n计算是在原子单位制下进行的，因此能量单位是哈特里（Hartree）。问题要求将答案四舍五入到四位有效数字。数值 $12.68$ 已经有四位有效数字。\n最终的上限是 $12.68$ 哈特里（Hartree）。", "answer": "$$\n\\boxed{12.68}\n$$", "id": "2449165"}, {"introduction": "在真实的计算世界中，我们无可避免地要处理有限精度和测量误差，这使得数值稳定性成为一个核心议题。本练习将指导您设计一个数值实验，通过编程生动地揭示“病态”系统的本质：即输入数据中一个微不足道的误差，如何能在求解过程中被急剧放大，并最终导致解决方案出现灾难性的偏差。这个实践将让您亲眼见证矩阵条件数的实际威力，而条件数本身正是通过范数来定义的，它衡量了数值问题对输入误差的敏感性。[@problem_id:2449583]", "problem": "设计并实现一个完整、可运行的程序，该程序执行一个数值实验，证明对于一个病态矩阵 $A$，线性系统 $A x = b$ 中 $b$ 的一个微小相对误差会导致解 $x$ 的一个巨大相对误差。该实验必须严格基于第一性原理：范数、相对误差和线性求解的定义。所有量必须使用向量和矩阵的 $2$-范数。程序必须为每个指定的测试用例计算如下定义的放大因子\n$$\nr \\;=\\; \\frac{\\|x_{\\epsilon} - x^\\star\\|_{2} / \\|x^\\star\\|_{2}}{\\|\\delta b\\|_{2} / \\|b\\|_{2}},\n$$\n其中 $x^\\star$ 是对应于未扰动右端项 $b$ 的精确解，$\\delta b$ 是 $b$ 的一个扰动，而 $x_{\\epsilon}$ 是 $A x = b + \\delta b$ 的解。程序必须对每个测试用例使用以下实验设置：\n- 设 $x^\\star$ 是 $\\mathbb{R}^n$ 中所有分量均为 $1$ 的向量。\n- 设 $b = A x^\\star$。\n- 设扰动方向 $v \\in \\mathbb{R}^n$ 按分量定义为 $v_i = \\frac{(-1)^{i-1}}{\\sqrt{n}}$，其中 $i = 1, \\dots, n$，使得 $\\|v\\|_2 = 1$。\n- 设 $\\delta b = \\epsilon \\, \\|b\\|_2 \\, v$，其中 $\\epsilon$ 是为测试规定的相对扰动大小。\n- 设 $x_{\\epsilon}$ 是 $A x = b + \\delta b$ 的解。\n\n你的程序必须为每个测试用例计算放大因子 $r$（一个浮点数）。测试用例集如下，每个用例由其编号标识，并按所列顺序执行：\n- 用例 1：$A$ 是 Hilbert 矩阵 $H \\in \\mathbb{R}^{5 \\times 5}$，其元素为 $H_{ij} = \\frac{1}{i + j - 1}$，其中 $i, j \\in \\{1,\\dots,5\\}$，且 $\\epsilon = 10^{-8}$。\n- 用例 2：$A$ 是 Hilbert 矩阵 $H \\in \\mathbb{R}^{10 \\times 10}$，其元素为 $H_{ij} = \\frac{1}{i + j - 1}$，其中 $i, j \\in \\{1,\\dots,10\\}$，且 $\\epsilon = 10^{-8}$。\n- 用例 3：$A$ 是单位矩阵 $I \\in \\mathbb{R}^{8 \\times 8}$，且 $\\epsilon = 10^{-8}$。\n- 用例 4：$A \\in \\mathbb{R}^{2 \\times 2}$ 由下式给出\n$$\nA = \\begin{bmatrix}\n1 & 1 \\\\\n1 & 1 + 10^{-10}\n\\end{bmatrix},\n$$\n且 $\\epsilon = 10^{-12}$。\n\n所有范数必须是 $2$-范数。不涉及物理单位。不使用角度。不得使用百分比；所有比率和大小必须表示为十进制浮点数。\n\n你的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表的结果（例如，\"[r1,r2,r3,r4]\"）。每个条目必须是对应案例的放大因子 $r$，四舍五入到 $6$ 位有效数字，并按用例 1 到 4 的顺序排列。", "solution": "该实验是根据线性代数和基于范数的误差分析的第一性原理设计的。我们考虑一个具有精确数据的线性系统 $A x = b$ 及其扰动后的对应系统 $A x = b + \\delta b$。对于给定的矩阵 $A \\in \\mathbb{R}^{n \\times n}$ 和精确解向量 $x^\\star \\in \\mathbb{R}^n$，我们定义 $b = A x^\\star$。然后，我们按如下方式构造一个具有指定相对大小 $\\epsilon$ 的扰动 $\\delta b$。设 $v \\in \\mathbb{R}^n$，其分量为 $v_i = \\frac{(-1)^{i-1}}{\\sqrt{n}}$，其中 $i = 1, \\dots, n$。根据构造，此 $v$ 满足 $\\|v\\|_2 = 1$：\n$$\n\\|v\\|_2^2 = \\sum_{i=1}^n \\left(\\frac{1}{\\sqrt{n}}\\right)^2 = \\frac{n}{n} = 1.\n$$\n我们设 $\\delta b = \\epsilon \\, \\|b\\|_2 \\, v$。那么 $b$ 中的相对扰动恰好是 $\\frac{\\|\\delta b\\|_2}{\\|b\\|_2} = \\epsilon$，因为\n$$\n\\|\\delta b\\|_2 = \\epsilon \\, \\|b\\|_2 \\, \\|v\\|_2 = \\epsilon \\, \\|b\\|_2.\n$$\n设 $x_\\epsilon$ 表示扰动后系统 $A x = b + \\delta b$ 的解。解的误差等于\n$$\nx_\\epsilon - x^\\star = A^{-1}\\,(b+\\delta b) - A^{-1} b = A^{-1}\\,\\delta b.\n$$\n因此 $x$ 中的相对误差是\n$$\n\\frac{\\|x_\\epsilon - x^\\star\\|_2}{\\|x^\\star\\|_2} = \\frac{\\|A^{-1}\\,\\delta b\\|_2}{\\|x^\\star\\|_2}.\n$$\n程序为每个用例报告的放大因子 $r$ 是\n$$\nr = \\frac{\\|x_{\\epsilon} - x^\\star\\|_{2} / \\|x^\\star\\|_{2}}{\\|\\delta b\\|_{2} / \\|b\\|_{2}}.\n$$\n根据范数性质和矩阵 $2$-范数的定义，我们可以将此放大作用与矩阵 $2$-范数下的条件数 $\\kappa_2(A) = \\|A\\|_2 \\, \\|A^{-1}\\|_2$ 联系起来。具体来说，使用 $\\|A^{-1} \\delta b\\|_2 \\le \\|A^{-1}\\|_2 \\, \\|\\delta b\\|_2$ 和 $\\|b\\|_2 = \\|A x^\\star\\|_2 \\le \\|A\\|_2 \\, \\|x^\\star\\|_2$，我们得到\n$$\n\\frac{\\|x_\\epsilon - x^\\star\\|_2}{\\|x^\\star\\|_2} \\le \\|A^{-1}\\|_2 \\, \\|\\delta b\\|_2 \\,\\frac{1}{\\|x^\\star\\|_2}\n\\le \\|A^{-1}\\|_2 \\, \\|A\\|_2 \\, \\frac{\\|\\delta b\\|_2}{\\|b\\|_2} = \\kappa_2(A) \\, \\frac{\\|\\delta b\\|_2}{\\|b\\|_2}.\n$$\n因此\n$$\nr \\le \\kappa_2(A).\n$$\n这个不等式表明，解的相对误差最多可以被放大约等于条件数的倍数。对于像单位矩阵 $I$ 这样的良态矩阵，我们有 $\\kappa_2(I) = 1$，因此 $r$ 应该接近于 $1$。对于像 Hilbert 矩阵这样的病态矩阵，$\\kappa_2(A)$ 非常大，即使一个非常小的 $\\epsilon$ 也可能导致 $x$ 出现大的相对误差，从而产生一个大的 $r$。\n\n该测试套件涵盖了几个不同情况：\n- 用例 1 使用一个 $5$ 阶的 Hilbert 矩阵，该矩阵是病态的但规模适中。\n- 用例 2 使用一个 $10$ 阶的 Hilbert 矩阵，其病态程度更高，通常会产生大得多的放大因子 $r$。\n- 用例 3 使用一个 $8$ 阶的单位矩阵，该矩阵是完全良态的，所以 $r$ 应该约等于 $1$。\n- 用例 4 使用一个近奇异的 $2 \\times 2$ 矩阵，其中一个元素与另一元素相差 $10^{-10}$，这会产生非常大的放大作用。\n\n对于每个用例，程序构造 $x^\\star$、$b$、单位范数扰动方向 $v$ 以及具有指定 $\\epsilon$ 的扰动 $\\delta b$，求解 $x_\\epsilon$，计算相对误差，并报告四舍五入到 $6$ 位有效数字的 $r$。最终输出是包含列表 $[r_1, r_2, r_3, r_4]$ 的单行，并按此顺序排列。这个过程直接而清晰地展示了 $A$ 的病态性如何将 $b$ 中的微小相对扰动放大为解 $x$ 中的巨大相对误差。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef hilbert(n: int) -> np.ndarray:\n    # H[i,j] = 1 / (i + j + 1) with zero-based i,j; but use one-based formula directly\n    i = np.arange(1, n + 1).reshape(-1, 1)\n    j = np.arange(1, n + 1).reshape(1, -1)\n    return 1.0 / (i + j - 1.0)\n\ndef alternating_unit_vector(n: int) -> np.ndarray:\n    # v_i = (-1)^(i-1) / sqrt(n), i = 1..n\n    signs = (-1.0) ** np.arange(n)\n    v = signs / np.sqrt(n)\n    # Ensure unit norm numerically\n    return v / np.linalg.norm(v, 2)\n\ndef amplification_factor(A: np.ndarray, eps: float) -> float:\n    n = A.shape[0]\n    x_star = np.ones(n, dtype=float)\n    b = A @ x_star\n    nb = np.linalg.norm(b, 2)\n    if nb == 0.0:\n        # Degenerate, but not expected with provided tests; return NaN-like large value\n        return float('nan')\n    v = alternating_unit_vector(n)\n    delta_b = eps * nb * v\n    b_tilde = b + delta_b\n    # Solve for perturbed solution\n    x_tilde = np.linalg.solve(A, b_tilde)\n    # Relative errors\n    rel_b = np.linalg.norm(delta_b, 2) / nb\n    rel_x = np.linalg.norm(x_tilde - x_star, 2) / np.linalg.norm(x_star, 2)\n    # Amplification factor\n    return rel_x / rel_b\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each test case is a tuple: (A_matrix, epsilon)\n    A1 = hilbert(5)\n    eps1 = 1e-8\n\n    A2 = hilbert(10)\n    eps2 = 1e-8\n\n    A3 = np.eye(8, dtype=float)\n    eps3 = 1e-8\n\n    A4 = np.array([[1.0, 1.0],\n                   [1.0, 1.0 + 1e-10]], dtype=float)\n    eps4 = 1e-12\n\n    test_cases = [\n        (A1, eps1),\n        (A2, eps2),\n        (A3, eps3),\n        (A4, eps4),\n    ]\n\n    results = []\n    for A, eps in test_cases:\n        r = amplification_factor(A, eps)\n        # Round to 6 significant digits\n        if np.isnan(r) or np.isinf(r):\n            results.append(\"nan\")\n        else:\n            results.append(f\"{r:.6g}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2449583"}]}