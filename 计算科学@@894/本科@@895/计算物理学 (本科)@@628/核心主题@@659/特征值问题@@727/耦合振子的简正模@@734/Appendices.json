{"hands_on_practices": [{"introduction": "掌握简正模分析的第一步是将物理系统的运动方程转化为矩阵形式。这个练习是一个经典的教科书示例，涉及两个由弹簧连接的物体。通过解决这个问题，你将练习构建动力学矩阵并求解其本征值，这是理解任何耦合振子系统的核心数学技能。[@problem_id:1241856]", "problem": "考虑一个由两个质量均为 $m$ 的质点组成的一维力学系统，它们被约束在一条无摩擦的水平轨道上运动。质点1通过一个劲度系数为 $k_1$ 的无质量弹簧连接到左侧的固定墙壁。质点2通过一个劲度系数为 $k_2$ 的无质量弹簧连接到右侧的固定墙壁。两个质点通过第三个劲度系数为 $k_c$ 的无质量弹簧相互耦合。设 $x_1(t)$ 和 $x_2(t)$ 分别表示质点1和质点2相对于各自平衡位置的位移。在平衡状态下，所有弹簧都处于其自然长度。\n\n系统进行小幅振荡。该运动可以描述为两个简正模的叠加，每个简正模都以其特征角频率振荡。设这些简正模频率为 $\\omega_+$ 和 $\\omega_-$，其中 $\\omega_+ \\ge \\omega_-$。\n\n推导这些简正模频率平方差 $\\omega_+^2 - \\omega_-^2$ 的闭式表达式，用 $m$、$k_1$、$k_2$ 和 $k_c$ 表示。", "solution": "第一步是建立这两个质量体的运动方程。我们可以通过考虑每个质量体所受的力（牛顿第二定律）来实现，或者使用拉格朗日形式体系。我们将使用后者，因为它对于耦合系统是一种更系统化的方法。\n\n系统的动能是两个质量体动能之和：\n$$\nT = \\frac{1}{2}m\\dot{x}_1^2 + \\frac{1}{2}m\\dot{x}_2^2\n$$\n\n系统的势能是三个弹簧中储存的势能之和。第一个弹簧的伸长量为 $x_1$，第二个为 $x_2$，第三个（耦合）弹簧为 $(x_2 - x_1)$。\n$$\nU = \\frac{1}{2}k_1 x_1^2 + \\frac{1}{2}k_2 x_2^2 + \\frac{1}{2}k_c(x_2 - x_1)^2\n$$\n\n系统的拉格朗日量为 $L = T - U$：\n$$\nL = \\frac{1}{2}m(\\dot{x}_1^2 + \\dot{x}_2^2) - \\frac{1}{2}k_1 x_1^2 - \\frac{1}{2}k_2 x_2^2 - \\frac{1}{2}k_c(x_2 - x_1)^2\n$$\n\n欧拉-拉格朗日方程为 $\\frac{d}{dt}\\frac{\\partial L}{\\partial \\dot{x}_i} - \\frac{\\partial L}{\\partial x_i} = 0$，对于 $i=1,2$。\n\n对于 $x_1$：\n$$\n\\frac{\\partial L}{\\partial \\dot{x}_1} = m\\dot{x}_1 \\quad \\implies \\quad \\frac{d}{dt}\\frac{\\partial L}{\\partial \\dot{x}_1} = m\\ddot{x}_1\n$$\n$$\n\\frac{\\partial L}{\\partial x_1} = -k_1 x_1 - k_c(x_2 - x_1)(-1) = -k_1 x_1 + k_c(x_2 - x_1) = -(k_1+k_c)x_1 + k_c x_2\n$$\n质量体1的运动方程是：\n$$\nm\\ddot{x}_1 + (k_1+k_c)x_1 - k_c x_2 = 0\n$$\n\n对于 $x_2$：\n$$\n\\frac{\\partial L}{\\partial \\dot{x}_2} = m\\dot{x}_2 \\quad \\implies \\quad \\frac{d}{dt}\\frac{\\partial L}{\\partial \\dot{x}_2} = m\\ddot{x}_2\n$$\n$$\n\\frac{\\partial L}{\\partial x_2} = -k_2 x_2 - k_c(x_2 - x_1)(1) = -k_2 x_2 - k_c(x_2 - x_1) = k_c x_1 - (k_2+k_c)x_2\n$$\n质量体2的运动方程是：\n$$\nm\\ddot{x}_2 - k_c x_1 + (k_2+k_c)x_2 = 0\n$$\n\n对于简正模振荡，我们假设一个形式如下的谐波解：\n$$\nx_1(t) = A_1 e^{i\\omega t}\n$$\n$$\nx_2(t) = A_2 e^{i\\omega t}\n$$\n其中 $A_1$ 和 $A_2$ 是振幅。将这些代入运动方程，得到 $\\ddot{x}_j = -\\omega^2 x_j$：\n$$\n(-m\\omega^2 + k_1+k_c)A_1 - k_c A_2 = 0\n$$\n$$\n-k_c A_1 + (-m\\omega^2 + k_2+k_c)A_2 = 0\n$$\n\n这是关于振幅 $A_1$ 和 $A_2$ 的一个线性齐次方程组。矩阵形式为：\n$$\n\\begin{pmatrix} k_1+k_c - m\\omega^2 & -k_c \\\\ -k_c & k_2+k_c - m\\omega^2 \\end{pmatrix} \\begin{pmatrix} A_1 \\\\ A_2 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}\n$$\n\n为了得到非平凡解（$A_1, A_2$ 不全为零），系数矩阵的行列式必须为零。设 $\\lambda = \\omega^2$。\n$$\n\\det \\begin{pmatrix} k_1+k_c - m\\lambda & -k_c \\\\ -k_c & k_2+k_c - m\\lambda \\end{pmatrix} = 0\n$$\n$$\n(k_1+k_c - m\\lambda)(k_2+k_c - m\\lambda) - (-k_c)(-k_c) = 0\n$$\n$$\n(k_1+k_c)(k_2+k_c) - m\\lambda(k_1+k_c) - m\\lambda(k_2+k_c) + m^2\\lambda^2 - k_c^2 = 0\n$$\n展开并按 $\\lambda$ 的幂次合并同类项：\n$$\nm^2\\lambda^2 - m(k_1+k_2+2k_c)\\lambda + (k_1k_2 + k_1k_c + k_2k_c + k_c^2) - k_c^2 = 0\n$$\n$$\nm^2\\lambda^2 - m(k_1+k_2+2k_c)\\lambda + (k_1k_2 + k_c(k_1+k_2)) = 0\n$$\n\n这是一个关于 $\\lambda = \\omega^2$ 的二次方程。两个解 $\\lambda_+$ 和 $\\lambda_-$ 对应于简正频率的平方 $\\omega_+^2$ 和 $\\omega_-^2$。使用二次方程求根公式 $\\lambda = \\frac{-b \\pm \\sqrt{b^2-4ac}}{2a}$：\n$$\n\\lambda_{\\pm} = \\frac{m(k_1+k_2+2k_c) \\pm \\sqrt{[-m(k_1+k_2+2k_c)]^2 - 4(m^2)(k_1k_2 + k_c(k_1+k_2))}}{2m^2}\n$$\n$$\n\\omega^2_{\\pm} = \\frac{k_1+k_2+2k_c \\pm \\sqrt{(k_1+k_2+2k_c)^2 - 4(k_1k_2 + k_c(k_1+k_2))}}{2m}\n$$\n让我们简化平方根下的项（判别式除以 $m^2$）：\n$$\nD = (k_1+k_2+2k_c)^2 - 4(k_1k_2 + k_1k_c + k_2k_c)\n$$\n$$\nD = (k_1^2+k_2^2+4k_c^2+2k_1k_2+4k_1k_c+4k_2k_c) - (4k_1k_2+4k_1k_c+4k_2k_c)\n$$\n$$\nD = k_1^2+k_2^2+4k_c^2+2k_1k_2-4k_1k_2 = k_1^2-2k_1k_2+k_2^2+4k_c^2 = (k_1-k_2)^2 + 4k_c^2\n$$\n因此，简正频率的平方为：\n$$\n\\omega_+^2 = \\frac{k_1+k_2+2k_c + \\sqrt{(k_1-k_2)^2 + 4k_c^2}}{2m}\n$$\n$$\n\\omega_-^2 = \\frac{k_1+k_2+2k_c - \\sqrt{(k_1-k_2)^2 + 4k_c^2}}{2m}\n$$\n题目要求我们求出差值 $\\omega_+^2 - \\omega_-^2$：\n$$\n\\omega_+^2 - \\omega_-^2 = \\left(\\frac{k_1+k_2+2k_c + \\sqrt{(k_1-k_2)^2 + 4k_c^2}}{2m}\\right) - \\left(\\frac{k_1+k_2+2k_c - \\sqrt{(k_1-k_2)^2 + 4k_c^2}}{2m}\\right)\n$$\n$$\n\\omega_+^2 - \\omega_-^2 = \\frac{2\\sqrt{(k_1-k_2)^2 + 4k_c^2}}{2m}\n$$\n$$\n\\omega_+^2 - \\omega_-^2 = \\frac{\\sqrt{(k_1-k_2)^2 + 4k_c^2}}{m}\n$$", "answer": "$$\n\\boxed{\\frac{\\sqrt{(k_1-k_2)^2 + 4k_c^2}}{m}}\n$$", "id": "1241856"}, {"introduction": "分析方法虽然强大，但对于拥有许多振子的系统来说可能变得繁琐。这个计算练习将我们带入一个拥有 $N$ 个振子的一维链，你需要编写程序来构建其动力学矩阵并计算其本征频率。这个问题特别关注边界条件的影响，让你通过改变末端弹簧的刚度来探索系统从具有固定端点到接近自由端点的行为转变。[@problem_id:2418616]", "problem": "考虑一个一维链，由 $N$ 个质量为 $m$ 的相同质点通过刚度为 $k$ 的线性弹簧连接而成。该链的左端通过刚度为 $k$ 的弹簧连接到一堵固定的墙上，右端通过刚度为 $k_{\\text{end}}$ 的弹簧连接到另一堵固定的墙上。所有弹簧都遵循胡克定律，且不存在阻尼。设 $x_i(t)$ 表示第 $i$ 个质点沿直线偏离其平衡位置的位移，其中 $i \\in \\{1,2,\\dots,N\\}$，$t$ 为时间。\n\n仅使用基本力学定律，对下面测试套件中的每一组参数，确定上述链式系统小振动的最小正简正角频率 $\\omega_1$（单位为弧度/秒）。将每个 $\\omega_1$ 以弧度/秒为单位表示，并四舍五入到六位小数。\n\n测试套件（每一项为 $(N, m, k, k_{\\text{end}})$，其中 $m$ 的单位是千克，$k$ 和 $k_{\\text{end}}$ 的单位是牛顿/米）：\n- $(5,\\, 0.20,\\, 50.0,\\, 50.0)$\n- $(5,\\, 0.20,\\, 50.0,\\, 10^{-3})$\n- $(5,\\, 0.20,\\, 50.0,\\, 10^{6})$\n- $(1,\\, 1.0,\\, 100.0,\\, 100.0)$\n- $(2,\\, 1.0,\\, 10.0,\\, 0.0)$\n\n最终输出格式要求：\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，结果的顺序与测试套件中的顺序相同，例如，“[r1,r2,r3,r4,r5]”。每个 $r_j$ 必须是第 $j$ 个测试案例的 $\\omega_1$ 的浮点数表示，以弧度/秒为单位，四舍五入到六位小数。", "solution": "该问题要求确定一维耦合振子链的最低简正角频率。分析从经典力学的基本原理出发。\n\n该系统由 $N$ 个质点组成，每个质点的质量为 $m$。设 $x_i(t)$ 为第 $i$ 个质点偏离其平衡位置的位移，其中 $i \\in \\{1, 2, \\dots, N\\}$。这些质点通过遵循胡克定律的无质量弹簧相互连接并固定在墙上。\n\n推导的基石是应用于每个质点的牛顿第二定律，$F_i = m \\ddot{x}_i$。力 $F_i$ 是作用在第 $i$ 个质点上的弹簧所施加的净力。\n\n对于运动方程，我们必须考虑三种不同的情况：第一个质点（$i=1$）、中间的质点（$1 < i < N$）和最后一个质点（$i=N$）。\n\n对于一个中间的质点 $i$，$1 < i < N$，它通过刚度为 $k$ 的弹簧与质点 $i-1$ 和质点 $i+1$ 相连。来自左边弹簧的力是 $k(x_{i-1} - x_i)$，来自右边弹簧的力是 $k(x_{i+1} - x_i)$。总力为：\n$$F_i = k(x_{i-1} - x_i) + k(x_{i+1} - x_i) = k(x_{i-1} - 2x_i + x_{i+1})$$\n因此，运动方程为：\n$$m \\ddot{x}_i = k(x_{i-1} - 2x_i + x_{i+1})$$\n\n对于第一个质点，$i=1$，它通过刚度为 $k$ 的弹簧连接到一堵固定的墙上（$x_0 = 0$），并通过另一个刚度为 $k$ 的弹簧连接到质点 2。来自左边弹簧的力是 $k(x_0 - x_1) = -kx_1$。来自右边弹簧的力是 $k(x_2 - x_1)$。总力为：\n$$F_1 = -kx_1 + k(x_2 - x_1) = kx_2 - 2kx_1$$\n第一个质点的运动方程是：\n$$m \\ddot{x}_1 = k(x_2 - 2x_1)$$\n\n对于最后一个质点，$i=N$，它通过刚度为 $k$ 的弹簧连接到质点 $N-1$，并通过刚度为 $k_{\\text{end}}$ 的弹簧连接到一堵固定的墙上（$x_{N+1} = 0$）。来自左边弹簧的力是 $k(x_{N-1} - x_N)$。来自右边弹簧的力是 $k_{\\text{end}}(x_{N+1} - x_N) = -k_{\\text{end}}x_N$。总力为：\n$$F_N = k(x_{N-1} - x_N) - k_{\\text{end}}x_N = kx_{N-1} - (k + k_{\\text{end}})x_N$$\n最后一个质点的运动方程是：\n$$m \\ddot{x}_N = kx_{N-1} - (k + k_{\\text{end}})x_N$$\n\n为求简正模，我们假设一个解，其中所有质点都以相同的角频率 $\\omega$ 振动。我们将位移表示为复数形式 $x_i(t) = A_i e^{i\\omega t}$，其中 $A_i$ 是第 $i$ 个质点的复振幅。二阶时间导数为 $\\ddot{x}_i(t) = -\\omega^2 A_i e^{i\\omega t} = -\\omega^2 x_i(t)$。将此代入运动方程并消去公因子 $e^{i\\omega t}$，得到关于振幅 $A_i$ 的线性代数方程组：\n$$-m\\omega^2 A_1 = kA_2 - 2kA_1$$\n$$-m\\omega^2 A_i = k(A_{i-1} - 2A_i + A_{i+1}) \\quad \\text{for } 1 < i < N$$\n$$-m\\omega^2 A_N = kA_{N-1} - (k + k_{\\text{end}})A_N$$\n\n这些方程可以重新排列并表示为矩阵形式。设 $\\mathbf{A}$ 为振幅的列向量，$[A_1, A_2, \\dots, A_N]^T$。该方程组等价于特征值问题 $\\mathbf{K}\\mathbf{A} = m\\omega^2\\mathbf{A}$，其中 $\\mathbf{K}$ 是 $N \\times N$ 的刚度矩阵。这是一个广义特征值问题，可以简化为标准特征值问题：\n$$\\frac{1}{m}\\mathbf{K}\\mathbf{A} = \\omega^2\\mathbf{A}$$\n矩阵 $\\mathbf{C} = \\frac{1}{m}\\mathbf{K}$ 是动力学矩阵。其特征值 $\\lambda_j = \\omega_j^2$ 是简正角频率的平方。\n\n刚度矩阵 $\\mathbf{K}$ 是一个实的、对称的、三对角矩阵，由力方程中振幅 $A_i$ 的系数构成：\n$$\n\\mathbf{K} =\n\\begin{pmatrix}\n2k & -k & 0 & \\dots & 0 \\\\\n-k & 2k & -k & \\dots & 0 \\\\\n0 & -k & 2k & \\ddots & \\vdots \\\\\n\\vdots & \\vdots & \\ddots & 2k & -k \\\\\n0 & 0 & \\dots & -k & k+k_{\\text{end}}\n\\end{pmatrix}\n$$\n系统的势能 $U = \\frac{1}{2}\\mathbf{x}^T\\mathbf{K}\\mathbf{x} = \\frac{1}{2} k x_1^2 + \\frac{1}{2} k \\sum_{i=1}^{N-1} (x_{i+1}-x_i)^2 + \\frac{1}{2} k_{\\text{end}} x_N^2$，在 $k > 0$ 的条件下，对于任何非零位移向量都是正的。因此，矩阵 $\\mathbf{K}$ 是正定的，其所有特征值 $\\omega_j^2$ 都是严格正的。\n\n因此，问题被简化为一个计算任务：对于每组参数 $(N, m, k, k_{\\text{end}})$，构建矩阵 $\\mathbf{C} = \\frac{1}{m}\\mathbf{K}$ 并计算其特征值。最小正简正角频率 $\\omega_1$ 是最小特征值 $\\lambda_{\\text{min}}$ 的平方根。\n$$\\omega_1 = \\sqrt{\\lambda_{\\text{min}}}$$\n\n通过实现这一程序即可找到解。对于给定的 $N$，我们构建 $N \\times N$ 的矩阵 $\\mathbf{K}$，其对角元素对于 $i < N$ 为 $K_{ii} = 2k$ 且 $K_{NN} = k + k_{\\text{end}}$，其非对角元素为 $K_{i, i+1} = K_{i+1, i} = -k$。然后，我们求出 $\\mathbf{C} = \\frac{1}{m}\\mathbf{K}$ 的特征值。由于 $\\mathbf{C}$ 是实对称矩阵，其特征值是实数，可以高效地计算。这些特征值中最小的一个就给出了所求的频率 $\\omega_1$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the smallest positive normal-mode angular frequency for a 1D chain of\n    masses and springs with specified boundary conditions.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each tuple is (N, m, k, k_end)\n    test_cases = [\n        (5, 0.20, 50.0, 50.0),\n        (5, 0.20, 50.0, 1e-3),\n        (5, 0.20, 50.0, 1e6),\n        (1, 1.0, 100.0, 100.0),\n        (2, 1.0, 10.0, 0.0),\n    ]\n\n    results = []\n    for N, m, k, k_end in test_cases:\n        # The problem reduces to solving the eigenvalue problem (1/m)K * A = omega^2 * A,\n        # where K is the stiffness matrix. The eigenvalues are the squared angular frequencies.\n        # We construct the dynamical matrix C = (1/m)K and find its eigenvalues.\n\n        # The stiffness matrix K is a real, symmetric, tridiagonal NxN matrix.\n        if N == 1:\n            # For N=1, the matrix K is a 1x1 matrix with element k + k_end.\n            main_diag = np.array([k + k_end])\n            K = np.diag(main_diag)\n        else:\n            # For N > 1, construct the tridiagonal matrix K.\n            # Main diagonal elements: 2k for the first N-1 masses.\n            main_diag = np.full(N, 2 * k)\n            # The last mass has a different diagonal term.\n            main_diag[N - 1] = k + k_end\n            \n            # Off-diagonal elements: -k for connections between masses.\n            off_diag = np.full(N - 1, -k)\n            \n            # Construct K using numpy.diag.\n            K = np.diag(main_diag) + np.diag(off_diag, k=1) + np.diag(off_diag, k=-1)\n\n        # The dynamical matrix C.\n        C = (1 / m) * K\n\n        # Find the eigenvalues of the real symmetric matrix C.\n        # numpy.linalg.eigvalsh is efficient for this and returns eigenvalues\n        # sorted in ascending order.\n        eigenvalues = np.linalg.eigvalsh(C)\n        \n        # The smallest eigenvalue is the first element of the sorted array.\n        # For a stable system with k > 0, all eigenvalues are positive.\n        lambda_min = eigenvalues[0]\n        \n        # The smallest normal mode angular frequency is the square root of the smallest eigenvalue.\n        omega_1 = np.sqrt(lambda_min)\n        \n        results.append(round(omega_1, 6))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2418616"}, {"introduction": "简正模分析的威力超越了对稳定振荡的研究。通过考察一个由弹簧耦合的倒立摆链，这个练习将向你展示如何使用相同的数学框架来研究系统的稳定性。一个负的本征值 $\\omega^2$ 意味着什么？它揭示了一个指数增长的不稳定模式，而不是振荡，这在工程和物理学的许多领域都是一个至关重要的概念。[@problem_id:2418655]", "problem": "你需要分析由线性弹簧耦合的相同倒立摆链的线性稳定性。每个摆由一个质量为 $m$ 的质点附着在一根长度为 $l$ 的无质量刚性杆上组成，杆的下端为枢轴，使得对于 $i \\in \\{1,\\dots,N\\}$，直立平衡位置对应于小角度坐标 $\\theta_i \\approx 0$。相邻的摆锤由刚度为 $k$ 的相同弹簧连接，弹簧的静止长度等于枢轴的水平间距。摆链的端点是自由的，即第一个和最后一个摆锤均只连接一个弹簧。重力竖直向下，大小为 $g$。角度必须以弧度为单位。忽略阻尼和任何平面外运动。\n\n从牛顿定律（或等效地，拉格朗日方程）和一阶小角度近似 $ \\sin \\theta_i \\approx \\theta_i $ 以及第 $i$ 个摆锤的水平位移 $x_i \\approx l \\theta_i$ 出发，对直立平衡位置附近的运动方程进行线性化。根据线性化模型，组建一个形式如下的系统：\n$$\nM \\, \\ddot{\\boldsymbol{\\theta}} + K \\, \\boldsymbol{\\theta} = \\boldsymbol{0},\n$$\n其中 $M$ 是质量矩阵，$K$ 是刚度矩阵，它包含了在上述自由端连接条件下重力和弹簧的贡献。将其简化为广义特征值问题：\n$$\nK \\, \\mathbf{v} = \\omega^2 \\, M \\, \\mathbf{v}.\n$$\n直立平衡的稳定性定义如下：当且仅当广义特征值问题的所有特征值 $\\omega^2$ 均为严格正值时，平衡是线性稳定的。如果至少有一个特征值 $\\omega^2$ 是非正的，则判定平衡为不稳定。\n\n你的任务是编写一个完整的、可运行的程序，该程序针对以下测试套件中的每一组参数，根据物理模型和边值条件构建 $M$ 和 $K$，求解广义特征值问题，并报告：\n- 一个布尔值，指示如上定义的稳定性。\n- 最小特征值 $\\min_j \\omega_j^2$，四舍五入到六位小数，并以 $\\mathrm{s}^{-2}$ 为单位表示。\n\n程序必须产生单行输出，包含一个逗号分隔的列表，该列表用方括号括起，其中每个元素对应一个测试用例，并且本身是一个形式为 $[\\text{stable}, \\min \\omega^2]$ 的双元素列表。\n\n物理单位和角度单位：\n- $m$ 的单位为 $\\mathrm{kg}$，$l$ 的单位为 $\\mathrm{m}$，$k$ 的单位为 $\\mathrm{N}/\\mathrm{m}$，$g$ 的单位为 $\\mathrm{m}/\\mathrm{s}^2$。\n- $\\omega^2$ 的单位为 $\\mathrm{s}^{-2}$。\n- 角度单位为弧度。\n\n测试套件（每个元组为 $(N, m, l, k, g)$）：\n- 用例 $1$：$(\\,1,\\, 1.0,\\, 1.0,\\, 100.0,\\, 9.81\\,)$\n- 用例 $2$：$(\\,5,\\, 1.0,\\, 1.0,\\, 50.0,\\, 9.81\\,)$\n- 用例 $3$：$(\\,8,\\, 0.5,\\, 2.0,\\, 200.0,\\, 9.81\\,)$\n- 用例 $4$：$(\\,30,\\, 2.0,\\, 0.75,\\, 500.0,\\, 9.81\\,)$\n\n最终输出格式：\n- 你的程序应产生单行输出，包含一个类似 $[[b_1, v_1],[b_2, v_2],[b_3, v_3],[b_4, v_4]]$ 的列表，其中每个 $b_i$ 是一个布尔值，每个 $v_i$ 是一个四舍五入到六位小数的浮点数，单位为 $\\mathrm{s}^{-2}$，按给定顺序对应于各个用例。", "solution": "此问题要求分析由 $N$ 个耦合倒立摆组成的链的线性稳定性。当且仅当所有简正模频率 $\\omega$ 都是非零实数时，直立平衡被定义为稳定，这等价于相关广义特征值问题的所有特征值 $\\omega^2$ 均为严格正值。\n\n推导从拉格朗日方法开始。拉格朗日量 $L$ 由 $L = T - V$ 给出，其中 $T$ 是系统的总动能，$V$ 是系统的总势能。\n\n系统的总动能 $T$ 是 $N$ 个质点动能的总和。对于第 $i$ 个质量为 $m$ 的质点，其速度的平方为 $v_i^2 = (l \\dot{\\theta}_i)^2$，假设为小角度运动。因此，总动能为：\n$$T = \\sum_{i=1}^{N} \\frac{1}{2} m (l \\dot{\\theta}_i)^2 = \\frac{1}{2} m l^2 \\sum_{i=1}^{N} \\dot{\\theta}_i^2$$\n\n总势能 $V$ 包括重力势能 $V_g$ 和弹簧势能 $V_s$。\n第 $i$ 个摆相对于其枢轴点的重力势能为 $V_{g,i} = m g h_i$，其中 $h_i = l \\cos \\theta_i$ 是质点的高度。对于小角度，$\\cos \\theta_i \\approx 1 - \\frac{1}{2}\\theta_i^2$。总重力势能为：\n$$V_g = \\sum_{i=1}^{N} m g l \\cos \\theta_i \\approx \\sum_{i=1}^{N} m g l \\left(1 - \\frac{1}{2}\\theta_i^2\\right)$$\n忽略不影响运动方程的常数项 $N m g l$，我们得到：\n$$V_g \\approx -\\frac{1}{2} m g l \\sum_{i=1}^{N} \\theta_i^2$$\n\n弹簧的弹性势能取决于其伸长量。第 $i$ 个摆锤的水平位移为 $x_i \\approx l \\theta_i$。连接第 $i$ 个和第 $(i+1)$ 个摆锤的弹簧的伸长量为 $x_{i+1} - x_i \\approx l(\\theta_{i+1} - \\theta_i)$。对于一个有 $N$ 个摆的链，有 $N-1$ 个这样的弹簧，总弹簧势能为：\n$$V_s = \\sum_{i=1}^{N-1} \\frac{1}{2} k \\left(l(\\theta_{i+1} - \\theta_i)\\right)^2 = \\frac{1}{2} k l^2 \\sum_{i=1}^{N-1} (\\theta_{i+1} - \\theta_i)^2$$\n\n在小角度近似下，总势能为 $V = V_g + V_s$：\n$$V \\approx -\\frac{1}{2} m g l \\sum_{i=1}^{N} \\theta_i^2 + \\frac{1}{2} k l^2 \\sum_{i=1}^{N-1} (\\theta_{i+1} - \\theta_i)^2$$\n\n线性化的运动方程由欧拉-拉格朗日方程 $\\frac{d}{dt}\\frac{\\partial L}{\\partial \\dot{\\theta}_j} - \\frac{\\partial L}{\\partial \\theta_j} = 0$ 导出，其中 $L=T-V$。这将产生一个由 $N$ 个耦合二阶微分方程组成的系统，可以表示为矩阵形式 $M \\ddot{\\boldsymbol{\\theta}} + K \\boldsymbol{\\theta} = \\boldsymbol{0}$。\n\n从动能的表达式 $T = \\frac{1}{2} \\dot{\\boldsymbol{\\theta}}^T (m l^2 I) \\dot{\\boldsymbol{\\theta}}$，质量矩阵 $M$ 是对角矩阵：\n$$M = m l^2 I_N$$\n其中 $I_N$ 是 $N \\times N$ 的单位矩阵。\n\n从势能的表达式 $V = \\frac{1}{2} \\boldsymbol{\\theta}^T K \\boldsymbol{\\theta}$，我们可以确定对称刚度矩阵 $K$ 的元素。\n对角线元素 $K_{jj}$ 是 $\\frac{1}{2}\\theta_j^2$ 的系数，非对角线元素 $K_{ij}$ 是 $i \\neq j$ 时 $\\theta_i \\theta_j$ 的系数。\n- 对于端点（$j=1, N$）：$K_{11} = K_{NN} = k l^2 - m g l$。这是由于一个弹簧连接和重力项。\n- 对于内部的摆（$1 < j < N$）：$K_{jj} = 2 k l^2 - m g l$。这是由于两个弹簧连接和重力项。\n- 对于相邻的摆（$j, j+1$）：$K_{j, j+1} = K_{j+1, j} = -k l^2$。\n- 对于 $N=1$ 的特殊情况，没有弹簧，所以 $K_{11} = -m g l$。\n\n这个结构定义了 $N \\times N$ 的三对角刚度矩阵 $K$。\n为了找到简正模，我们假设解的形式为 $\\boldsymbol{\\theta}(t) = \\mathbf{v} e^{i \\omega t}$。将其代入运动方程得到：\n$$M (-\\omega^2 \\mathbf{v}) + K \\mathbf{v} = \\boldsymbol{0} \\implies K \\mathbf{v} = \\omega^2 M \\mathbf{v}$$\n这是我们必须求解的广义特征值问题。特征值 $\\lambda = \\omega^2$ 决定了系统的稳定性。如果所有的 $\\omega_j^2 > 0$，则平衡是稳定的。如果任何 $\\omega_j^2 \\le 0$，则平衡是不稳定的。\n\n该解答通过一个程序实现，此程序对每个测试用例 $(N, m, l, k, g)$ 执行以下步骤：\n1. 对于给定的整数 $N \\ge 1$，根据上述推导构建 $N \\times N$ 的质量矩阵 $M$ 和刚度矩阵 $K$，正确处理 $j=1, N$ 的边值条件以及 $N=1$ 的特殊情况。$M$ 是一个对角矩阵，其对角线元素为 $m l^2$。$K$ 是一个对称三对角矩阵，其元素取决于 $m, l, k, g$。\n2. 求解广义特征值问题 $K \\mathbf{v} = \\omega^2 M \\mathbf{v}$ 以获得特征值 $\\omega^2$。我们使用 `scipy.linalg.eigh` 函数，该函数专为对称/Hermitian矩阵设计。\n3. 通过检查所有计算出的特征值 $\\omega^2$ 是否均为严格正值来确定稳定性。\n4. 找到最小特征值 $\\min_j \\omega_j^2$。\n5. 按要求将稳定性结果格式化为布尔值，并将最小特征值四舍五入到六位小数。\n\n此过程应用于所提供的每个测试用例。对该问题的解析分析表明，最低特征值始终为 $\\omega_1^2 = -g/l$，这对应于所有摆同相运动的模式，此时弹簧力可以忽略不计。这意味着该系统总是不稳定的，数值计算预期将证实这一事实。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import eigh\n\ndef solve():\n    \"\"\"\n    Analyzes the stability of a chain of coupled inverted pendulums\n    for a given set of test cases.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (N, m, l, k, g)\n        (1, 1.0, 1.0, 100.0, 9.81),\n        (5, 1.0, 1.0, 50.0, 9.81),\n        (8, 0.5, 2.0, 200.0, 9.81),\n        (30, 2.0, 0.75, 500.0, 9.81),\n    ]\n\n    results = []\n    for case in test_cases:\n        N, m, l, k, g = case\n        \n        # Construct the Mass Matrix M\n        # M is a diagonal matrix with ml^2 on the diagonal.\n        M = (m * l**2) * np.eye(N)\n\n        # Construct the Stiffness Matrix K\n        # K is derived from gravitational and spring potential energies.\n        if N == 1:\n            # Special case for a single pendulum: no springs.\n            K = np.array([[-m * g * l]])\n        else:\n            # General case for N > 1 pendulums with free ends.\n            main_diag = np.full(N, 2 * k * l**2 - m * g * l)\n            # The endpoints have only one spring connection.\n            main_diag[0] = k * l**2 - m * g * l\n            main_diag[-1] = k * l**2 - m * g * l\n            \n            # The off-diagonal elements are from spring coupling.\n            off_diag = np.full(N - 1, -k * l**2)\n            \n            K = np.diag(main_diag) + np.diag(off_diag, k=1) + np.diag(off_diag, k=-1)\n\n        # Solve the generalized eigenvalue problem K*v = w^2*M*v\n        # eigh is used for symmetric matrices. M is positive definite.\n        # The eigenvalues returned are the squared angular frequencies, w^2.\n        eigenvalues_w2 = eigh(K, M, eigvals_only=True)\n\n        # Determine stability and find the minimum eigenvalue.\n        # The system is stable iff all eigenvalues are strictly positive.\n        min_eigenvalue = np.min(eigenvalues_w2)\n        is_stable = bool(np.all(eigenvalues_w2 > 0)) # Using bool() to convert from numpy.bool_\n\n        # Append the result for the current case.\n        # The minimum eigenvalue must be rounded to six decimal places.\n        results.append([is_stable, round(min_eigenvalue, 6)])\n\n    # The final print statement must match the exact specified format.\n    # The format is a string representation of a Python list of lists.\n    # f-string with a join on the string representation of each sublist achieves this.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2418655"}]}