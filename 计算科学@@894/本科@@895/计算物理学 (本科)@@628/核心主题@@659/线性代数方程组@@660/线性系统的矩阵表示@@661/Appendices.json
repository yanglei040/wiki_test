{"hands_on_practices": [{"introduction": "求解线性方程组是计算物理的核心任务之一。尽管存在像高斯消元这样的通用方法，但当矩阵具有特殊结构时，我们可以采用更高效的算法。本练习将引导你使用“回代法”来求解一个上三角系统，这不仅能让你掌握一种基本且快速的求解技巧，还能为理解更复杂的矩阵分解方法（如 $LU$ 分解）打下坚实的基础。[@problem_id:14096]", "problem": "考虑一个以矩阵形式 `Ux = b` 表示的线性方程组，其中 `U` 是一个 3x3 上三角矩阵，`x` 和 `b` 是 3x1 的列向量。\n\n矩阵 `U` 和向量 `b` 由下式给出：\n$$\nU = \\begin{pmatrix} a & b & c \\\\ 0 & d & e \\\\ 0 & 0 & f \\end{pmatrix}, \\quad b = \\begin{pmatrix} p \\\\ q \\\\ r \\end{pmatrix}\n$$\n未知向量为 `x = [x_1, x_2, x_3]^T`。参数 `a, b, c, d, e, f, p, q, r` 是任意常数，且满足对角线元素 `a, d, f` 均不为零的条件。\n\n使用回代法，为解向量 `x` 的分量 `x_1` 推导一个符号表达式。最终的表达式应以给定的常数表示。", "solution": "我们通过回代法求解上三角方程组 $Ux=b$。将方程写出，\n$$\n\\begin{cases}\na\\,x_1 + b\\,x_2 + c\\,x_3 = p,\\\\\nd\\,x_2 + e\\,x_3 = q,\\\\\nf\\,x_3 = r.\n\\end{cases}\n$$\n由于 $f\\neq0$，从第三个方程可得\n$$\nx_3 = \\frac{r}{f}.\n$$\n代入第二个方程，注意到 $d\\neq0$，\n$$\nd\\,x_2 + e\\bigl(\\tfrac{r}{f}\\bigr) = q\n\\quad\\Longrightarrow\\quad\nx_2 = \\frac{q - \\frac{e\\,r}{f}}{d}\n= \\frac{q f - e\\,r}{d\\,f}.\n$$\n最后，将 $x_2$ 和 $x_3$ 代入第一个方程，其中 $a\\neq0$，\n$$\na\\,x_1\n= p - b\\,x_2 - c\\,x_3\n= p - b\\Bigl(\\frac{q f - e r}{d f}\\Bigr) - c\\Bigl(\\frac{r}{f}\\Bigr).\n$$\n使用公分母 $d f$ 合并各项，\n$$\np - b\\frac{qf - e r}{df} - c\\frac{r}{f}\n= \\frac{p\\,d\\,f - \\bigl(b(qf - e r) + c\\,r\\,d\\bigr)}{d\\,f}\n= \\frac{p\\,d\\,f - b\\,q\\,f + b\\,e\\,r - c\\,d\\,r}{d\\,f}.\n$$\n因此\n$$\nx_1 = \\frac{1}{a}\\;\\frac{p\\,d\\,f - b\\,q\\,f + b\\,e\\,r - c\\,d\\,r}{d\\,f}\n= \\frac{p\\,d\\,f - b\\,q\\,f + b\\,e\\,r - c\\,d\\,r}{a\\,d\\,f}.\n$$", "answer": "$$\\boxed{\\frac{p\\,d\\,f - b\\,q\\,f + b\\,e\\,r - c\\,d\\,r}{a\\,d\\,f}}$$", "id": "14096"}, {"introduction": "线性代数的强大之处在于它能为复杂的物理问题提供一个清晰的数学框架。本练习通过一个电阻网络案例，展示了如何将基尔霍夫电流定律等物理法则转化为矩阵方程 $LV=I$。你将从中学习如何构建物理系统的矩阵表示，并探索矩阵的数学性质（如奇异性和零空间）与物理概念（如电势参考点或“接地”的选择）之间的深刻联系。[@problem_id:2412372]", "problem": "考虑一个无源电阻网络，其节点标记为 $1$ 至 $4$，电阻仅置于直接相连的节点之间，如下所示：$R_{12}=2\\,\\Omega$，$R_{23}=1\\,\\Omega$，$R_{34}=2\\,\\Omega$。节点 $1$ 和 $3$ 之间、节点 $1$ 和 $4$ 之间、以及节点 $2$ 和 $4$ 之间没有直接连接。令 $V_i$ 表示节点 $i$ 的电位，令 $I_i$ 表示在节点 $i$ 的外部注入电流（从外部源注入节点时为正值）。使用欧姆定律和基尔霍夫电流定律 (KCL) 来建立将节点电位向量与电流注入向量相关联的线性系统。KCL 指出，离开任一节点的电流之和等于该节点的净注入电流。\n\n从以下定义出发：从节点 $i$ 流向节点 $j$、经过电阻 $R_{ij}$ 的电流为 $I_{ij} = (V_i - V_j)/R_{ij}$；节点 $i$ 处的 KCL 为 $\\sum_{j \\in \\mathcal{N}(i)} (V_i - V_j)/R_{ij} = I_i$，其中 $\\mathcal{N}(i)$ 表示通过电阻与节点 $i$ 相连的节点集合。根据这些原理，节点方程具有矩阵形式 $L V = I$，其中 $L$ 是由电导 $G_{ij} = 1/R_{ij}$ 构成的基尔霍夫（图拉普拉斯）矩阵。\n\n通过选择所有正确选项来回答以下问题。\n\nA. 当选择节点 $4$ 为参考点（接地）以使 $V_4 = 0$，且未知量为节点电位 $(V_1, V_2, V_3)$ 时，降阶线性系统 $L_{\\mathrm{red}} \\begin{bmatrix} V_1 \\\\ V_2 \\\\ V_3 \\end{bmatrix} = \\begin{bmatrix} I_1 \\\\ I_2 \\\\ I_3 \\end{bmatrix}$ 中的 KCL 矩阵 $L_{\\mathrm{red}}$ 是\n$$\n\\begin{bmatrix}\n\\frac{1}{2} & -\\frac{1}{2} & 0 \\\\\n-\\frac{1}{2} & \\frac{3}{2} & -1 \\\\\n0 & -1 & \\frac{3}{2}\n\\end{bmatrix}.\n$$\n\nB. 如果节点 $4$ 未接地，且所有 $4$ 个节点电位 $(V_1,V_2,V_3,V_4)$ 均为未知，那么对于满足 $\\sum_{i=1}^4 I_i = 0$ 的任意电流注入 $I$，KCL 矩阵 $L$ 都是奇异的。其零空间是一维的，由全1向量张成，其物理意义是，为所有节点电位增加一个均匀的常数偏移不会改变任何支路电流。\n\nC. 在由节点 $1$–$4$ 构成的未接地网络中，如果移除（开路）节点 $2$ 和 $3$ 之间的电阻，网络会分解为两个不连通的分量 $\\{1,2\\}$ 和 $\\{3,4\\}$，并且 KCL 矩阵 $L$ 的秩亏更加严重：其零空间维度为 $2$，由在每个连通分量上为常数的向量张成。物理上，这对应于在每个分量上独立的任意参考点偏移，而不会引起任何支路电流。\n\nD. KCL 矩阵的零空间向量表示即使在所有节点电压差为零时也能流动的非零循环环路电流；因此，零空间编码的是网孔电流而非电压规范自由度。\n\n选择所有正确选项（可能不止一个）。", "solution": "首先验证问题陈述，以确保其在科学上是合理的、提法是恰当的且信息是完整的。\n\n**第1步：提取已知条件**\n- 节点标签：$1, 2, 3, 4$。\n- 电阻值：$R_{12}=2\\,\\Omega$，$R_{23}=1\\,\\Omega$，$R_{34}=2\\,\\Omega$。\n- 网络拓扑：节点 $1$ 和 $3$、 $1$ 和 $4$、或 $2$ 和 $4$ 之间没有直接连接。\n- $V_i$：节点 $i$ 的电位。\n- $I_i$：在节点 $i$ 外部注入的电流。\n- 从节点 $i$ 到 $j$ 的电流：$I_{ij} = (V_i - V_j)/R_{ij}$。\n- 节点 $i$ 处的基尔霍夫电流定律 (KCL)：$\\sum_{j \\in \\mathcal{N}(i)} (V_i - V_j)/R_{ij} = I_i$。\n- 矩阵表示：$L V = I$，其中 $L$ 是基尔霍夫（图拉普拉斯）矩阵。\n- 电导：$G_{ij} = 1/R_{ij}$。\n\n**第2步：使用提取的已知条件进行验证**\n- **科学基础：** 该问题基于欧姆定律和基尔霍夫电流定律，这些是电路理论的基本原理。使用图拉普拉斯矩阵（或节点导纳矩阵）的矩阵公式是计算物理和电气工程中解决此类问题的标准技术。这些原理是正确的。\n- **提法恰当性：** 网络拓扑和元件值已明确给出。问题要求对最终的数学模型进行具体、可验证的陈述评估。\n- **客观性：** 问题以精确、技术性的语言陈述，没有歧义或主观元素。\n- **完整性与一致性：** 提供了构建KCL矩阵所需的所有必要信息。设置中没有矛盾。\n\n**第3步：结论与操作**\n问题陈述有效。可以推导出解答。\n\n**推导完整的KCL矩阵**\n\nKCL矩阵 $L$，也称为节点导纳矩阵或图拉普拉斯矩阵，是由电导 $G_{ij} = 1/R_{ij}$ 构建的。\n给定的电阻为 $R_{12} = 2\\,\\Omega$，$R_{23} = 1\\,\\Omega$ 和 $R_{34} = 2\\,\\Omega$。\n相应的电导是：\n- $G_{12} = 1/R_{12} = 1/2$。\n- $G_{23} = 1/R_{23} = 1/1 = 1$。\n- $G_{34} = 1/R_{34} = 1/2$。\n\n$4 \\times 4$ 矩阵 $L$ 的元素定义如下：\n- $L_{ii} = \\sum_{j \\neq i, j \\text{ connected to } i} G_{ij}$ (连接到节点 $i$ 的电导之和)。\n- $L_{ij} = -G_{ij}$ 对于 $i \\neq j$ 且节点 $i, j$ 相连。\n- $L_{ij} = 0$ 对于 $i \\neq j$ 且节点 $i, j$ 不相连。\n\n我们来计算这些元素：\n- $L_{11} = G_{12} = 1/2$。\n- $L_{22} = G_{21} + G_{23} = 1/2 + 1 = 3/2$。\n- $L_{33} = G_{32} + G_{34} = 1 + 1/2 = 3/2$。\n- $L_{44} = G_{43} = 1/2$。\n\n非对角元素为：\n- $L_{12} = L_{21} = -G_{12} = -1/2$。\n- $L_{23} = L_{32} = -G_{23} = -1$。\n- $L_{34} = L_{43} = -G_{34} = -1/2$。\n- 所有其他非对角元素（$L_{13}, L_{14}, L_{24}$ 等）均为 $0$，因为没有直接连接。\n\n完整的KCL矩阵 $L$ 是：\n$$\nL = \\begin{bmatrix}\n\\frac{1}{2} & -\\frac{1}{2} & 0 & 0 \\\\\n-\\frac{1}{2} & \\frac{3}{2} & -1 & 0 \\\\\n0 & -1 & \\frac{3}{2} & -\\frac{1}{2} \\\\\n0 & 0 & -\\frac{1}{2} & \\frac{1}{2}\n\\end{bmatrix}\n$$\n方程组为 $L V = I$，其中 $V = [V_1, V_2, V_3, V_4]^T$ 且 $I = [I_1, I_2, I_3, I_4]^T$。\n\n**逐项分析**\n\n**A. 选项A的评估**\n该选项考虑了节点 $4$ 为参考点（接地）的情况，即 $V_4 = 0$。降阶系统涉及未知电位 $(V_1, V_2, V_3)$。寻找降阶矩阵 $L_{\\mathrm{red}}$ 的步骤是从完整矩阵 $L$ 中移除对应于接地节点的行和列。在这种情况下，我们移除第 $4$ 行和第 $4$ 列。\n完整的系统是：\n$$\n\\begin{bmatrix}\n\\frac{1}{2} & -\\frac{1}{2} & 0 & 0 \\\\\n-\\frac{1}{2} & \\frac{3}{2} & -1 & 0 \\\\\n0 & -1 & \\frac{3}{2} & -\\frac{1}{2} \\\\\n0 & 0 & -\\frac{1}{2} & \\frac{1}{2}\n\\end{bmatrix}\n\\begin{bmatrix}\nV_1 \\\\ V_2 \\\\ V_3 \\\\ V_4\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nI_1 \\\\ I_2 \\\\ I_3 \\\\ I_4\n\\end{bmatrix}\n$$\n我们只需要利用前三个方程求解前三个电位。在前三个方程中令 $V_4=0$ 可得：\n$$\n\\begin{cases}\n\\frac{1}{2} V_1 - \\frac{1}{2} V_2 = I_1 \\\\\n-\\frac{1}{2} V_1 + \\frac{3}{2} V_2 - 1 V_3 = I_2 \\\\\n-1 V_2 + \\frac{3}{2} V_3 = I_3\n\\end{cases}\n$$\n这对应于矩阵方程 $L_{\\mathrm{red}} \\begin{bmatrix} V_1 \\\\ V_2 \\\\ V_3 \\end{bmatrix} = \\begin{bmatrix} I_1 \\\\ I_2 \\\\ I_3 \\end{bmatrix}$，其中：\n$$\nL_{\\mathrm{red}} = \\begin{bmatrix}\n\\frac{1}{2} & -\\frac{1}{2} & 0 \\\\\n-\\frac{1}{2} & \\frac{3}{2} & -1 \\\\\n0 & -1 & \\frac{3}{2}\n\\end{bmatrix}\n$$\n这与选项A中给出的矩阵完全匹配。\n**A 的结论：正确。**\n\n**B. 选项B的评估**\n该选项涉及完整的 $4 \\times 4$ 矩阵 $L$ 的性质。首先，我们检查 $L$ 是否是奇异的。任何图拉普拉斯矩阵的一个性质是其行和为零。\n第1行：$\\frac{1}{2} - \\frac{1}{2} + 0 + 0 = 0$。\n第2行：$-\\frac{1}{2} + \\frac{3}{2} - 1 + 0 = 0$。\n第3行：$0 - 1 + \\frac{3}{2} - \\frac{1}{2} = 0$。\n第4行：$0 + 0 - \\frac{1}{2} + \\frac{1}{2} = 0$。\n由于所有行和均为零，向量 $\\mathbf{v} = [1, 1, 1, 1]^T$ 是特征值为 $0$ 的右特征向量，即 $L\\mathbf{v} = \\mathbf{0}$。这意味着 $\\mathbf{v}$ 位于 $L$ 的零空间中，因此 $L$ 是奇异的。\n根据代数图论，图拉普拉斯矩阵的零空间维度等于图中连通分量的数量。网络 $1-2-3-4$ 是连通的，因此只有一个连通分量。因此，零空间是一维的，并由向量 $[1, 1, 1, 1]^T$ 张成。\n系统 $LV=I$ 有解的充要条件是向量 $I$ 属于 $L$ 的列空间。对于像 $L$ 这样的对称矩阵，列空间是零空间的正交补。因此，$I$ 必须与零空间基向量 $\\mathbf{v} = [1, 1, 1, 1]^T$ 正交。该条件是 $\\mathbf{v}^T I = 0$，即 $I_1+I_2+I_3+I_4=0$。这是隔离网络（没有电流流失到全局地）的总体KCL。\n零空间向量的物理意义是，如果 $V$ 是一个解，那么对于任意常数 $c$，$V+c\\mathbf{v}$ 也是一个解，因为 $L(V+c\\mathbf{v}) = LV + cL\\mathbf{v} = LV + \\mathbf{0} = I$。将所有电位 $V_i$ 增加一个常数 $c$ 并不改变电位差 $(V_i+c)-(V_j+c) = V_i-V_j$，因此也不会改变任何支路电流。这是设置参考电位时的规范自由度。\n**B 的结论：正确。**\n\n**C. 选项C的评估**\n该选项考虑移除电阻 $R_{23}$，这意味着其电导 $G_{23}$ 变为 $0$。网络分解为两个独立的分量：由 $R_{12}$ 连接的 $\\{1,2\\}$，和由 $R_{34}$ 连接的 $\\{3,4\\}$。\n新的KCL矩阵 $L'$ 是通过在原始公式中令 $G_{23}=0$ 得到的。\n$L'_{11} = G_{12} = 1/2$。\n$L'_{22} = G_{21} = 1/2$。\n$L'_{33} = G_{34} = 1/2$。\n$L'_{44} = G_{43} = 1/2$。\n$L'_{12}=L'_{21}=-G_{12}=-1/2$。\n$L'_{34}=L'_{43}=-G_{34}=-1/2$。\n所有其他非对角元素都为 $0$。\n$$\nL' = \\begin{bmatrix}\n\\frac{1}{2} & -\\frac{1}{2} & 0 & 0 \\\\\n-\\frac{1}{2} & \\frac{1}{2} & 0 & 0 \\\\\n0 & 0 & \\frac{1}{2} & -\\frac{1}{2} \\\\\n0 & 0 & -\\frac{1}{2} & \\frac{1}{2}\n\\end{bmatrix}\n$$\n如选项B所述，零空间的维度等于连通分量的数量。这里有两个分量，所以零空间维度为 $2$。\n零空间由在每个分量上为常数的向量张成。该零空间的一个基由 $\\mathbf{v}_1 = [1, 1, 0, 0]^T$ 和 $\\mathbf{v}_2 = [0, 0, 1, 1]^T$ 给出。零空间中的任何向量都具有形式 $c_1 \\mathbf{v}_1 + c_2 \\mathbf{v}_2 = [c_1, c_1, c_2, c_2]^T$。\n在物理上，这对应于可以为分量 $\\{1,2\\}$ 独立于分量 $\\{3,4\\}$ 的参考点来设置电位参考。将 $\\{1,2\\}$ 中的所有电位移动 $c_1$ 并将 $\\{3,4\\}$ 中的所有电位移动 $c_2$ 并不会改变任一分量内部的任何电位差，因此不会感应出任何支路电流。\n**C 的结论：正确。**\n\n**D. 选项D的评估**\n该选项声称零空间向量代表“非零循环环路电流”并编码“网孔电流”。这在根本上是错误的。\nKCL矩阵 $L$ 的零空间由满足 $L V_{\\text{null}} = \\mathbf{0}$ 的电位向量 $V_{\\text{null}}$ 组成。根据定义，$L V = I$，因此这些是要求每个节点外部电流注入为零的电位配置。\n通过节点 $i$ 和 $j$ 之间支路的电流是 $I_{ij} = (V_i - V_j)/R_{ij}$。连通图的拉普拉斯矩阵零空间中的向量形式为 $V_{\\text{null}} = [c, c, ..., c]^T$。对于这样的电位向量，任何电阻两端的电位差都是 $V_i - V_j = c - c = 0$。因此，所有支路电流都为零。这直接与“非零循环环路电流”的观点相矛盾。\n环路电流的概念属于网孔分析法，它是节点分析法的对偶。网孔分析基于基尔霍夫电压定律（KVL）。KCL（节点导纳）矩阵的零空间与电压参考的选择（规范自由度）有关，而与网孔电流无关。该陈述混淆了电路分析中使用的不同矩阵的零空间的数学和物理意义。\n**D 的结论：不正确。**", "answer": "$$\\boxed{ABC}$$", "id": "2412372"}, {"introduction": "在理论上可解的线性系统，在计算机上求解时却可能遇到意想不到的困难。本练习将通过一个经典的“病态”矩阵——希尔伯特矩阵，让你亲身体验数值计算的现实挑战。通过比较不同浮点精度下的计算结果，你将直观地理解“病态问题”如何放大舍入误差，并认识到在进行科学计算时，评估矩阵的条件数对于确保结果的可靠性至关重要。[@problem_id:2412354]", "problem": "考虑一个线性系统，该系统源于一个矩反演问题的离散化，其核函数会产生一个希尔伯特矩阵。对于给定的整数大小 $n \\ge 1$，定义希尔伯特矩阵 $H \\in \\mathbb{R}^{n \\times n}$，其元素为\n$$\nH_{ij} = \\frac{1}{i + j - 1}, \\quad \\text{for } i,j \\in \\{1,2,\\dots,n\\}.\n$$\n假设精确（未知）的物理参数汇集在一个向量 $x^{\\ast} \\in \\mathbb{R}^n$ 中，其所有分量 $x^{\\ast}_i = 1$（对于所有 $i \\in \\{1,2,\\dots,n\\}$）。定义右侧向量 $b \\in \\mathbb{R}^n$ 为\n$$\nb = H x^{\\ast}.\n$$\n对于每个测试大小 $n$，您必须用两种浮点精度求解线性系统\n$$\nH x = b\n$$\n：单精度（$32$位）和双精度（$64$位），并通过计算解向量的相对$2$-范数误差来量化其对舍入误差的敏感性。具体来说，对于一个计算出的解 $\\hat{x}$，定义其相对误差为\n$$\n\\varepsilon(\\hat{x}) = \\frac{\\lVert \\hat{x} - x^{\\ast} \\rVert_2}{\\lVert x^{\\ast} \\rVert_2}.\n$$\n此外，通过$H$的谱条件数（$2$-范数）来刻画其病态性，\n$$\n\\kappa_2(H) = \\frac{\\sigma_{\\max}(H)}{\\sigma_{\\min}(H)},\n$$\n其中 $\\sigma_{\\max}(H)$ 和 $\\sigma_{\\min}(H)$ 分别是 $H$ 的最大和最小奇异值，通过奇异值分解 (SVD) 获得。\n\n您的任务是编写一个完整的、可运行的程序。对于每个测试用例，该程序应构造 $H$，由 $x^{\\ast}$ 生成 $b$，分别用 $32$ 位和 $64$ 位浮点算术求解 $x$，计算相对误差 $\\varepsilon_{32}$ 和 $\\varepsilon_{64}$，并用 $64$ 位算术计算 $\\kappa_2(H)$。最终输出应将所有测试用例的结果汇总到单行中。\n\n测试集：\n- 待评估的大小 $n$：$n \\in \\{3, 8, 12\\}$。\n\n对于每个测试用例的大小 $n$，要求的输出是一个列表，按以下顺序包含三个浮点数：\n- $\\varepsilon_{32}$：使用 $32$ 位算术计算的相对$2$-范数误差，\n- $\\varepsilon_{64}$：使用 $64$ 位算术计算的相对$2$-范数误差，\n- $\\kappa_2(H)$：使用 $64$ 位算术计算的 $H$ 的谱条件数。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含各测试用例的三元素列表，顺序为 $n=3$，$n=8$，$n=12$。该行必须是单个 Python 风格的列表字面量，使用逗号分隔条目并用方括号括起，例如：\"[[e32_case1,e64_case1,cond_case1],[e32_case2,e64_case2,cond_case2],[e32_case3,e64_case3,cond_case3]]\"。\n- 所有值都必须表示为十进制或科学记数法下的无量纲浮点数。", "solution": "所提出的问题是数值线性代数中一个适定性练习，旨在展示矩阵条件和有限精度算术对线性系统求解的重大影响。任务是针对几种矩阵大小 $n$ 求解系统 $H x = b$（其中 $H$ 是希尔伯特矩阵），并量化随着病态性增加和浮点精度降低，解精度的下降程度。\n\n首先，我们用数学的严谨性来定义问题的各个组成部分。大小为 $n \\times n$ 的希尔伯特矩阵 $H$ 是一个对称矩阵，其元素由下式给出：\n$$\nH_{ij} = \\frac{1}{i + j - 1}, \\quad \\text{for } i, j \\in \\{1, 2, \\dots, n\\}.\n$$\n这些矩阵是病态系统的典型例子。问题指定了一个精确解向量 $x^{\\ast} \\in \\mathbb{R}^n$，其每个分量都为 1，即对所有 $i$ 都有 $x^{\\ast}_i = 1$。右侧向量 $b \\in \\mathbb{R}^n$ 是根据精确解构造的，以确保一致性：\n$$\nb = H x^{\\ast}.\n$$\n$b$ 的分量因此是 $b_i = \\sum_{j=1}^n H_{ij} x^{\\ast}_j = \\sum_{j=1}^n \\frac{1}{i+j-1}$。\n\n核心任务是数值求解系统 $H x = b$ 中的 $x$，并将计算出的解（我们记为 $\\hat{x}$）与已知的真实解 $x^{\\ast}$进行比较。与真实解的偏差是由数值计算中两种复合的误差源引起的：\n$1$. **表示误差**：$H$ 和 $b$ 的小数元素并不总能以有限精度的二进制浮点格式（例如，$32$ 位或 $64$ 位）精确存储。\n$2$. **舍入误差放大**：在线性求解器算法（如 LU 分解后跟回代）的执行过程中，每个算术步骤都会引入进一步的舍入误差。矩阵 $H$ 的病态性会极大地放大这些微小的初始和中间误差。\n\n这种放大的程度由矩阵的条件数来量化。问题指定了谱条件数或 $2$-范数条件数 $\\kappa_2(H)$，定义为：\n$$\n\\kappa_2(H) = \\lVert H \\rVert_2 \\lVert H^{-1} \\rVert_2 = \\frac{\\sigma_{\\max}(H)}{\\sigma_{\\min}(H)},\n$$\n其中 $\\sigma_{\\max}(H)$ 和 $\\sigma_{\\min}(H)$ 分别是 $H$ 的最大奇异值和最小奇异值。$\\kappa_2(H)$ 的值很大，表明输入数据（向量 $b$）中的微小相对误差可能导致输出解（向量 $x$）中产生巨大的相对误差。希尔伯特矩阵的条件数随 $n$ 的增长极其迅速；例如，对于 $n=12$，$\\kappa_2(H)$ 的数量级约为 $10^{16}$，这大约是 $64$ 位双精度算术的机器 epsilon 的倒数。这意味着会发生灾难性的精度损失。\n\n我们将使用相对$2$-范数误差 $\\varepsilon(\\hat{x})$ 来量化计算解 $\\hat{x}$ 的精度：\n$$\n\\varepsilon(\\hat{x}) = \\frac{\\lVert \\hat{x} - x^{\\ast} \\rVert_2}{\\lVert x^{\\ast} \\rVert_2}.\n$$\n由于 $x^{\\ast}$ 是一个包含 $n$ 个 1 的向量，其 $2$-范数为 $\\lVert x^{\\ast} \\rVert_2 = \\sqrt{\\sum_{i=1}^n 1^2} = \\sqrt{n}$。因此，误差计算为 $\\varepsilon(\\hat{x}) = \\frac{1}{\\sqrt{n}} \\lVert \\hat{x} - x^{\\ast} \\rVert_2$。\n\n对于每个测试大小 $n \\in \\{3, 8, 12\\}$，计算步骤如下：\n$1$. **问题构造**：使用 $64$ 位双精度浮点数构造矩阵 $H$ 和向量 $x^{\\ast}$ 以获得最大保真度。计算右侧向量 $b = H x^{\\ast}$。\n$2$. **条件数计算**：计算 $64$ 位矩阵 $H$ 的奇异值，以求得 $\\kappa_2(H) = \\sigma_{\\max}(H) / \\sigma_{\\min}(H)$。\n$3$. **单精度求解**：将矩阵 $H$ 和向量 $b$ 转换为 $32$ 位单精度格式（$H_{32}$ 和 $b_{32}$）。求解线性系统 $H_{32} \\hat{x}_{32} = b_{32}$ 以获得单精度解 $\\hat{x}_{32}$。计算相应的相对误差 $\\varepsilon_{32}$。\n$4$. **双精度求解**：求解原始的 $64$ 位系统 $H \\hat{x}_{64} = b$ 以获得双精度解 $\\hat{x}_{64}$。计算相对误差 $\\varepsilon_{64}$。\n$5$. **结果汇总**：整理三个计算值：单精度相对误差 $\\varepsilon_{32}$、双精度相对误差 $\\varepsilon_{64}$ 和条件数 $\\kappa_2(H)$。\n\n该过程将对每个指定的大小 $n$ 执行，并按要求呈现结果，以说明 $32$ 位和 $64$ 位算术在求解质量上的显著差异，以及这种差异是如何由希尔伯特矩阵的巨大条件数决定的。对于较大的 $n$，我们预计 $\\varepsilon_{32}$ 将大于 $1$，这表明解已没有任何正确数字。即使是 $\\varepsilon_{64}$ 也会显著增长，反映出对此类病态问题进行计算的理论极限。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Hilbert matrix linear system problem for specified sizes,\n    calculating errors for single and double precision and the condition number.\n    \"\"\"\n    \n    # Test suite: sizes n to evaluate.\n    test_cases = [3, 8, 12]\n\n    results = []\n    \n    for n in test_cases:\n        # Step 1: Construct the problem in 64-bit precision (double).\n        # This provides the most accurate \"ground truth\" for the matrix H and vector b.\n        \n        # Create an array of indices from 1 to n for vectorized matrix construction.\n        i = np.arange(1, n + 1, dtype=np.float64).reshape(-1, 1)\n        j = np.arange(1, n + 1, dtype=np.float64)\n        \n        # Construct the Hilbert matrix H using broadcasting.\n        H_64 = 1.0 / (i + j - 1)\n        \n        # Define the exact solution x* (a vector of ones).\n        x_star_64 = np.ones(n, dtype=np.float64)\n        \n        # Compute the right-hand side vector b = H * x*.\n        b_64 = H_64 @ x_star_64\n        \n        # Step 2: Compute the spectral condition number of H in 64-bit precision.\n        # np.linalg.cond(H, 2) computes the 2-norm condition number, which is\n        # the ratio of the largest to smallest singular values.\n        kappa_H = np.linalg.cond(H_64, 2)\n        \n        # Step 3: Solve in 32-bit precision (single) and compute the error.\n        \n        # Cast the 64-bit matrix and vector to 32-bit.\n        H_32 = H_64.astype(np.float32)\n        b_32 = b_64.astype(np.float32)\n        \n        # Solve the linear system H_32 * x_hat_32 = b_32.\n        x_hat_32 = np.linalg.solve(H_32, b_32)\n        \n        # To accurately compute the error, cast the 32-bit solution back to 64-bit\n        # before subtracting it from the exact 64-bit solution vector.\n        error_vec_32 = x_hat_32.astype(np.float64) - x_star_64\n        \n        # Compute the relative 2-norm error.\n        norm_x_star = np.linalg.norm(x_star_64, 2)\n        e_32 = np.linalg.norm(error_vec_32, 2) / norm_x_star\n        \n        # Step 4: Solve in 64-bit precision (double) and compute the error.\n        \n        # Solve the linear system H_64 * x_hat_64 = b_64.\n        x_hat_64 = np.linalg.solve(H_64, b_64)\n        \n        # Compute the error vector.\n        error_vec_64 = x_hat_64 - x_star_64\n        \n        # Compute the relative 2-norm error.\n        e_64 = np.linalg.norm(error_vec_64, 2) / norm_x_star\n        \n        # Step 5: Collect results for this case.\n        results.append([e_32, e_64, kappa_H])\n\n    # Final print statement in the exact required format.\n    # The output is a string representation of a Python list of lists.\n    print(f\"[{','.join(f'[{e32},{e64},{k}]' for e32, e64, k in results)}]\")\n\nsolve()\n\n```", "id": "2412354"}]}