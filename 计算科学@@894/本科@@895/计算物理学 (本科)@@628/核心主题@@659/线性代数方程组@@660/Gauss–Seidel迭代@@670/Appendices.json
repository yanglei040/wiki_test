{"hands_on_practices": [{"introduction": "理论知识需要通过实践来巩固。这个练习将引导你完成高斯-赛德尔方法的单次迭代。通过一个简单的二维经济模型，你将亲手操作该方法的核心更新机制：利用最新计算出的变量值来求解下一个变量，从而掌握其最基本的计算流程。[@problem_id:1394889]", "problem": "在一个简化的经济模型中，技术（$x_1$）和服务（$x_2$）两个相互依赖的部门的产出必须满足市场均衡条件。这些部门的生产水平（以万亿货币单位计量）之间的关系由以下线性方程组描述：\n\n$$\n\\begin{align*}\n5x_1 - x_2 &= 12 \\\\\n-2x_1 + 6x_2 &= 20\n\\end{align*}\n$$\n\n一位经济学家正试图通过迭代法找到均衡生产水平。从初始估计值 $x_1^{(0)} = 3.0$ 和 $x_2^{(0)} = 4.0$ 开始，执行一次高斯-赛德尔（Gauss-Seidel）方法的迭代，以找到生产水平的下一个近似值 $(x_1^{(1)}, x_2^{(1)})$。\n\n将您的答案 $x_1^{(1)}$ 和 $x_2^{(1)}$ 以万亿货币单位表示，并将每个值四舍五入到三位有效数字。", "solution": "我们对该线性系统进行一次高斯-赛德尔迭代，一旦计算出新值就立即使用最新的可用值。首先，重写每个方程，求解其对角项对应的变量：\n$$\n5x_{1}-x_{2}=12 \\implies x_{1}=\\frac{12+x_{2}}{5}, \\quad -2x_{1}+6x_{2}=20 \\implies x_{2}=\\frac{20+2x_{1}}{6}=\\frac{10+x_{1}}{3}.\n$$\n给定初始估计值 $x_{1}^{(0)}=3.0$ 和 $x_{2}^{(0)}=4.0$，使用 $x_{2}^{(0)}$ 计算 $x_{1}^{(1)}$：\n$$\nx_{1}^{(1)}=\\frac{12+x_{2}^{(0)}}{5}=\\frac{12+4.0}{5}=\\frac{16}{5}=3.2.\n$$\n接下来，使用新更新的 $x_{1}^{(1)}$ 计算 $x_{2}^{(1)}$：\n$$\nx_{2}^{(1)}=\\frac{10+x_{1}^{(1)}}{3}=\\frac{10+3.2}{3}=\\frac{13.2}{3}=4.4.\n$$\n将每个值四舍五入到三位有效数字，得到 $x_{1}^{(1)}=3.20$ 和 $x_{2}^{(1)}=4.40$（单位为万亿货币单位）。", "answer": "$$\\boxed{\\begin{pmatrix} 3.20 & 4.40 \\end{pmatrix}}$$", "id": "1394889"}, {"introduction": "单步迭代展示了方法如何操作，但其真正的威力在于其收敛（或发散）的动态过程。此练习将理论与编程实践相结合，要求你编写代码来实现高斯-赛德尔算法。通过在不同性质的矩阵（如对称正定矩阵和非正定矩阵）上测试你的代码，你将直观地观察到理论预测的收敛与发散行为，深刻理解矩阵属性对迭代法成败的关键影响。[@problem_id:2396644]", "problem": "给定形式为 $A x = b$ 的方形线性系统，其中 $A \\in \\mathbb{R}^{n \\times n}$ 是实对称矩阵，$b \\in \\mathbb{R}^{n}$ 是向量。考虑由矩阵分裂 $A = D + L + U$ 定义的 Gauss–Seidel 不动点迭代，其中 $D$ 是 $A$ 的对角部分，$L$ 是 $A$ 的严格下三角部分，$U$ 是 $A$ 的严格上三角部分。其迭代式为\n$$\nx^{(k+1)} = -(D+L)^{-1} U \\, x^{(k)} + (D+L)^{-1} b,\n$$\n从初始迭代向量 $x^{(0)} = 0$（零向量）开始。对于下述每种情况，生成迭代向量和残差 $r^{(k)} = b - A x^{(k)}$。\n\n如下定义一个定量的发散判据。固定一个迭代次数上限 $K$ 和一个增长因子 $\\alpha > 1$。在每次迭代 $k = 0, 1, \\dots, K$ 时，计算欧几里得范数 $\\|r^{(k)}\\|_2$。如果存在任何 $k \\in \\{0,1,\\dots,K\\}$ 使得 $\\|r^{(k)}\\|_2 > \\alpha \\, \\|r^{(0)}\\|_2$ 成立，则声明该迭代发散；否则，声明其不发散。在下述所有情况中，使用 $K = 25$ 和 $\\alpha = 10^{6}$。\n\n测试集：\n- 情况 1（对称正定参考用例）：$A_1 = \\begin{bmatrix} 4 & 1 \\\\ 1 & 3 \\end{bmatrix}$，$b_1 = \\begin{bmatrix} 1 \\\\ 2 \\end{bmatrix}$，$n = 2$。\n- 情况 2（对称但非正定，经设计以使其发散）：$A_2 = \\begin{bmatrix} 2 & 3 \\\\ 3 & 2 \\end{bmatrix}$，$b_2 = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}$，$n = 2$。\n- 情况 3（对称半正定，奇异）：$A_3 = \\begin{bmatrix} 1 & -1 \\\\ -1 & 1 \\end{bmatrix}$，$b_3 = \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}$，$n = 2$。\n\n每种情况的所需输出：一个布尔值，用以指示迭代是否根据上述判据发散。\n\n最终输出格式：您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表（例如，“[result1,result2,result3]”）。对于上述测试集，输出行必须为“[r1,r2,r3]”的形式，其中每个 $r_i$ 是按顺序排列的第 $i$ 种情况的布尔结果。", "solution": "所述问题是有效的。它在科学上基于数值线性代数原理，所有必要参数均已定义，问题是适定的，并且使用客观、无歧义的语言进行表述。我们将着手进行求解。\n\n该问题要求对三种不同形式为 $A x = b$ 的线性系统实现并分析 Gauss–Seidel 迭代。对于每个系统，我们必须根据指定的定量判据来确定迭代是否发散。此分析的核心在于迭代公式和矩阵 $A$ 的性质。\n\nGauss–Seidel 方法是求解线性系统的一种不动点迭代。给定矩阵 $A$ 分裂为其对角部分（$D$）、严格下三角部分（$L$）和严格上三角部分（$U$），使得 $A = D + L + U$，则迭代定义为：\n$$\nx^{(k+1)} = T_{GS} x^{(k)} + c_{GS}\n$$\n其中迭代矩阵为 $T_{GS} = -(D+L)^{-1}U$，常向量为 $c_{GS} = (D+L)^{-1}b$。该过程从一个初始猜测值开始，此处指定为 $x^{(0)} = 0$。\n\n出于计算目的，将迭代写成分量形式更为高效。对于向量 $x^{(k+1)}$ 的第 $i$ 个分量，其更新规则为：\n$$\nx_i^{(k+1)} = \\frac{1}{a_{ii}} \\left( b_i - \\sum_{j=1}^{i-1} a_{ij} x_j^{(k+1)} - \\sum_{j=i+1}^{n} a_{ij} x_j^{(k)} \\right)\n$$\n该公式表明，$x_i^{(k+1)}$ 的计算利用了对于 $j < i$ 已最新更新的分量 $x_j^{(k+1)}$。只要所有对角元素 $a_{ii}$ 均非零，此过程就是良定义的，这对于所给出的所有情况都成立。\n\n问题基于残差向量 $r^{(k)} = b - A x^{(k)}$ 的欧几里得范数的行为来定义发散。初始残差为 $r^{(0)} = b - A x^{(0)} = b$。如果在迭代次数上限 $K=25$ 内，对于任何迭代次数 $k$，残差范数过度增长：\n$$\n\\|r^{(k)}\\|_2 > \\alpha \\|r^{(0)}\\|_2\n$$\n其中增长因子为 $\\alpha = 10^6$，则声明该迭代发散。如果对于任何 $k \\in \\{0, 1, \\dots, K\\}$，此条件均未满足，则认为该过程未发散。请注意，对于 $k=0$，条件 $\\|r^{(0)}\\|_2 > \\alpha \\|r^{(0)}\\|_2$ 等价于 $1 > \\alpha$，而对于 $\\alpha = 10^6$ 这是不成立的。因此，我们只需检查 $k \\in \\{1, 2, \\dots, K\\}$。\n\n我们现在分析每种情况：\n\n情况 1：$A_1 = \\begin{bmatrix} 4 & 1 \\\\ 1 & 3 \\end{bmatrix}$，$b_1 = \\begin{bmatrix} 1 \\\\ 2 \\end{bmatrix}$。\n矩阵 $A_1$ 是对称的。其特征值是 $(\\lambda-4)(\\lambda-3) - 1 = 0$ 的根，即 $\\lambda = \\frac{7 \\pm \\sqrt{5}}{2}$。两个特征值均为正，因此 $A_1$ 是对称正定 (SPD) 矩阵。数值线性代数的一个基本定理指出，对于任何 SPD 矩阵，Gauss–Seidel 方法都保证收敛。因此，残差范数 $\\|r^{(k)}\\|_2$ 预期将递减至零。发散判据将不会被满足。\n\n情况 2：$A_2 = \\begin{bmatrix} 2 & 3 \\\\ 3 & 2 \\end{bmatrix}$，$b_2 = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}$。\n矩阵 $A_2$ 是对称的。其特征值是 $(\\lambda-2)^2 - 9 = 0$ 的根，即 $\\lambda = 5$ 和 $\\lambda = -1$。由于一个特征值为负，该矩阵是不定的，而非正定。不保证收敛。我们必须检查迭代矩阵 $T_{GS} = -(D_2+L_2)^{-1}U_2$ 的谱半径。\n此处，$D_2+L_2 = \\begin{bmatrix} 2 & 0 \\\\ 3 & 2 \\end{bmatrix}$ 且 $U_2 = \\begin{bmatrix} 0 & 3 \\\\ 0 & 0 \\end{bmatrix}$。\n其逆矩阵为 $(D_2+L_2)^{-1} = \\begin{bmatrix} 1/2 & 0 \\\\ -3/4 & 1/2 \\end{bmatrix}$。\n所以，$T_{GS} = -\\begin{bmatrix} 1/2 & 0 \\\\ -3/4 & 1/2 \\end{bmatrix}\\begin{bmatrix} 0 & 3 \\\\ 0 & 0 \\end{bmatrix} = \\begin{bmatrix} 0 & -3/2 \\\\ 0 & 9/4 \\end{bmatrix}$。\n这个上三角矩阵的特征值是其对角线元素，$0$ 和 $9/4$。谱半径为 $\\rho(T_{GS}) = \\max(|0|, |9/4|) = 9/4 = 2.25$。由于 $\\rho(T_{GS}) > 1$，对于几乎所有的初始向量，迭代都保证发散。残差范数预期将会增长，并且发散判据将会被满足。\n\n情况 3：$A_3 = \\begin{bmatrix} 1 & -1 \\\\ -1 & 1 \\end{bmatrix}$，$b_3 = \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}$。\n矩阵 $A_3$ 是对称的。其特征值是 $(\\lambda-1)^2 - 1 = 0$ 的根，即 $\\lambda=0$ 和 $\\lambda=2$。由于一个特征值为零，该矩阵是对称半正定且奇异的。向量 $b_3$ 位于 $A_3$ 的列空间中，因为 $A_3 \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = b_3$，所以系统 $A_3x = b_3$ 是相容的，并有无穷多解。\n我们分析迭代矩阵 $T_{GS} = -(D_3+L_3)^{-1}U_3$。\n此处，$D_3+L_3 = \\begin{bmatrix} 1 & 0 \\\\ -1 & 1 \\end{bmatrix}$ 且 $U_3 = \\begin{bmatrix} 0 & -1 \\\\ 0 & 0 \\end{bmatrix}$。\n其逆矩阵为 $(D_3+L_3)^{-1} = \\begin{bmatrix} 1 & 0 \\\\ 1 & 1 \\end{bmatrix}$。\n所以，$T_{GS} = -\\begin{bmatrix} 1 & 0 \\\\ 1 & 1 \\end{bmatrix}\\begin{bmatrix} 0 & -1 \\\\ 0 & 0 \\end{bmatrix} = \\begin{bmatrix} 0 & 1 \\\\ 0 & 1 \\end{bmatrix}$。\n特征值为 $0$ 和 $1$。谱半径为 $\\rho(T_{GS}) = 1$。当谱半径恰好为 $1$ 时，收敛行为是微妙的。我们必须执行迭代：\n$x^{(0)} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}$。\n更新方程为 $x_1^{(k+1)} = 1 - (-1)x_2^{(k)} = 1 + x_2^{(k)}$ 和 $x_2^{(k+1)} = -1 - (-1)x_1^{(k+1)} = -1 + x_1^{(k+1)}$。\n对于 $k=0$：\n$x_1^{(1)} = 1 + x_2^{(0)} = 1 + 0 = 1$。\n$x_2^{(1)} = -1 + x_1^{(1)} = -1 + 1 = 0$。\n所以，$x^{(1)} = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$。\n残差为 $r^{(1)} = b_3 - A_3 x^{(1)} = \\begin{pmatrix} 1 \\\\ -1 \\end{pmatrix} - \\begin{bmatrix} 1 & -1 \\\\ -1 & 1 \\end{bmatrix}\\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 1 \\\\ -1 \\end{pmatrix} - \\begin{pmatrix} 1 \\\\ -1 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}$。\n该方法在单步迭代后收敛到一个精确解。残差范数降至 $0$。所有后续的残差也都将为零。发散判据将不会被满足。\n\n实现将遵循此分析，执行 $K=25$ 步迭代，并在每一步检查残差范数是否超过发散阈值。\n```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef check_gauss_seidel_divergence(A: np.ndarray, b: np.ndarray, K: int, alpha: float) -> bool:\n    \"\"\"\n    Performs Gauss-Seidel iteration and checks for divergence based on the problem's criterion.\n\n    Args:\n        A: The square matrix of the linear system.\n        b: The right-hand side vector.\n        K: The iteration cap.\n        alpha: The divergence growth factor.\n\n    Returns:\n        A boolean indicating whether the iteration diverges (True) or not (False).\n    \"\"\"\n    n = A.shape[0]\n    x = np.zeros(n)  # Initial iterate x^(0)\n\n    # Calculate initial residual r^(0) and its norm.\n    # r^(0) = b - A*x^(0) = b since x^(0) is the zero vector.\n    r0 = b\n    norm_r0 = np.linalg.norm(r0)\n\n    # Edge case: if b is the zero vector, then x=0 is the exact solution.\n    # The initial residual norm is 0. The criterion ||r^(k)||_2 > alpha*0 becomes ||r^(k)||_2 > 0.\n    # Since all residuals will be zero, this condition is never met.\n    if norm_r0 == 0:\n        return False\n\n    divergence_threshold = alpha * norm_r0\n\n    # The problem specifies checking k in {0, 1, ..., K}.\n    # The check for k=0: ||r^(0)||_2 > alpha * ||r^(0)||_2, is never true for alpha > 1.\n    # Thus, we only need to check for k = 1, ..., K by iterating K times.\n    \n    # Iterate K times to generate x^(1) through x^(K).\n    for _ in range(K):\n        x_new = np.copy(x)\n        for i in range(n):\n            # Sum for terms with already updated x_new components for j < i\n            sum1 = np.dot(A[i, :i], x_new[:i])\n            # Sum for terms with old x components for j > i\n            sum2 = np.dot(A[i, i + 1:], x[i + 1:])\n            \n            # The component-wise update. The problem cases ensure A[i, i] != 0.\n            x_new[i] = (b[i] - sum1 - sum2) / A[i, i]\n        \n        x = x_new  # Update x for the next iteration\n\n        # Calculate the residual r^(k) and its norm for the current iterate x.\n        r_k = b - A @ x\n        norm_r_k = np.linalg.norm(r_k)\n        \n        # Check against the divergence criterion.\n        if norm_r_k > divergence_threshold:\n            return True\n\n    # If the loop completes without meeting the criterion, it has not diverged.\n    return False\n\ndef solve():\n    \"\"\"\n    Main function to define test cases and run the divergence check.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1 (symmetric positive-definite)\n        (np.array([[4., 1.], [1., 3.]]), np.array([1., 2.])),\n        \n        # Case 2 (symmetric, not positive-definite)\n        (np.array([[2., 3.], [3., 2.]]), np.array([1., 1.])),\n        \n        # Case 3 (symmetric positive semidefinite, singular)\n        (np.array([[1., -1.], [-1., 1.]]), np.array([1., -1.]))\n    ]\n    \n    K = 25\n    alpha = 1e6\n\n    results = []\n    for A, b in test_cases:\n        diverged = check_gauss_seidel_divergence(A, b, K, alpha)\n        results.append(diverged)\n\n    # Final print statement in the exact required format.\n    # str(True) -> 'True', str(False) -> 'False'\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "answer": "```\n[False,True,False]\n```", "id": "2396644"}, {"introduction": "掌握了基本操作并观察了其行为后，让我们来深入探索该方法收敛的理论边界。严格对角占主导是保证高斯-赛德尔方法收敛的一个充分条件，但并非必要条件。本练习旨在挑战你对收敛理论的理解，要求你分析在不满足严格对角占主导性的情况下，高斯-赛德尔法依然能够收敛的参数范围，这需要运用到矩阵正定性等更深层次的数学原理。[@problem_id:2406953]", "problem": "考虑单参数实对称矩阵族\n$$\nA(b) \\;=\\; \\begin{pmatrix}\n1 & b & 0 \\\\\nb & 1 & b \\\\\n0 & b & 1\n\\end{pmatrix},\n$$\n其中 $b$ 是一个正实数参数。如果对于每一行 $i$，不等式 $|a_{ii}| \\;>\\; \\sum_{j \\neq i} |a_{ij}|$ 都成立，则称该矩阵是严格按行对角占优的。Gauss–Seidel 迭代法 (GS) 是一种经典的求解线性方程组 $A \\boldsymbol{x} = \\boldsymbol{b}$ 的不动点方法，它通过将矩阵 $A$ 分解为严格下三角、对角和严格上三角部分得到。\n\n请确定所有满足以下条件的 $b>0$ 的完整集合：$A(b)$ 不是严格按行对角占优的，但 Gauss–Seidel 迭代法对任意初始猜测和任意右端向量都收敛。然后，计算此允许的 $b$ 区间的最小和最大端点的算术平均值。将您的最终答案四舍五入至四位有效数字。您的最终答案必须是这个无单位的实数。", "solution": "该问题要求找到所有满足以下条件的正实数 $b$ 的集合：矩阵 $A(b)$ 不是严格对角占优的，但 Gauss-Seidel 迭代法收敛。然后，我们必须计算该集合端点的算术平均值并对结果进行四舍五入。\n\n首先，我们分析给定矩阵的严格对角占优 (SDD) 条件：\n$$\nA(b) = \\begin{pmatrix} 1 & b & 0 \\\\ b & 1 & b \\\\ 0 & b & 1 \\end{pmatrix}\n$$\n其中 $b > 0$。一个矩阵是严格对角占优的，如果对于每一行 $i$，对角元素的绝对值大于该行非对角元素绝对值之和，即 $|a_{ii}| > \\sum_{j \\neq i} |a_{ij}|$。\n\n对于第 1 行：$|1| > |b| + |0|$。由于 $b > 0$，这简化为 $1 > b$。\n对于第 2 行：$|1| > |b| + |b|$。这简化为 $1 > 2b$，即 $b < \\frac{1}{2}$。\n对于第 3 行：$|1| > |0| + |b|$。这简化为 $1 > b$。\n\n要使 $A(b)$ 成为严格对角占优矩阵，所有三个条件都必须满足。最严格的条件是 $b < \\frac{1}{2}$。因此，当 $b \\in (0, \\frac{1}{2})$ 时，$A(b)$ 是严格对角占优的。问题要求 $A(b)$ **不是**严格对角占优的条件。这发生在至少一个不等式不满足时。这在 $b \\geq \\frac{1}{2}$ 时成立。\n\n接下来，我们分析 Gauss-Seidel 方法的收敛性。该迭代法对任意初始猜测和任意右端向量都收敛的充要条件是迭代矩阵 $G = -(D+L)^{-1}U$ 的谱半径小于 1，即 $\\rho(G) < 1$。这里，$A = D+L+U$ 是将 $A$ 分解为其对角、严格下三角和严格上三角部分。\n\n对于给定的矩阵，一个更直接的方法是使用一个关于收敛性的重要定理。矩阵 $A(b)$ 是实对称矩阵。其对角线元素均为 1，是正数。对于这样的矩阵（对角元为正的对称矩阵），Ostrowski-Reich 定理指出，Gauss-Seidel 方法收敛的充要条件是该矩阵是正定的。\n\n一个对称矩阵是正定的，当且仅当其所有特征值都为正。我们通过求解特征方程 $\\det(A(b) - \\lambda I) = 0$ 来求 $A(b)$ 的特征值。\n$$\n\\det\\begin{pmatrix} 1-\\lambda & b & 0 \\\\ b & 1-\\lambda & b \\\\ 0 & b & 1-\\lambda \\end{pmatrix} = 0\n$$\n沿第一行展开行列式：\n$$\n(1-\\lambda) \\begin{vmatrix} 1-\\lambda & b \\\\ b & 1-\\lambda \\end{vmatrix} - b \\begin{vmatrix} b & b \\\\ 0 & 1-\\lambda \\end{vmatrix} = 0\n$$\n$$\n(1-\\lambda) \\left( (1-\\lambda)^{2} - b^{2} \\right) - b \\left( b(1-\\lambda) \\right) = 0\n$$\n$$\n(1-\\lambda) \\left( (1-\\lambda)^{2} - b^{2} - b^{2} \\right) = 0\n$$\n$$\n(1-\\lambda) \\left( (1-\\lambda)^{2} - 2b^{2} \\right) = 0\n$$\n该方程给出特征值。一个特征值是 $\\lambda_1 = 1$。另外两个由 $(1-\\lambda)^2 = 2b^2$ 解得，即 $1-\\lambda = \\pm \\sqrt{2b^2} = \\pm b\\sqrt{2}$。因此，另外两个特征值是 $\\lambda_2 = 1 - b\\sqrt{2}$ 和 $\\lambda_3 = 1 + b\\sqrt{2}$。\n\n要使 $A(b)$ 是正定的，所有特征值必须为正。\n1. $\\lambda_1 = 1$ 是正数。\n2. 因为 $b > 0$，所以 $\\lambda_3 = 1 + b\\sqrt{2}$ 恒为正数。\n3. 我们要求 $\\lambda_2 = 1 - b\\sqrt{2} > 0$。这意味着 $1 > b\\sqrt{2}$，即 $b < \\frac{1}{\\sqrt{2}}$。\n\n因此，Gauss-Seidel 迭代法收敛的充要条件是 $0 < b < \\frac{1}{\\sqrt{2}}$。\n\n我们必须找到满足以下两个条件的 $b > 0$ 的集合：\n1. $A(b)$ 不是严格对角占优的：$b \\geq \\frac{1}{2}$。\n2. Gauss-Seidel 迭代法收敛：$0 < b < \\frac{1}{\\sqrt{2}}$。\n\n这两个集合的交集是区间 $b \\in \\left[ \\frac{1}{2}, \\frac{1}{\\sqrt{2}} \\right)$。该区间的最小端点是 $b_{\\text{min}} = \\frac{1}{2}$，最大端点是 $b_{\\text{max}} = \\frac{1}{\\sqrt{2}}$。\n\n问题要求计算这些端点的算术平均值：\n$$\n\\text{Mean} = \\frac{b_{\\text{min}} + b_{\\text{max}}}{2} = \\frac{\\frac{1}{2} + \\frac{1}{\\sqrt{2}}}{2} = \\frac{1}{2} \\left( \\frac{1}{2} + \\frac{\\sqrt{2}}{2} \\right) = \\frac{1+\\sqrt{2}}{4}\n$$\n最后，我们计算其数值并四舍五入到四位有效数字。\n使用近似值 $\\sqrt{2} \\approx 1.41421356$，我们得到：\n$$\n\\text{Mean} = \\frac{1 + 1.41421356}{4} = \\frac{2.41421356}{4} = 0.60355339\\dots\n$$\n四舍五入到四位有效数字，我们得到 $0.6036$。", "answer": "$$\n\\boxed{0.6036}\n$$", "id": "2406953"}]}