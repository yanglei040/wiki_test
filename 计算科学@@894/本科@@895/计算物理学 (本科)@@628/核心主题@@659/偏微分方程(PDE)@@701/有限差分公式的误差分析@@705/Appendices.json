{"hands_on_practices": [{"introduction": "理论上，将步长 $h$ 取得越小，截断误差就越小，近似就越精确。然而在实践中，计算机浮点数的有限精度带来了舍入误差，它会随着 $h$ 的减小而增大。本练习将带你直面这个核心矛盾，通过一个简化的误差模型，推导并计算出平衡这两种误差的最优步长 $h_{\\text{opt}}$，让你亲身体会不同计算精度对数值微分极限的影响 [@problem_id:2389525]。", "problem": "考虑使用中心差分公式\n$$\nD_h f(x_0) \\equiv \\frac{f(x_0+h)-f(x_0-h)}{2h}.\n$$\n来近似一个足够光滑的标量函数 $f(x)$ 在点 $x_0$ 处的一阶导数。\n假设 $D_h f(x_0)$ 的绝对误差具有以下主阶误差模型：\n$$\nE(h) = K_t h^2 + \\frac{K_r u}{h},\n$$\n其中 $K_t = \\frac{\\lvert f^{(3)}(x_0)\\rvert}{6}$，$K_r = \\lvert f(x_0)\\rvert$，$u$ 是用于计算 $f$ 的浮点运算的单位舍入。使用以下单位舍入值：对于双精度 (IEEE $754$ binary64)，$u_{\\mathrm{double}} = 2^{-53}$；对于四倍精度 (IEEE $754$ binary128)，$u_{\\mathrm{quad}} = 2^{-113}$。角度必须以弧度为单位进行解释。\n\n对于下面列出的每个测试用例，请分别在双精度和四倍精度下，计算在所述模型下使 $E(h)$ 最小化的步长 $h_{\\mathrm{opt}}$。你的程序必须以指定格式输出这些值。\n\n测试套件（每个用例都指定了 $f$、$x_0$ 以及适用的角度单位）：\n- 用例 1：$f(x) = \\sin(x)$，$x_0 = 1$（弧度）。\n- 用例 2：$f(x) = \\sin(x)$，$x_0 = 10^{-12}$（弧度）。\n- 用例 3：$f(x) = \\cosh(x)$，$x_0 = 3$。\n\n要求的最终输出格式：\n- 生成单行输出，包含一个用方括号括起来的逗号分隔列表，顺序如下\n$$\n[h_{\\mathrm{double},1},h_{\\mathrm{quad},1},h_{\\mathrm{double},2},h_{\\mathrm{quad},2},h_{\\mathrm{double},3},h_{\\mathrm{quad},3}],\n$$\n其中 $h_{\\mathrm{double},k}$ 和 $h_{\\mathrm{quad},k}$ 分别表示用例 $k$ 在双精度和四倍精度下的最小化步长。\n- 将每个数字用科学记数法表示，并保留恰好 $10$ 位有效数字（例如，$1.234567890\\times 10^{-5}$ 必须打印成类似 $1.2345678900e-05$ 的形式）。", "solution": "提交以供分析的问题陈述经过了严格的验证。\n\n**步骤 1：提取已知条件**\n- **近似公式**：一阶导数的中心差分，$D_h f(x_0) \\equiv \\frac{f(x_0+h)-f(x_0-h)}{2h}$。\n- **误差模型**：绝对误差 $E(h) = K_t h^2 + \\frac{K_r u}{h}$。\n- **误差系数**：$K_t = \\frac{\\lvert f^{(3)}(x_0)\\rvert}{6}$ 和 $K_r = \\lvert f(x_0)\\rvert$。\n- **单位舍入值**：\n    - 双精度：$u_{\\mathrm{double}} = 2^{-53}$。\n    - 四倍精度：$u_{\\mathrm{quad}} = 2^{-113}$。\n- **角度单位**：角度以弧度为单位。\n- **任务**：对于每个测试用例，计算在双精度和四倍精度下使 $E(h)$ 最小化的步长 $h_{\\mathrm{opt}}$。\n- **测试用例**：\n    1. $f(x) = \\sin(x)$ 于 $x_0 = 1$ 处。\n    2. $f(x) = \\sin(x)$ 于 $x_0 = 10^{-12}$ 处。\n    3. $f(x) = \\cosh(x)$ 于 $x_0 = 3$ 处。\n\n**步骤 2：使用提取的已知条件进行验证**\n- **科学依据**：该问题在根本上是合理的。它涉及数值分析中的一个经典课题：数值微分中截断误差与舍入误差之间的权衡。所提供的误差模型 $E(h)$ 是一个标准的一阶近似，其中 $h^2$ 项代表中心差分格式的截断误差，$u/h$ 项代表舍入误差。中心差分公式的泰勒级数展开证实了截断误差的阶为 $O(h^2)$，并且该舍入误差模型是一个被广泛接受的简化模型。\n- **适定性**：存在唯一且有意义的解。对于 $h>0$，函数 $E(h)$ 是两个正项之和，其中一项随 $h$ 递增，另一项则递减。这种结构保证了在 $h \\in (0, \\infty)$ 区间内存在唯一的最小值，该最小值可以通过微积分求得。\n- **客观性**：该问题使用精确的数学语言陈述，不含任何主观性或歧义。\n\n**步骤 3：结论与行动**\n该问题具有科学依据、适定、客观且自洽。它是计算物理和数值分析领域中的一个有效问题。因此，我将继续进行求解。\n\n目标是找到使总绝对误差函数 $E(h)$ 最小化的步长，我们将其记为 $h_{\\mathrm{opt}}$。误差函数由下式给出：\n$$\nE(h) = K_t h^2 + \\frac{K_r u}{h}\n$$\n为了找到最小值，我们必须计算 $E(h)$ 关于 $h$ 的导数并令其为零。这样可以得到函数的临界点。\n$$\n\\frac{dE}{dh} = \\frac{d}{dh} \\left( K_t h^2 + K_r u h^{-1} \\right) = 2 K_t h - K_r u h^{-2}\n$$\n将导数置为零，可得到最优步长 $h_{\\mathrm{opt}}$：\n$$\n2 K_t h_{\\mathrm{opt}} - \\frac{K_r u}{h_{\\mathrm{opt}}^2} = 0\n$$\n在 $h_{\\mathrm{opt}} \\neq 0$ 的条件下，我们可以重新整理此方程：\n$$\n2 K_t h_{\\mathrm{opt}}^3 = K_r u\n$$\n$$\nh_{\\mathrm{opt}}^3 = \\frac{K_r u}{2 K_t}\n$$\n求解 $h_{\\mathrm{opt}}$ 可得：\n$$\nh_{\\mathrm{opt}} = \\left( \\frac{K_r u}{2 K_t} \\right)^{1/3}\n$$\n为了确认这是一个最小值，我们考察其二阶导数：\n$$\n\\frac{d^2E}{dh^2} = 2 K_t + 2 K_r u h^{-3}\n$$\n由于 $K_t = \\frac{\\lvert f^{(3)}(x_0)\\rvert}{6} \\ge 0$，$K_r = \\lvert f(x_0)\\rvert \\ge 0$，$u > 0$ 且 $h > 0$，因此对于所有有效的测试用例（其中 $K_t$ 和 $K_r$ 不会同时为零），都有 $\\frac{d^2E}{dh^2} > 0$。所以，该临界点对应一个局部最小值。\n\n现在，我们代入 $K_t$ 和 $K_r$ 的表达式：\n$$\nh_{\\mathrm{opt}} = \\left( \\frac{\\lvert f(x_0)\\rvert u}{2 \\left( \\frac{\\lvert f^{(3)}(x_0)\\rvert}{6} \\right)} \\right)^{1/3} = \\left( \\frac{3 \\lvert f(x_0)\\rvert u}{\\lvert f^{(3)}(x_0)\\rvert} \\right)^{1/3}\n$$\n只要 $f^{(3)}(x_0) \\neq 0$，该公式就有效。我们将把此公式应用于每个测试用例。\n\n**用例 1：$f(x) = \\sin(x)$ 于 $x_0 = 1$ 处**\n函数及其三阶导数分别为 $f(x) = \\sin(x)$ 和 $f^{(3)}(x) = -\\cos(x)$。在 $x_0=1$ 处：\n- $\\lvert f(x_0) \\rvert = \\lvert\\sin(1)\\rvert$\n- $\\lvert f^{(3)}(x_0) \\rvert = \\lvert-\\cos(1)\\rvert = \\lvert\\cos(1)\\rvert$\n由于 1 弧度位于第一象限，$\\sin(1)$ 和 $\\cos(1)$ 均为正值。\n$$\nh_{\\mathrm{opt}} = \\left( \\frac{3 \\sin(1) u}{\\cos(1)} \\right)^{1/3} = \\left( 3 u \\tan(1) \\right)^{1/3}\n$$\n针对 $u = u_{\\mathrm{double}} = 2^{-53}$ 和 $u = u_{\\mathrm{quad}} = 2^{-113}$ 计算相应的值。\n\n**用例 2：$f(x) = \\sin(x)$ 于 $x_0 = 10^{-12}$ 处**\n导数与用例 1 中相同。在 $x_0=10^{-12}$ 处：\n- $\\lvert f(x_0) \\rvert = \\lvert\\sin(10^{-12})\\rvert \\approx 10^{-12} > 0$\n- $\\lvert f^{(3)}(x_0) \\rvert = \\lvert-\\cos(10^{-12})\\rvert = \\cos(10^{-12}) \\approx 1$\n条件 $f^{(3)}(x_0) \\neq 0$ 得到满足。\n$$\nh_{\\mathrm{opt}} = \\left( \\frac{3 \\sin(10^{-12}) u}{\\cos(10^{-12})} \\right)^{1/3} = \\left( 3 u \\tan(10^{-12}) \\right)^{1/3}\n$$\n针对 $u = u_{\\mathrm{double}}$ 和 $u = u_{\\mathrm{quad}}$ 计算相应的值。\n\n**用例 3：$f(x) = \\cosh(x)$ 于 $x_0 = 3$ 处**\n函数及其三阶导数分别为 $f(x) = \\cosh(x)$ 和 $f^{(3)}(x) = \\sinh(x)$。在 $x_0=3$ 处：\n- $\\lvert f(x_0) \\rvert = \\lvert\\cosh(3)\\rvert = \\cosh(3)$\n- $\\lvert f^{(3)}(x_0) \\rvert = \\lvert\\sinh(3)\\rvert = \\sinh(3)$\n$\\cosh(3)$ 和 $\\sinh(3)$ 均为正值，且 $\\sinh(3) \\neq 0$。\n$$\nh_{\\mathrm{opt}} = \\left( \\frac{3 \\cosh(3) u}{\\sinh(3)} \\right)^{1/3} = \\left( 3 u \\coth(3) \\right)^{1/3}\n$$\n针对 $u = u_{\\mathrm{double}}$ 和 $u = u_{\\mathrm{quad}}$ 计算相应的值。\n\n最后一步是编程计算这六个值。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the optimal step size h_opt that minimizes the error in the\n    central difference approximation of the first derivative, based on a\n    leading-order error model.\n    \"\"\"\n\n    # Define unit roundoff values for double and quadruple precision\n    u_double = 2**-53\n    u_quad = 2**-113\n\n    # The general formula for the optimal step size is derived as:\n    # h_opt = (3 * |f(x0)| * u / |f'''(x0)|)^(1/3)\n\n    # Test suite: each tuple contains (function_name, function, third_derivative, x0)\n    test_cases = [\n        (\"sin(x) at x=1\", np.sin, lambda x: -np.cos(x), 1.0),\n        (\"sin(x) at x=1e-12\", np.sin, lambda x: -np.cos(x), 1e-12),\n        (\"cosh(x) at x=3\", np.cosh, np.sinh, 3.0),\n    ]\n\n    results = []\n    precisions = [u_double, u_quad]\n\n    for name, f, f3, x0 in test_cases:\n        # Evaluate the absolute values of the function and its third derivative at x0\n        # The problem statement guarantees f'''(x0) is not zero for the given cases.\n        abs_f_x0 = np.abs(f(x0))\n        abs_f3_x0 = np.abs(f3(x0))\n        \n        # Check for division by zero, although not expected for these cases.\n        if abs_f3_x0 == 0:\n            # If f'''(x0) is zero, the error model is inappropriate.\n            # Handle this as an invalid case within the computation.\n            # For this problem, we rely on the problem setter's guarantee.\n            # For a more robust solver, this would raise an error.\n            h_opt_double = np.nan\n            h_opt_quad = np.nan\n        else:\n            # Ratio of function value to third derivative value\n            ratio = abs_f_x0 / abs_f3_x0\n\n            # Calculate h_opt for double precision\n            arg_double = 3 * ratio * u_double\n            h_opt_double = np.cbrt(arg_double)\n\n            # Calculate h_opt for quadruple precision\n            arg_quad = 3 * ratio * u_quad\n            h_opt_quad = np.cbrt(arg_quad)\n        \n        results.append(h_opt_double)\n        results.append(h_opt_quad)\n\n    # Format the output as a comma-separated list in brackets,\n    # with each number in scientific notation with 10 significant digits.\n    # The format specifier \"{:.9e}\" provides 1 digit before the decimal\n    # and 9 digits after, for a total of 10 significant digits.\n    formatted_results = [f\"{val:.9e}\" for val in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2389525"}, {"introduction": "我们知道中心差分公式的截断误差是 $\\mathcal{O}(h^2)$ 阶的，但这并未揭示全部真相。误差的实际大小还与一个依赖于函数高阶导数的系数密切相关。本练习通过对比计算一个低频函数 $\\sin(x)$ 和一个高频函数 $\\sin(100x)$ 的导数，让你直观地看到函数本身的“陡峭”程度如何极大地影响数值误差，并理解为什么对快速变化的函数进行数值计算更具挑战性 [@problem_id:2389561]。", "problem": "您需要分析并比较有限差分导数近似在应用于两个不同频率的正弦函数时的数值误差。考虑函数 $f_1(x) = \\sin(x)$ 和 $f_2(x) = \\sin(100x)$。角度必须以弧度为单位。对于一个点 $x$ 和一个步长 $h$，使用中心有限差分公式来近似导数 $f'(x)$：\n$$\nD_h[f](x) = \\frac{f(x+h) - f(x-h)}{2h}.\n$$\n对于下面列出的每个测试用例，通过将数值近似与精确导数进行比较，计算每个函数的绝对误差。对于 $f_k(x) = \\sin(kx)$（其中 $k \\in \\{1, 100\\}$），其精确导数为 $f_k'(x) = k \\cos(kx)$。将函数 $f_k$ 在 $(x,h)$ 处的绝对误差定义为\n$$\nE_k(x,h) = \\left| D_h[f_k](x) - f_k'(x) \\right|.\n$$\n对于每个测试用例，计算并报告比率\n$$\nR(x,h) = \\frac{E_{100}(x,h)}{E_{1}(x,h)}.\n$$\n使用以下 $(x,h)$ 对的测试套件，其中所有 $x$ 的单位都是弧度，所有 $h$ 都是无量纲的：\n- 测试 $1$：$x = 0$，$h = 10^{-1}$。\n- 测试 $2$：$x = 0$，$h = 10^{-6}$。\n- 测试 $3$：$x = 1.0$，$h = 10^{-3}$。\n- 测试 $4$：$x = \\frac{\\pi}{3}$，$h = 10^{-5}$。\n- 测试 $5$：$x = 2.0$，$h = 10^{-4}$。\n- 测试 $6$：$x = \\frac{\\pi}{8}$，$h = 10^{-8}$。\n\n您的程序必须按给定顺序为每个测试用例计算 $R(x,h)$，并生成单行输出，其中包含用方括号括起来的、以逗号分隔的十进制数列表，每个数四舍五入到八位有效数字。例如，输出格式必须是\n$$\n[\\text{result}_1,\\text{result}_2,\\text{result}_3,\\text{result}_4,\\text{result}_5,\\text{result}_6].\n$$\n每个 $\\text{result}_i$ 都必须是一个实数（浮点数）。不应打印任何其他文本。", "solution": "所述问题具有科学依据、提法明确、客观，并包含获得唯一解所需的所有信息。这是一个关于有限差分近似误差分析的计算物理学标准问题。因此，该问题是有效的，我们着手进行求解。\n\n该问题要求使用中心有限差分公式来比较近似两个函数 $f_1(x) = \\sin(x)$ 和 $f_{100}(x) = \\sin(100x)$ 的导数时产生的数值误差：\n$$\nD_h[f](x) = \\frac{f(x+h) - f(x-h)}{2h}\n$$\n分析的核心在于理解该近似的截断误差。我们通过考虑 $f(x+h)$ 和 $f(x-h)$ 在点 $x$ 附近的 Taylor 级数展开来推导这个误差：\n$$\nf(x+h) = f(x) + hf'(x) + \\frac{h^2}{2!}f''(x) + \\frac{h^3}{3!}f'''(x) + \\frac{h^4}{4!}f^{(4)}(x) + \\frac{h^5}{5!}f^{(5)}(x) + O(h^6)\n$$\n$$\nf(x-h) = f(x) - hf'(x) + \\frac{h^2}{2!}f''(x) - \\frac{h^3}{3!}f'''(x) + \\frac{h^4}{4!}f^{(4)}(x) - \\frac{h^5}{5!}f^{(5)}(x) + O(h^6)\n$$\n用第一个展开式减去第二个展开式，得到：\n$$\nf(x+h) - f(x-h) = 2hf'(x) + \\frac{2h^3}{3!}f'''(x) + \\frac{2h^5}{5!}f^{(5)}(x) + O(h^7)\n$$\n两边除以 $2h$，得到数值导数的表达式：\n$$\nD_h[f](x) = f'(x) + \\frac{h^2}{6}f'''(x) + \\frac{h^4}{120}f^{(5)}(x) + O(h^6)\n$$\n因此，截断误差 $E(x,h) = |D_h[f](x) - f'(x)|$ 为：\n$$\nE(x,h) = \\left| \\frac{h^2}{6}f'''(x) + \\frac{h^4}{120}f^{(5)}(x) + \\dots \\right|\n$$\n对于足够小的步长 $h$，误差由主导项决定，我们可以将其近似为：\n$$\nE(x,h) \\approx \\left| \\frac{h^2}{6}f'''(x) \\right|\n$$\n这表明中心差分格式的截断误差为 $O(h^2)$ 阶。\n\n让我们将这个一般性结果应用于函数 $f_k(x) = \\sin(kx)$，其中 $k \\in \\{1, 100\\}$。\n其各阶导数为：\n- $f_k'(x) = k \\cos(kx)$\n- $f_k''(x) = -k^2 \\sin(kx)$\n- $f_k'''(x) = -k^3 \\cos(kx)$\n将三阶导数代入误差近似公式，得到 $f_k$ 的误差：\n$$\nE_k(x,h) \\approx \\left| \\frac{h^2}{6}(-k^3 \\cos(kx)) \\right| = \\frac{h^2 k^3}{6}|\\cos(kx)|\n$$\n我们需要计算比率 $R(x,h) = E_{100}(x,h) / E_1(x,h)$。使用上述近似，我们得到：\n$$\nR(x,h) \\approx \\frac{\\frac{h^2 (100^3)}{6}|\\cos(100x)|}{\\frac{h^2 (1^3)}{6}|\\cos(x)|} = 100^3 \\frac{|\\cos(100x)|}{|\\cos(x)|}\n$$\n该近似预测，比率 $R(x,h)$ 应在 $100^3 = 1,000,000$ 的量级，并受三角函数项的调制，前提是 $\\cos(x)$ 不接近于零且 $O(h^2)$ 误差项确实占主导地位。后一个条件成立的前提是，总误差不受机器精度（舍入）效应的主导，并且参数 $kh$ 小到足以使 Taylor 级数快速收敛。\n\n无需 Taylor 展开，我们也可以找到误差的精确表达式。对于 $f_k(x) = \\sin(kx)$：\n$$\nD_h[f_k](x) = \\frac{\\sin(k(x+h)) - \\sin(k(x-h))}{2h} = \\frac{\\sin(kx+kh) - \\sin(kx-kh)}{2h}\n$$\n使用恒等式 $\\sin(A) - \\sin(B) = 2\\cos\\left(\\frac{A+B}{2}\\right)\\sin\\left(\\frac{A-B}{2}\\right)$，我们发现：\n$$\nD_h[f_k](x) = \\frac{2\\cos(kx)\\sin(kh)}{2h} = \\cos(kx) \\frac{\\sin(kh)}{h}\n$$\n那么精确误差就是：\n$E_k(x,h) = |D_h[f_k](x) - f_k'(x)| = \\left| \\cos(kx) \\frac{\\sin(kh)}{h} - k \\cos(kx) \\right| = |\\cos(kx)| \\left| \\frac{\\sin(kh)}{h} - k \\right|$。\n这个公式是截断误差的精确表达式。然而，在计算机上进行的数值计算会受到有限精度的影响。\n\n这引出了对测试套件的两个重要考虑：\n1.  **$O(h^2)$ 近似的有效性：** $\\frac{\\sin(y)}{y}$ 的 Taylor 展开是 $1 - \\frac{y^2}{6} + \\dots$。$E \\propto h^2$ 的近似仅在 $y=kh$ 很小（$kh \\ll 1$）时有效。对于测试 $1$，其中 $k=100$ 且 $h=10^{-1}$，我们有 $kh=10$，这个值并不小。因此，关于比率为 $100^3$ 的简单预测将不成立。对于所有其他测试，$kh \\le 0.1$，该近似预计会更准确。\n2.  **舍入误差：** 对于非常小的 $h$，例如测试 $6$ 中的 $h=10^{-8}$，$f(x+h)-f(x-h)$ 的计算会遭受灾难性抵消，因为它是两个几乎相等的数之差。舍入误差的量级为 $\\epsilon_m/h$（其中 $\\epsilon_m$ 是机器ε），它可能变得比量级为 $h^2$ 的截断误差更大。\n\n让我们具体分析测试 $6$（$x = \\pi/8$，$h=10^{-8}$）。\n对于 $f_{100}(x)$，截断误差与 $f_{100}'''(x) = -100^3 \\cos(100x)$ 成正比。当 $x=\\pi/8$ 时，$100x = 100\\pi/8 = 25\\pi/2$。由于 $\\cos(25\\pi/2) = \\cos(12\\pi + \\pi/2) = 0$，截断误差的主导项 $O(h^2)$ 会消失。事实上，$f_{100}(x)$ 在 $x=\\pi/8$ 处的所有奇数阶导数都为零。这意味着解析截断误差恰好为零。\n因此，计算出的全部误差 $E_{100}(\\pi/8, h)$ 都由舍入误差构成。这个误差大约是 $E_{100, RO} \\approx \\frac{\\epsilon_m |\\sin(100\\pi/8)|}{h} = \\frac{\\epsilon_m}{h}$。\n对于 $f_1(x)$，截断误差为 $E_{1, trunc} \\approx \\frac{h^2}{6}|\\cos(\\pi/8)| = \\frac{(10^{-8})^2}{6}|\\cos(\\pi/8)| \\approx O(10^{-17})$。舍入误差为 $E_{1, RO} \\approx \\frac{\\epsilon_m |\\sin(\\pi/8)|}{h} \\approx \\frac{10^{-16} \\times 0.38}{10^{-8}} \\approx O(10^{-9})$。\n对于这两个函数，在 $h=10^{-8}$ 时，舍入误差明显占主导地位。因此，比率可以通过舍入误差的比率来近似：\n$$\nR(\\pi/8, 10^{-8}) \\approx \\frac{E_{100, RO}}{E_{1, RO}} \\approx \\frac{\\epsilon_m |\\sin(100\\pi/8)|/h}{\\epsilon_m |\\sin(\\pi/8)|/h} = \\frac{|\\sin(25\\pi/2)|}{|\\sin(\\pi/8)|} = \\frac{1}{\\sin(\\pi/8)} \\approx 2.613\n$$\n下面的代码使用标准双精度浮点运算，实现了对每个测试用例的误差 $E_1(x,h)$ 和 $E_{100}(x,h)$ 及其比率 $R(x,h)$ 的直接计算。其结果将反映上述理论分析。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Analyzes and compares the numerical error of a finite difference\n    derivative approximation for two sinusoidal functions.\n    \"\"\"\n\n    # Define the two functions as per the problem statement.\n    # f_k(x) = sin(k*x)\n    def f1(x):\n        return np.sin(x)\n\n    def f100(x):\n        return np.sin(100 * x)\n\n    # Define the exact derivatives.\n    # f_k'(x) = k*cos(k*x)\n    def df1_exact(x):\n        return np.cos(x)\n\n    def df100_exact(x):\n        return 100 * np.cos(100 * x)\n\n    # Define the centered finite difference formula.\n    def centered_difference(f, x, h):\n        \"\"\"\n        Computes the numerical derivative of function f at point x with step size h.\n        \"\"\"\n        return (f(x + h) - f(x - h)) / (2 * h)\n\n    # List of test cases (x, h)\n    test_cases = [\n        (0.0, 1e-1),\n        (0.0, 1e-6),\n        (1.0, 1e-3),\n        (np.pi / 3, 1e-5),\n        (2.0, 1e-4),\n        (np.pi / 8, 1e-8),\n    ]\n\n    results = []\n    for x, h in test_cases:\n        # Compute numerical derivatives\n        d1_num = centered_difference(f1, x, h)\n        d100_num = centered_difference(f100, x, h)\n\n        # Compute exact derivatives\n        d1_true = df1_exact(x)\n        d100_true = df100_exact(x)\n        \n        # Compute absolute errors for each function\n        E1 = np.abs(d1_num - d1_true)\n        E100 = np.abs(d100_num - d100_true)\n\n        # Check for division by zero, although analysis suggests it won't occur.\n        if E1 == 0.0:\n            # If E1 is zero, the ratio is ill-defined.\n            # This could happen if the numerical derivative is perfect.\n            # However, with finite h and non-special x, this is unlikely.\n            # If E100 is also zero, ratio is 1, otherwise it is infinity.\n            # We handle this case by appending a placeholder if it ever occurs.\n            if E100 == 0.0:\n                R = 1.0 # Or another sensible value like 0/0 -> NaN\n            else:\n                R = np.inf\n        else:\n            # Compute the ratio of the errors\n            R = E100 / E1\n        \n        results.append(R)\n\n    # Format the final output string as a comma-separated list of numbers\n    # rounded to 8 significant digits, enclosed in brackets.\n    output_str = \"[\" + \",\".join(f\"{res:.8g}\" for res in results) + \"]\"\n    \n    # Final print statement in the exact required format.\n    print(output_str)\n\nsolve()\n```", "id": "2389561"}, {"introduction": "在理解了误差的来源和行为之后，一个自然的问题是：我们能否主动设计出更好的近似公式来减小误差？本练习将指导你运用泰勒展开和待定系数法，系统地构建一个用于二阶导数的五点中心差分格式，其精度高达 $\\mathcal{O}(h^4)$。这个过程将展示如何通过巧妙地组合更多采样点的信息，来消除更多的低阶误差项，从而实现更高的计算精度 [@problem_id:2389505]。", "problem": "设 $f:\\mathbb{R}\\to\\mathbb{R}$ 是一个标量函数，在点 $x\\in\\mathbb{R}$ 的一个邻域内具有直到6阶的连续导数。考虑一个间距为 $h>0$ 的均匀网格和5个节点 $x-2h$、$x-h$、$x$、$x+h$ 和 $x+2h$。构建一个形式如下的线性有限差分格式\n$$\n\\frac{a_{-2}\\,f(x-2h)+a_{-1}\\,f(x-h)+a_{0}\\,f(x)+a_{1}\\,f(x+h)+a_{2}\\,f(x+2h)}{h^{2}}\n$$\n该格式用于近似 $f''(x)$，其精度阶为 $\\mathcal{O}(h^{4})$。确定系数 $a_{-2}$、$a_{-1}$、$a_{0}$、$a_{1}$、$a_{2}$，并将其主截断误差项显式地表示为 $C\\,h^{4}\\,f^{(6)}(x)$ 的形式，其中 $C$ 是一个常数。将你的最终答案表示为 $f''(x)$ 的差分格式表达式和主截断误差项，写成一个单行矩阵的两个元素。不需要四舍五入，答案应为精确的解析表达式。", "solution": "我们寻求系数 $a_{-2}$、$a_{-1}$、$a_{0}$、$a_{1}$、$a_{2}$，使得\n$$\nD[f](x;h)\\equiv \\frac{a_{-2}\\,f(x-2h)+a_{-1}\\,f(x-h)+a_{0}\\,f(x)+a_{1}\\,f(x+h)+a_{2}\\,f(x+2h)}{h^{2}}\n$$\n能以 $\\mathcal{O}(h^{4})$ 的截断误差近似 $f''(x)$。假设 $f$ 足够光滑，并将 $f(x\\pm kh)$ 在点 $x$ 处进行泰勒级数展开：\n$$\nf(x\\pm kh)=f(x)\\pm kh f'(x)+\\frac{(kh)^{2}}{2}f''(x)\\pm\\frac{(kh)^{3}}{6}f^{(3)}(x)+\\frac{(kh)^{4}}{24}f^{(4)}(x)\\pm\\frac{(kh)^{5}}{120}f^{(5)}(x)+\\frac{(kh)^{6}}{720}f^{(6)}(x)+\\cdots,\n$$\n其中 $k\\in\\{1,2\\}$。将这些展开式代入 $D[f](x;h)$ 并按 $f$ 的各阶导数整理各项，得到：\n$$\nD[f](x;h)=\\frac{1}{h^{2}}\\Bigg[\\Big(\\sum_{j=-2}^{2} a_{j}\\Big)f(x)+h\\Big(\\sum_{j=-2}^{2} j a_{j}\\Big)f'(x)+\\frac{h^{2}}{2}\\Big(\\sum_{j=-2}^{2} j^{2}a_{j}\\Big)f''(x)\n$$\n$$\n+\\frac{h^{3}}{6}\\Big(\\sum_{j=-2}^{2} j^{3}a_{j}\\Big)f^{(3)}(x)+\\frac{h^{4}}{24}\\Big(\\sum_{j=-2}^{2} j^{4}a_{j}\\Big)f^{(4)}(x)+\\frac{h^{5}}{120}\\Big(\\sum_{j=-2}^{2} j^{5}a_{j}\\Big)f^{(5)}(x)+\\frac{h^{6}}{720}\\Big(\\sum_{j=-2}^{2} j^{6}a_{j}\\Big)f^{(6)}(x)+\\cdots\\Bigg].\n$$\n为了实现 $D[f](x;h)=f''(x)+\\mathcal{O}(h^{4})$，我们需要满足以下矩条件：\n$$\n\\sum_{j=-2}^{2} a_{j}=0,\\quad \\sum_{j=-2}^{2} j a_{j}=0,\\quad \\sum_{j=-2}^{2} j^{2}a_{j}=2,\\quad \\sum_{j=-2}^{2} j^{3}a_{j}=0,\\quad \\sum_{j=-2}^{2} j^{4}a_{j}=0.\n$$\n根据关于点 $x$ 的对称性，我们设置 $a_{-2}=a_{2}\\equiv A$，$a_{-1}=a_{1}\\equiv B$ 以及 $a_{0}\\equiv C$。这样，奇数阶矩的条件就自动满足了。剩下的条件变为：\n$$\n2A+2B+C=0,\\quad 8A+2B=2,\\quad 32A+2B=0.\n$$\n从 $32A+2B=0$ 可得 $B=-16A$。将其代入 $8A+2B=2$ 得到 $8A-32A=2$，因此 $-24A=2$ 且 $A=-\\frac{1}{12}$。然后 $B=-16A=\\frac{16}{12}=\\frac{4}{3}$，并从 $2A+2B+C=0$ 得到 $C=-2A-2B=-2\\left(-\\frac{1}{12}\\right)-2\\left(\\frac{4}{3}\\right)=\\frac{1}{6}-\\frac{8}{3}=-\\frac{5}{2}$。\n\n因此，\n$$\nD[f](x;h)=\\frac{-\\frac{1}{12}f(x-2h)+\\frac{4}{3}f(x-h)-\\frac{5}{2}f(x)+\\frac{4}{3}f(x+h)-\\frac{1}{12}f(x+2h)}{h^{2}}.\n$$\n习惯上，我们将分子中的系数化为整数，得到等价形式：\n$$\nD[f](x;h)=\\frac{-f(x-2h)+16 f(x-h)-30 f(x)+16 f(x+h)-f(x+2h)}{12 h^{2}}.\n$$\n\n为了求主截断误差，我们回到泰勒展开式。我们的构造使得展开式中直到 $f^{(4)}(x)$ 的项都被消去，并且根据对称性，$f^{(5)}(x)$ 的项也为零。第一个非零余项来自于 $f^{(6)}(x)$ 项：\n$$\n\\text{TE}(x;h)=\\frac{1}{h^{2}}\\cdot \\frac{h^{6}}{720}\\Big(\\sum_{j=-2}^{2} j^{6}a_{j}\\Big) f^{(6)}(x)+\\mathcal{O}(h^{6})=\\frac{h^{4}}{720}\\Big(\\sum_{j=-2}^{2} j^{6}a_{j}\\Big) f^{(6)}(x)+\\mathcal{O}(h^{6}).\n$$\n根据 $a_{-2}=a_{2}=A=-\\frac{1}{12}$，$a_{-1}=a_{1}=B=\\frac{4}{3}$，$a_{0}=C=-\\frac{5}{2}$，我们计算\n$$\n\\sum_{j=-2}^{2} j^{6}a_{j}=2\\left(64A+B\\right)+0=2\\left(64\\left(-\\frac{1}{12}\\right)+\\frac{4}{3}\\right)=2\\left(-\\frac{16}{3}+\\frac{4}{3}\\right)=2\\left(-\\frac{12}{3}\\right)=-8.\n$$\n因此，\n$$\n\\text{TE}(x;h)=\\frac{h^{4}}{720}\\cdot(-8)\\,f^{(6)}(x)+\\mathcal{O}(h^{6})=-\\frac{h^{4}}{90}f^{(6)}(x)+\\mathcal{O}(h^{6}).\n$$\n因此，用于计算 $f''(x)$ 的5点、$\\mathcal{O}(h^{4})$ 精度格式及其主截断误差项分别为：\n$$\n\\frac{-f(x+2h)+16 f(x+h)-30 f(x)+16 f(x-h)-f(x-2h)}{12 h^{2}},\\quad -\\frac{h^{4}}{90}f^{(6)}(x).\n$$", "answer": "$$\\boxed{\\begin{pmatrix}\\dfrac{-f(x+2h)+16 f(x+h)-30 f(x)+16 f(x-h)-f(x-2h)}{12 h^{2}} & -\\dfrac{h^{4}}{90}\\,f^{(6)}(x)\\end{pmatrix}}$$", "id": "2389505"}]}