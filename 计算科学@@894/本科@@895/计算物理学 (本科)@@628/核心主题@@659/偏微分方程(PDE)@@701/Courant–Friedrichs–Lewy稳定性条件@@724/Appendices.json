{"hands_on_practices": [{"introduction": "让我们从一个经典的教科书案例开始，将理论付诸实践。这个练习模拟一维波动方程，例如电缆中的电压脉冲传播。通过直接应用CFL条件，你将计算出在给定的波速 $c$ 和空间步长 $\\Delta x$ 下，为保证数值稳定性所需的最大时间步长 $\\Delta t$。这是任何进行显式时间演化模拟的人都必须掌握的基本技能。[@problem_id:2139541]", "problem": "一名工程师正在为沿特种同轴电缆的电压脉冲传播开发数值模拟。在一个简化的一维模型中，位置 $x$ 和时间 $t$ 处的电压 $u(x, t)$ 由以下波动方程描述：\n$$ \\frac{\\partial^2 u}{\\partial t^2} = 16 \\frac{\\partial^2 u}{\\partial x^2} $$\n其中，$x$ 的单位是米，$t$ 的单位是秒。\n\n该工程师决定使用一个标准的显式有限差分格式来数值求解这个方程。用于模拟的空间网格设置为均匀间距 $\\Delta x = 0.05$ 米。为确保数值解的稳定性，时间步长 $\\Delta t$ 必须谨慎选择。\n\n在满足此格式的 Courant-Friedrichs-Lewy (CFL) 稳定性条件的情况下，可以使用的最大时间步长 $\\Delta t$ 是多少？答案以秒为单位，并四舍五入到三位有效数字。", "solution": "我们从写成标准形式的一维波动方程开始\n$$\n\\frac{\\partial^{2} u}{\\partial t^{2}}=c^{2}\\frac{\\partial^{2} u}{\\partial x^{2}},\n$$\n通过与给定方程 $\\frac{\\partial^{2} u}{\\partial t^{2}}=16\\,\\frac{\\partial^{2} u}{\\partial x^{2}}$ 比较，可知波速为 $c=4$。\n\n在间距为 $\\Delta x$、时间步长为 $\\Delta t$ 的均匀网格上，一个标准的二阶显式有限差分离散（时间与空间中心差分）格式为\n$$\n\\frac{u_{j}^{n+1}-2u_{j}^{n}+u_{j}^{n-1}}{(\\Delta t)^{2}}=c^{2}\\frac{u_{j+1}^{n}-2u_{j}^{n}+u_{j-1}^{n}}{(\\Delta x)^{2}}.\n$$\n重新整理得到递推公式\n$$\nu_{j}^{n+1}=2u_{j}^{n}-u_{j}^{n-1}+r^{2}\\left(u_{j+1}^{n}-2u_{j}^{n}+u_{j-1}^{n}\\right),\n$$\n其中库朗数 $r$ 定义为\n$$\nr=\\frac{c\\,\\Delta t}{\\Delta x}.\n$$\n\n为了确定稳定性约束，我们通过寻找 $u_{j}^{n}=G^{n}\\exp(\\mathrm{i}\\kappa j\\Delta x)$ 形式的傅里叶模态解来进行 von Neumann 分析，其中 $G$ 是增长因子，$\\kappa$ 是波数。将其代入递推公式得到\n$$\nG-2+G^{-1}=r^{2}\\left(e^{\\mathrm{i}\\kappa\\Delta x}-2+e^{-\\mathrm{i}\\kappa\\Delta x}\\right)=-4r^{2}\\sin^{2}\\left(\\frac{\\kappa\\Delta x}{2}\\right).\n$$\n等价地，\n$$\nG+G^{-1}=2\\left[1-2r^{2}\\sin^{2}\\left(\\frac{\\kappa\\Delta x}{2}\\right)\\right].\n$$\n这给出了色散关系\n$$\n\\cos(\\omega\\Delta t)=1-2r^{2}\\sin^{2}\\left(\\frac{\\kappa\\Delta x}{2}\\right),\n$$\n因此，要使稳定性成立（即对所有模态都要求 $|G|=1$），条件是对于所有的 $\\kappa$，等式右侧的值都位于区间 $[-1,1]$ 内。因为 $\\sin^{2}(\\cdot)\\in[0,1]$，所以对于所有的 $\\kappa$，等式右侧的最小值为 $1-2r^{2}$。要求 $1-2r^{2}\\geq -1$，可得\n$$\nr^{2}\\leq 1 \\quad\\Longleftrightarrow\\quad r\\leq 1.\n$$\n因此，该显式格式的 Courant-Friedrichs-Lewy 稳定性条件是\n$$\n\\frac{c\\,\\Delta t}{\\Delta x}\\leq 1 \\quad\\Longrightarrow\\quad \\Delta t\\leq \\frac{\\Delta x}{c}.\n$$\n\n对于给定的数据 $\\Delta x=0.05$ 和 $c=4$，最大稳定时间步长为\n$$\n\\Delta t_{\\max}=\\frac{0.05}{4}=0.0125.\n$$\n四舍五入到三位有效数字，该值为 $0.0125$ 秒。", "answer": "$$\\boxed{0.0125}$$", "id": "2139541"}, {"introduction": "现实世界中的物理现象很少局限于一维空间。本练习将CFL条件的概念扩展到一个二维平流问题，这类似于模拟污染物在流体中的输运过程。你将学习当信息同时在 $x$ 和 $y$ 两个方向上传播时，如何构建稳定性约束，这是模拟更真实系统的关键一步。[@problem_id:2383731]", "problem": "一个二维线性平流方程以恒定速度 $v_x$ 和 $v_y$ 输运一个被动标量场 $u(x,y,t)$：\n$$\n\\frac{\\partial u}{\\partial t} + v_x \\frac{\\partial u}{\\partial x} + v_y \\frac{\\partial u}{\\partial y} = 0.\n$$\n考虑一个间距为 $\\Delta x$ 和 $\\Delta y$ 的均匀笛卡尔网格，并使用显式前向欧拉更新对 $u$ 进行时间演化。空间导数在每个方向上使用一阶迎风（“施主单元”）格式进行离散化，并在每个时间步中组合成一个非分裂更新。速度分量和网格间距为\n$$\nv_x = 1.2\\,\\mathrm{m\\,s^{-1}}, \\quad v_y = -0.8\\,\\mathrm{m\\,s^{-1}}, \\quad \\Delta x = 5.0 \\times 10^{-3}\\,\\mathrm{m}, \\quad \\Delta y = 8.0 \\times 10^{-3}\\,\\mathrm{m}.\n$$\n确定对于这些速度，在此网格上保证此显式格式线性稳定性的最大时间步长 $\\Delta t$。以秒为单位表示您的答案，并将其四舍五-入到 $4$ 位有效数字。", "solution": "所述问题有效。它具有科学依据、是适定的、客观的，并包含确定唯一解所需的所有信息。我们将着手进行推导。\n\n控制偏微分方程是二维线性平流方程：\n$$\n\\frac{\\partial u}{\\partial t} + v_x \\frac{\\partial u}{\\partial x} + v_y \\frac{\\partial u}{\\partial y} = 0\n$$\n其中 $u(x,y,t)$ 是一个标量场，$v_x$ 和 $v_y$ 是恒定的速度分量。\n\n指定的数值格式是：时间导数采用显式前向欧拉法，空间导数采用一阶迎风（“施主单元”）法，并组合成一个非分裂更新。令 $u_{i,j}^n$ 表示在时间 $t_n$ 时，离散网格点 $(x_i, y_j)$ 上的标量场的值。\n\n使用前向欧拉法对时间导数进行离散化，结果为：\n$$\n\\frac{\\partial u}{\\partial t} \\approx \\frac{u_{i,j}^{n+1} - u_{i,j}^n}{\\Delta t}\n$$\n空间导数的一阶迎风离散化取决于速度分量的符号。\n给定的速度为 $v_x = 1.2\\,\\mathrm{m\\,s^{-1}}$ 和 $v_y = -0.8\\,\\mathrm{m\\,s^{-1}}$。\n由于 $v_x > 0$，$x$方向的流动来自负方向（从索引 $i-1$ 到 $i$）。$x$导数的迎风近似为一阶后向差分：\n$$\n\\frac{\\partial u}{\\partial x} \\approx \\frac{u_{i,j}^n - u_{i-1,j}^n}{\\Delta x}\n$$\n由于 $v_y < 0$，$y$方向的流动来自正方向（从索引 $j+1$ 到 $j$）。$y$导数的迎风近似为一阶前向差分：\n$$\n\\frac{\\partial u}{\\partial y} \\approx \\frac{u_{i,j+1}^n - u_{i,j}^n}{\\Delta y}\n$$\n将这些离散近似代入控制方程，得出完全离散化的方程：\n$$\n\\frac{u_{i,j}^{n+1} - u_{i,j}^n}{\\Delta t} + v_x \\left( \\frac{u_{i,j}^n - u_{i-1,j}^n}{\\Delta x} \\right) + v_y \\left( \\frac{u_{i,j+1}^n - u_{i,j}^n}{\\Delta y} \\right) = 0\n$$\n为了分析稳定性，我们求解下一个时间步的值 $u_{i,j}^{n+1}$：\n$$\nu_{i,j}^{n+1} = u_{i,j}^n - \\frac{v_x \\Delta t}{\\Delta x} (u_{i,j}^n - u_{i-1,j}^n) - \\frac{v_y \\Delta t}{\\Delta y} (u_{i,j+1}^n - u_{i,j}^n)\n$$\n我们可以用速度分量的绝对值来表示它们：$v_x = |v_x|$ 和 $v_y = -|v_y|$。我们再定义每个方向上的库朗数，它们是无量纲量：\n$$\nC_x = \\frac{|v_x| \\Delta t}{\\Delta x} \\quad \\text{和} \\quad C_y = \\frac{|v_y| \\Delta t}{\\Delta y}\n$$\n由于 $\\Delta t$、$\\Delta x$ 和 $\\Delta y$ 均为正，且我们对速度使用绝对值，因此 $C_x$ 和 $C_y$ 都是非负的。\n将这些定义代入更新方程中：\n$$\nu_{i,j}^{n+1} = u_{i,j}^n - \\frac{|v_x| \\Delta t}{\\Delta x} (u_{i,j}^n - u_{i-1,j}^n) - \\left(-\\frac{|v_y| \\Delta t}{\\Delta y}\\right) (u_{i,j+1}^n - u_{i,j}^n)\n$$\n$$\nu_{i,j}^{n+1} = u_{i,j}^n - C_x(u_{i,j}^n - u_{i-1,j}^n) + C_y(u_{i,j+1}^n - u_{i,j}^n)\n$$\n重新整理各项，将时间步 $n$ 的值组合在一起：\n$$\nu_{i,j}^{n+1} = (1 - C_x - C_y) u_{i,j}^n + C_x u_{i-1,j}^n + C_y u_{i,j+1}^n\n$$\n为使此显式格式稳定，一个充分条件是右侧各项的系数必须全部为非负。由于 $C_x \\ge 0$ 和 $C_y \\ge 0$，唯一需要满足的条件是针对 $u_{i,j}^n$ 的系数：\n$$\n1 - C_x - C_y \\ge 0\n$$\n这就得到了针对此特定多维、非分裂迎风格式的 Courant–Friedrichs–Lewy (CFL) 稳定性条件：\n$$\nC_x + C_y \\le 1\n$$\n将 $C_x$ 和 $C_y$ 的定义代入：\n$$\n\\frac{|v_x| \\Delta t}{\\Delta x} + \\frac{|v_y| \\Delta t}{\\Delta y} \\le 1\n$$\n我们可以将 $\\Delta t$ 提取出来：\n$$\n\\Delta t \\left( \\frac{|v_x|}{\\Delta x} + \\frac{|v_y|}{\\Delta y} \\right) \\le 1\n$$\n当等式成立时，可以找到最大可能的时间步长 $\\Delta t_{max}$：\n$$\n\\Delta t_{max} = \\frac{1}{\\frac{|v_x|}{\\Delta x} + \\frac{|v_y|}{\\Delta y}}\n$$\n现在，我们代入给定的数值：\n$|v_x| = |1.2| = 1.2\\,\\mathrm{m\\,s^{-1}}$\n$|v_y| = |-0.8| = 0.8\\,\\mathrm{m\\,s^{-1}}$\n$\\Delta x = 5.0 \\times 10^{-3}\\,\\mathrm{m}$\n$\\Delta y = 8.0 \\times 10^{-3}\\,\\mathrm{m}$\n\n首先，计算分母中的各项：\n$$\n\\frac{|v_x|}{\\Delta x} = \\frac{1.2}{5.0 \\times 10^{-3}} = \\frac{1.2}{0.005} = 240\\,\\mathrm{s^{-1}}\n$$\n$$\n\\frac{|v_y|}{\\Delta y} = \\frac{0.8}{8.0 \\times 10^{-3}} = \\frac{0.8}{0.008} = 100\\,\\mathrm{s^{-1}}\n$$\n现在，将这些值代入 $\\Delta t_{max}$ 的表达式中：\n$$\n\\Delta t_{max} = \\frac{1}{240 + 100} = \\frac{1}{340}\\,\\mathrm{s}\n$$\n最后，我们计算其数值并按要求将其四舍五入到 $4$ 位有效数字：\n$$\n\\Delta t_{max} \\approx 0.002941176... \\,\\mathrm{s}\n$$\n四舍五入到 $4$ 位有效数字，得到：\n$$\n\\Delta t_{max} \\approx 0.002941\\,\\mathrm{s}\n$$", "answer": "$$\n\\boxed{0.002941}\n$$", "id": "2383731"}, {"introduction": "为了优化计算资源，实际的数值模拟常常采用非均匀网格，在解变化剧烈的区域使用更精细的网格。这个练习探讨了CFL条件如何应用于这种情况。通过分析非均匀网格上的波动方程，你将发现全局时间步长受到最小网格单元的限制，这深刻地揭示了CFL条件的物理本质——它是一个关于信息在离散网格上传播的局部速度限制。[@problem_id:2383732]", "problem": "您的任务是为非均匀网格上的一维波动方程设计一种数值稳定的显式时间积分方法，并为几种情况计算受稳定性限制的时间步长。考虑一维波动方程\n$$\nu_{tt}(x,t) \\;=\\; c^2\\,u_{xx}(x,t),\n$$\n其中 $c$ 为恒定波速（单位为 $\\mathrm{m/s}$）。设计算网格为非均匀网格，节点为 $x_0 < x_1 < \\dots < x_N$，并定义局部间距 $\\Delta x_i = x_{i+1}-x_i$（单位为 $\\mathrm{m}$），其中 $i=0,\\dots,N-1$。使用该非均匀网格上的空间二阶中心有限差分离散和时间上的显式二阶中心差分（蛙跳格式更新）来演化离散解 $u_i^n \\approx u(x_i,t^n)$，其中 $t^n = n\\,\\Delta t$。\n\n任务：\n1) 从波动方程和给定的离散化选择出发，推导出一个充分的稳定性约束条件，该条件用波速 $c$ 和局部网格间距 $\\Delta x_i$ 来限制时间步长 $\\Delta t$。您的推导必须基于基本原理，如离散能量守恒或离散拉普拉斯算子的谱半径界，并且必须得出一个可以通过每个单元的 Courant 数进行局部解释的条件。不要假设任何先验公式；相反，应根据离散化和基本的线性代数或能量论证来证明每一步。\n\n2) 将单元 $i$ 处的局部 Courant 数定义为\n$$\n\\mathcal{C}_i \\;=\\; \\frac{c\\,\\Delta t}{\\Delta x_i},\n$$\n并将您的充分稳定性约束表示为对 $\\max_i \\mathcal{C}_i$ 的一个界。使用此定义，为一个选定的 Courant 因子 $\\theta \\in (0,1]$，定义最大稳定时间步长为\n$$\n\\Delta t_{\\max}(\\theta) \\;=\\; \\theta \\,\\Delta t_\\star,\n$$\n其中 $\\Delta t_\\star$ 是您的稳定性约束所蕴含的上界。所有时间步长必须以秒为单位表示。\n\n3) 实现一个程序，为以下每个测试用例计算：\n- 最大稳定时间步长 $\\Delta t_{\\max}(\\theta)$ （单位为 $\\mathrm{s}$），以及\n- 一个布尔值，指示给定的建议时间步长 $\\Delta t_{\\text{prop}}$ （单位为 $\\mathrm{s}$）是否满足您的充分稳定性条件（将相等情况视为稳定）。\n\n使用以下参数值的测试套件：\n- 案例 A（均匀网格，边界情况）：\n  - $\\Delta x = [\\,0.1,\\,0.1,\\,0.1,\\,0.1,\\,0.1,\\,0.1,\\,0.1,\\,0.1,\\,0.1,\\,0.1\\,]$ （单位 m），\n  - $c = 1.0$ （单位 m/s），\n  - $\\theta = 1.0$，\n  - $\\Delta t_{\\text{prop}} = 0.1$ （单位 s）。\n- 案例 B（非均匀网格，由一个小单元主导）：\n  - $\\Delta x = [\\,0.2,\\,0.05,\\,0.1,\\,0.15\\,]$ （单位 m），\n  - $c = 2.0$ （单位 m/s），\n  - $\\theta = 0.8$，\n  - $\\Delta t_{\\text{prop}} = 0.03$ （单位 s）。\n- 案例 C（非均匀网格，在边界处进行等式测试）：\n  - $\\Delta x = [\\,0.005,\\,0.04,\\,0.03\\,]$ （单位 m），\n  - $c = 3.0$ （单位 m/s），\n  - $\\theta = 1.0$，\n  - $\\Delta t_{\\text{prop}} = 0.001666666667$ （单位 s）。\n- 案例 D（非均匀网格，建议步长略高于边界）：\n  - $\\Delta x = [\\,0.3,\\,0.25,\\,0.1,\\,0.12,\\,0.11\\,]$ （单位 m），\n  - $c = 0.5$ （单位 m/s），\n  - $\\theta = 1.0$，\n  - $\\Delta t_{\\text{prop}} = 0.21$ （单位 s）。\n\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。该列表是所有案例结果的扁平化列表，每个案例首先提供浮点数 $\\Delta t_{\\max}(\\theta)$，然后是针对建议步长的布尔值。所有报告的时间步长都以秒为单位表示，浮点数四舍五入到 $12$ 位有效数字。具体而言，输出格式必须是\n$$\n[\\,\\Delta t_{\\max}^{(A)},\\; \\text{stable}^{(A)},\\; \\Delta t_{\\max}^{(B)},\\; \\text{stable}^{(B)},\\; \\Delta t_{\\max}^{(C)},\\; \\text{stable}^{(C)},\\; \\Delta t_{\\max}^{(D)},\\; \\text{stable}^{(D)}\\,].\n$$", "solution": "该问题要求为非均匀网格上的一维波动方程的数值解推导一个充分的稳定性条件，然后针对具体的测试用例进行计算。我将首先验证该问题是适定的且在科学上是合理的。\n\n该问题是有效的。它涉及标准的一维波动方程 $u_{tt} = c^2 u_{xx}$，这是物理学中的一个基本方程。它提出了一种标准的数值方法：空间和时间上均使用二阶中心差分（蛙跳格式）。任务是从第一性原理推导稳定性条件，这是计算物理学中的一个经典练习。所有参数和测试用例都定义清晰、客观且物理上一致。没有违反任何科学原理。问题是自洽且可解的。\n\n我们继续进行推导和求解。\n\n**1. 波动方程的离散化**\n\n波动方程由下式给出：\n$$ u_{tt}(x,t) = c^2 u_{xx}(x,t) $$\n网格是非均匀的，节点为 $x_i$，间距为 $\\Delta x_i = x_{i+1} - x_i$。时间以恒定步长 $\\Delta t$ 离散化，使得 $t^n = n \\Delta t$。在 $(x_i, t^n)$ 处的数值解用 $u_i^n$ 表示。\n\n时间导数 $u_{tt}$ 使用二阶中心差分（蛙跳格式）近似：\n$$ u_{tt}(x_i, t^n) \\approx \\frac{u_i^{n+1} - 2u_i^n + u_i^{n-1}}{(\\Delta t)^2} $$\n非均匀网格上的空间导数 $u_{xx}$ 通过从泰勒级数展开推导出的二阶中心差分来近似。标准公式为：\n$$ u_{xx}(x_i, t^n) \\approx \\frac{2}{\\Delta x_i + \\Delta x_{i-1}} \\left( \\frac{u_{i+1}^n - u_i^n}{\\Delta x_i} - \\frac{u_i^n - u_{i-1}^n}{\\Delta x_{i-1}} \\right) $$\n将这些代入波动方程，得到完全离散的更新规则：\n$$ \\frac{u_i^{n+1} - 2u_i^n + u_i^{n-1}}{(\\Delta t)^2} = c^2 \\left[ \\frac{2}{\\Delta x_i + \\Delta x_{i-1}} \\left( \\frac{u_{i+1}^n - u_i^n}{\\Delta x_i} - \\frac{u_i^n - u_{i-1}^n}{\\Delta x_{i-1}} \\right) \\right] $$\n\n**2. 充分稳定性条件的推导**\n\n问题要求基于基本原理进行推导，得出一个可通过局部 Courant 数表示的条件。我们将使用 Courant-Friedrichs-Lewy (CFL) 条件，该条件源于对依赖域的分析。\n\nCFL 条件指出，为了使一个数值格式稳定且收敛，一个点的物理依赖域必须包含在该点的数值依赖域之内。\n\n让我们分析从 $t^n$到 $t^{n+1} = t^n + \\Delta t$ 的单个时间步长的依赖关系。\n- **物理依赖域**：连续波动方程的解 $u(x_i, t^{n+1})$ 依赖于 $t^n$ 时刻，在源于 $(x_i, t^{n+1})$ 的特征锥内的初始数据。这对应于空间区间 $[x_i - c\\Delta t, x_i + c\\Delta t]$。\n- **数值依赖域**：离散更新规则表明，新值 $u_i^{n+1}$ 是根据先前时间步长的值 $u_i^n$、$u_i^{n-1}$ 以及 $t^n$ 时刻的空间邻点 $u_{i-1}^n$ 和 $u_{i+1}^n$ 计算得出的。因此，$u_i^{n+1}$ 对 $t^n$ 时刻数据的数值依赖域是模板所覆盖的空间区间，即 $[x_{i-1}, x_{i+1}]$。\n\n应用 CFL 原理，我们要求：\n$$ [x_i - c\\Delta t, x_i + c\\Delta t] \\subseteq [x_{i-1}, x_{i+1}] $$\n这个单一的包含关系产生了两个不等式：\n1.  $x_i - c\\Delta t \\ge x_{i-1} \\implies c\\Delta t \\le x_i - x_{i-1} \\implies c\\Delta t \\le \\Delta x_{i-1}$\n2.  $x_i + c\\Delta t \\le x_{i+1} \\implies c\\Delta t \\le x_{i+1} - x_i \\implies c\\Delta t \\le \\Delta x_i$\n\n这两个条件必须对每个内部网格点 $i$ 都成立。为确保整个计算域的稳定性，时间步长 $\\Delta t$ 必须满足所有这些局部约束中最严格的一个。这导致了一个全局条件：\n$$ c\\Delta t \\le \\min\\left( \\min_i \\Delta x_{i-1}, \\min_i \\Delta x_i \\right) $$\n由于所有间距的集合 $\\{\\Delta x_j\\}_{j=0}^{N-1}$ 包括了不等式中出现的所有 $\\{\\Delta x_{i-1}\\}$ 和 $\\{\\Delta x_i\\}$，该条件简化为：\n$$ c\\Delta t \\le \\min_j (\\Delta x_j) $$\n这可以重写为：\n$$ \\Delta t \\le \\frac{\\min_j (\\Delta x_j)}{c} $$\n这是该格式的一个充分稳定性条件。\n\n**3. 用局部 Courant 数进行解释**\n\n问题将单元 $i$ 的局部 Courant 数定义为 $\\mathcal{C}_i = \\frac{c\\,\\Delta t}{\\Delta x_i}$。我们可以使用这个定义来表示我们推导出的稳定性条件。\n从 $c\\Delta t \\le \\min_j(\\Delta x_j)$，我们可以对任何单元 $k$ 写出：\n$$ \\frac{c\\Delta t}{\\Delta x_k} \\le \\frac{\\min_j(\\Delta x_j)}{\\Delta x_k} $$\n右侧总是小于或等于 $1$，并且当 $\\Delta x_k$ 是最小间距时等于 $1$。因此，所有单元上的最大 Courant 数受 $1$ 的约束：\n$$ \\max_k \\mathcal{C}_k = \\max_k \\left( \\frac{c\\Delta t}{\\Delta x_k} \\right) \\le \\max_k \\left( \\frac{\\min_j(\\Delta x_j)}{\\Delta x_k} \\right) = 1 $$\n因此，稳定性条件 $\\Delta t \\le \\frac{\\min_j (\\Delta x_j)}{c}$ 等价于 $\\max_k \\mathcal{C}_k \\le 1$。这满足了问题陈述的要求。\n\n因此，稳定时间步长的上界，记为 $\\Delta t_\\star$，是：\n$$ \\Delta t_\\star = \\frac{\\min_j (\\Delta x_j)}{c} $$\n对于一个选定的 Courant 因子 $\\theta \\in (0,1]$，最大稳定时间步长是：\n$$ \\Delta t_{\\max}(\\theta) = \\theta \\, \\Delta t_\\star = \\theta \\frac{\\min_j (\\Delta x_j)}{c} $$\n一个建议的时间步长 $\\Delta t_{\\text{prop}}$ 如果满足充分稳定性条件 $\\Delta t_{\\text{prop}} \\le \\Delta t_\\star$，则它是稳定的。请注意，安全因子 $\\theta$ 用于设置实际的时间步长，而不是用于检查建议步长的基本稳定性。\n\n**4. 应用于测试用例**\n\n我们将这些公式应用于给定的测试用例。\n\n- **案例 A**：$\\Delta x = [\\,0.1, \\dots, 0.1\\,]$ m, $c=1.0$ m/s, $\\theta=1.0$, $\\Delta t_{\\text{prop}}=0.1$ s。\n  - $\\min(\\Delta x_i) = 0.1$ m。\n  - $\\Delta t_\\star = 0.1 / 1.0 = 0.1$ s。\n  - $\\Delta t_{\\max}(1.0) = 1.0 \\times 0.1 = 0.1$ s。\n  - 稳定性检查：$\\Delta t_{\\text{prop}} \\le \\Delta t_\\star \\implies 0.1 \\le 0.1$，结果为真。\n\n- **案例 B**：$\\Delta x = [\\,0.2, 0.05, 0.1, 0.15\\,]$ m, $c=2.0$ m/s, $\\theta=0.8$, $\\Delta t_{\\text{prop}}=0.03$ s。\n  - $\\min(\\Delta x_i) = 0.05$ m。\n  - $\\Delta t_\\star = 0.05 / 2.0 = 0.025$ s。\n  - $\\Delta t_{\\max}(0.8) = 0.8 \\times 0.025 = 0.02$ s。\n  - 稳定性检查：$\\Delta t_{\\text{prop}} \\le \\Delta t_\\star \\implies 0.03 \\le 0.025$，结果为假。\n\n- **案例 C**：$\\Delta x = [\\,0.005, 0.04, 0.03\\,]$ m, $c=3.0$ m/s, $\\theta=1.0$, $\\Delta t_{\\text{prop}}=0.001666666667$ s。\n  - $\\min(\\Delta x_i) = 0.005$ m。\n  - $\\Delta t_\\star = 0.005 / 3.0 = 1/600 \\approx 0.001666666666...$ s。\n  - $\\Delta t_{\\max}(1.0) = 1.0 \\times (1/600) \\approx 0.001666666666...$ s。\n  - 稳定性检查：$\\Delta t_{\\text{prop}} \\le \\Delta t_\\star \\implies 0.001666666667 \\le 1/600$。由于 $1/600 = 0.001666...$，建议值严格大于稳定性极限。该条件为假。\n\n- **案例 D**：$\\Delta x = [\\,0.3, 0.25, 0.1, 0.12, 0.11\\,]$ m, $c=0.5$ m/s, $\\theta=1.0$, $\\Delta t_{\\text{prop}}=0.21$ s。\n  - $\\min(\\Delta x_i) = 0.1$ m。\n  - $\\Delta t_\\star = 0.1 / 0.5 = 0.2$ s。\n  - $\\Delta t_{\\max}(1.0) = 1.0 \\times 0.2 = 0.2$ s。\n  - 稳定性检查：$\\Delta t_{\\text{prop}} \\le \\Delta t_\\star \\implies 0.21 \\le 0.2$，结果为假。\n\n现在将基于此验证过的逻辑进行实现。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes stability-limited time steps for the 1D wave equation on\n    non-uniform grids for several test cases.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"case_id\": \"A\",\n            \"delta_x\": [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],\n            \"c\": 1.0,\n            \"theta\": 1.0,\n            \"delta_t_prop\": 0.1\n        },\n        {\n            \"case_id\": \"B\",\n            \"delta_x\": [0.2, 0.05, 0.1, 0.15],\n            \"c\": 2.0,\n            \"theta\": 0.8,\n            \"delta_t_prop\": 0.03\n        },\n        {\n            \"case_id\": \"C\",\n            \"delta_x\": [0.005, 0.04, 0.03],\n            \"c\": 3.0,\n            \"theta\": 1.0,\n            \"delta_t_prop\": 0.001666666667\n        },\n        {\n            \"case_id\": \"D\",\n            \"delta_x\": [0.3, 0.25, 0.1, 0.12, 0.11],\n            \"c\": 0.5,\n            \"theta\": 1.0,\n            \"delta_t_prop\": 0.21\n        }\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        # Extract parameters for the current case\n        delta_x_list = case[\"delta_x\"]\n        c = case[\"c\"]\n        theta = case[\"theta\"]\n        delta_t_prop = case[\"delta_t_prop\"]\n\n        # 1. Find the minimum grid spacing\n        delta_x_min = np.min(delta_x_list)\n\n        # 2. Compute the stability limit delta_t_star\n        # This is the upper bound from the sufficient stability condition.\n        delta_t_star = delta_x_min / c\n\n        # 3. Compute the maximum stable time step for the given Courant factor theta\n        delta_t_max_theta = theta * delta_t_star\n\n        # 4. Check if the proposed time step is stable\n        # The condition is delta_t_prop <= delta_t_star. Equality is treated as stable.\n        # A small tolerance is not used, as the problem requires strict scientific correctness.\n        is_stable = delta_t_prop <= delta_t_star\n\n        # Append formatted results to the list\n        results.append(\"{:.12g}\".format(delta_t_max_theta))\n        results.append(str(is_stable).lower())\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2383732"}]}