{"hands_on_practices": [{"introduction": "To begin our exploration of Credit Default Swap (CDS) pricing, we start with the most fundamental principle: no-arbitrage. This practice [@problem_id:2430981] challenges you to price a CDS in a simplified one-period, two-state (default or survival) world. By linking the CDS premium to the price of a traded risky bond, you will discover how risk-neutral probabilities are derived and used to ensure that no risk-free profit opportunities exist, providing a foundational understanding for all derivative pricing.", "id": "2430981", "problem": "Consider a frictionless, arbitrage-free, single-period market from time $t=0$ to time $t=1$. The continuously traded risk-free asset has a gross return of $1+r$ over the period with $r=0.04$. A reference firm has a one-period zero-coupon bond with face value $1$ that either survives to $t=1$ or defaults by $t=1$. If the firm survives, the bond pays $1$ at $t=1$; if it defaults, the bond pays a recovery equal to a fixed fraction $\\delta$ of face, with $\\delta=0.35$. The current price of this risky bond at $t=0$ is $B_0=0.95$.\n\nA Credit Default Swap (CDS) on this firm with notional $1$ is written for the same period. The contract specifies that at $t=1$:\n- If the firm has defaulted, the protection seller pays the loss given default, equal to $1-\\delta$, to the protection buyer, and the protection buyer makes no premium payment in that state.\n- If the firm has not defaulted, the protection buyer pays a single premium $c$ to the protection seller, and there is no protection payment.\n\nAssuming no arbitrage and that default/no-default are the only states at $t=1$, determine the fair premium $c$ that makes the time-$0$ value of the CDS equal to zero. Provide $c$ as a decimal. Round your answer to four significant figures.", "solution": "The problem statement will first be validated for scientific soundness, clarity, and completeness.\n\n**Step 1: Extract Givens**\n- Market type: Frictionless, arbitrage-free, single-period from time $t=0$ to $t=1$.\n- Risk-free asset gross return: $1+r$.\n- Risk-free rate: $r=0.04$.\n- Reference firm's zero-coupon bond: face value $1$, matures at $t=1$.\n- States at $t=1$: Survival or Default.\n- Payoff of bond at $t=1$: $1$ upon survival, $\\delta$ upon default.\n- Recovery rate: $\\delta = 0.35$.\n- Current bond price at $t=0$: $B_0 = 0.95$.\n- Credit Default Swap (CDS) notional: $1$.\n- CDS payoff at $t=1$ if default: Protection seller pays $1-\\delta$ to buyer; buyer pays no premium.\n- CDS payoff at $t=1$ if survival: Protection buyer pays premium $c$ to seller; no protection payment.\n- Condition: The fair premium $c$ makes the time-$0$ value of the CDS equal to zero.\n- Required output: The value of $c$, as a decimal rounded to four significant figures.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientifically Grounded:** The problem is based on the fundamental principles of quantitative finance, specifically the theory of arbitrage-free pricing and the valuation of credit derivatives in a discrete-time, two-state model. These are standard and well-established concepts.\n- **Well-Posed:** The problem provides all necessary information to determine a unique value for the fair CDS premium, $c$. The market is described as complete, with two states and two traded assets (the risk-free asset and the risky bond), which allows for the derivation of a unique risk-neutral probability measure.\n- **Objective:** The problem is formulated in precise, objective, and unambiguous mathematical and financial language.\n\n**Step 3: Verdict and Action**\nThe problem is valid. It is scientifically grounded, well-posed, objective, and contains sufficient information for a unique solution. The following solution will be derived.\n\nThe fundamental principle of arbitrage-free pricing dictates that the price of any asset at time $t=0$ is its discounted expected payoff at a future time $t=1$, where the expectation is taken with respect to a risk-neutral probability measure. Let $q$ denote the risk-neutral probability of default, and thus $1-q$ is the risk-neutral probability of survival. The risk-free gross return is $R = 1+r = 1+0.04 = 1.04$.\n\nFirst, we use the price of the risky bond, $B_0$, to determine the risk-neutral probability $q$. The payoff of the bond at $t=1$ is $\\delta$ in the default state and $1$ in the survival state. The pricing equation is:\n$$B_0 = \\frac{1}{1+r} \\left[ q \\cdot \\delta + (1-q) \\cdot 1 \\right]$$\nSubstituting the given values:\n$$0.95 = \\frac{1}{1.04} \\left[ q \\cdot 0.35 + (1-q) \\right]$$\nMultiplying by $1.04$, we get:\n$$0.95 \\times 1.04 = 0.35q + 1 - q$$\n$$0.988 = 1 - 0.65q$$\nThis equation links the model parameters to the unknown risk-neutral probability $q$. We can solve for $q$, but it is more robust to solve for expressions involving $q$ that appear in the CDS pricing formula. From this equation, we can isolate two key terms:\n$$q(1-\\delta) = 0.65q = 1 - 0.988 = 0.012$$\n\nNext, we analyze the Credit Default Swap (CDS). The fair premium $c$ is defined such that the time-$0$ value of the contract, $V_{CDS}(0)$, is zero. The payoffs for the protection buyer at $t=1$ are:\n- In case of default (with risk-neutral probability $q$): a payment of $1-\\delta$ is received.\n- In case of survival (with risk-neutral probability $1-q$): a premium payment of $c$ is made, so the payoff is $-c$.\n\nThe time-$0$ value of the CDS is the discounted expected payoff:\n$$V_{CDS}(0) = \\frac{1}{1+r} \\left[ q \\cdot (1-\\delta) + (1-q) \\cdot (-c) \\right]$$\nSetting $V_{CDS}(0) = 0$ for a fair premium, and noting that $1+r \\neq 0$, we have:\n$$q(1-\\delta) - (1-q)c = 0$$\n$$c = \\frac{q(1-\\delta)}{1-q}$$\nWe have already found that $q(1-\\delta) = q(1-0.35) = 0.65q = 0.012$.\nWe now need an expression for $1-q$. From the bond pricing equation $0.988 = 1 - 0.65q$, we can express $q$ as:\n$$q = \\frac{0.012}{0.65}$$\nThen, $1-q$ is:\n$$1-q = 1 - \\frac{0.012}{0.65} = \\frac{0.65 - 0.012}{0.65} = \\frac{0.638}{0.65}$$\nNow we substitute these expressions for $q(1-\\delta)$ and $1-q$ into the formula for $c$:\n$$c = \\frac{q(1-\\delta)}{1-q} = \\frac{0.012}{\\frac{0.638}{0.65}}$$\n$$c = \\frac{0.012 \\times 0.65}{0.638} = \\frac{0.0078}{0.638}$$\nNow, we compute the numerical value:\n$$c \\approx 0.0122257053...$$\nThe problem requires the answer to be rounded to four significant figures. The first significant figure is $1$, so we round to the fifth decimal place.\n$$c \\approx 0.01223$$\nThis is the fair premium for the CDS.", "answer": "$$\\boxed{0.01223}$$"}, {"introduction": "Moving from a discrete-time model to a more realistic continuous framework, this exercise [@problem_id:2385463] introduces the reduced-form approach to credit risk. Here, default is treated as a random \"jump\" event governed by a constant intensity rate, $\\lambda$. You will calculate the fair premium for a hypothetical \"Power-CDS,\" which forces you to apply the first principles of continuous-time valuation by finding the present value of the expected protection and premium payments, rather than relying on a standard formula.", "id": "2385463", "problem": "Consider a hypothetical contract, a \"Power Credit Default Swap (Power-CDS),\" written on a single reference entity. Under the risk-neutral measure, assume the following setup.\n\n- The contract has maturity $T = 5$ years and unit notional.\n- The continuously compounded risk-free interest rate is constant at $r = 0.02$ per year.\n- The default time $\\tau$ of the reference entity has a constant hazard (intensity) rate $\\lambda = 0.05$ per year, so that the survival probability is $\\mathbb{Q}(\\tau > t) = \\exp(-\\lambda t)$ for $t \\ge 0$.\n- Upon default at time $\\tau \\le T$, the contract pays immediately the amount $(1 - R)^{2}$ per unit notional, where $R \\in [0,1]$ is the recovery rate.\n- The recovery rate $R$ is independent of $\\tau$ and has a Beta distribution with parameters $\\alpha = 4$ and $\\beta = 6$.\n- The premium leg pays continuously at a constant rate $S$ per year until default or maturity, whichever occurs first.\n\nFind the par annual premium rate $S$ (per unit notional) that makes the contract have zero value at inception, that is, the rate $S$ that equates the present value of the premium leg and the present value of the protection leg. Express your final answer as a decimal per year and round your result to four significant figures.", "solution": "The problem statement is subjected to validation.\n\nStep 1: Extract Givens\n- Contract Type: \"Power Credit Default Swap (Power-CDS)\" on a single reference entity.\n- Contract Maturity: $T = 5$ years.\n- Notional Amount: $1$ unit.\n- Risk-Free Interest Rate: $r = 0.02$ per year, continuously compounded.\n- Default Time: $\\tau$.\n- Default Intensity (Hazard Rate): $\\lambda = 0.05$ per year, constant.\n- Survival Probability: $\\mathbb{Q}(\\tau > t) = \\exp(-\\lambda t)$ for $t \\ge 0$.\n- Payout upon default at $\\tau \\le T$: $(1 - R)^2$ per unit notional.\n- Recovery Rate: $R \\in [0,1]$.\n- Independence: $R$ and $\\tau$ are independent random variables.\n- Distribution of $R$: Beta distribution with parameters $\\alpha = 4$ and $\\beta = 6$.\n- Premium Leg: Continuous payment at a constant rate $S$ per year until $\\min(\\tau, T)$.\n- Objective: Find the par annual premium rate $S$ such that the value of the contract at inception is zero.\n- Output Format: Decimal, rounded to four significant figures.\n\nStep 2: Validate Using Extracted Givens\nThe problem is set within the standard risk-neutral pricing framework of mathematical finance. All components are well-defined.\n- **Scientific Grounding**: The model is a reduced-form credit risk model with a constant intensity, a standard textbook case (e.g., Jarrow-Turnbull model). The stochastic recovery rate following a Beta distribution is a common and reasonable extension. The \"Power-CDS\" is a non-standard but mathematically tractable derivative. The problem is scientifically grounded in established financial mathematics.\n- **Well-Posed**: All parameters required for the calculation ($T$, $r$, $\\lambda$, $\\alpha$, $\\beta$) are explicitly given. The objective is clear: to find the rate $S$ that equates the present values of two cash flow streams. A unique solution exists and is derivable. The problem is well-posed.\n- **Objective**: The problem is stated in precise, objective mathematical terms, free of ambiguity or subjective claims.\n\nStep 3: Verdict and Action\nThe problem is valid. A solution will be derived.\n\nThe par spread $S$ is the rate that equates the present value of the premium leg ($PV_{premium}$) and the present value of the protection leg ($PV_{protection}$). The valuation is performed under the risk-neutral measure $\\mathbb{Q}$.\nThe condition is $PV_{protection} = PV_{premium}$.\n\nFirst, we determine the present value of the protection leg, $PV_{protection}$. This is the risk-neutral expectation of the discounted payout. The payout of $(1-R)^2$ is made at the time of default $\\tau$, provided $\\tau \\le T$.\n$$\nPV_{protection} = \\mathbb{E}^{\\mathbb{Q}} \\left[ (1 - R)^2 e^{-r\\tau} \\mathbb{1}_{\\{\\tau \\le T\\}} \\right]\n$$\nGiven that the recovery rate $R$ and the default time $\\tau$ are independent, the expectation can be separated:\n$$\nPV_{protection} = \\mathbb{E}^{\\mathbb{Q}} \\left[ (1 - R)^2 \\right] \\cdot \\mathbb{E}^{\\mathbb{Q}} \\left[ e^{-r\\tau} \\mathbb{1}_{\\{\\tau \\le T\\}} \\right]\n$$\nThe first term, $\\mathbb{E}^{\\mathbb{Q}}[(1-R)^2]$, is computed using the properties of the Beta distribution. For a random variable $X \\sim \\text{Beta}(\\alpha, \\beta)$, the moments are known.\n$$\n\\mathbb{E}^{\\mathbb{Q}}[(1-R)^2] = \\mathbb{E}^{\\mathbb{Q}}[1 - 2R + R^2] = 1 - 2\\mathbb{E}^{\\mathbb{Q}}[R] + \\mathbb{E}^{\\mathbb{Q}}[R^2]\n$$\nThe first and second moments of the Beta distribution are:\n$$\n\\mathbb{E}^{\\mathbb{Q}}[R] = \\frac{\\alpha}{\\alpha + \\beta}\n$$\n$$\n\\mathbb{E}^{\\mathbb{Q}}[R^2] = \\frac{\\alpha(\\alpha+1)}{(\\alpha+\\beta)(\\alpha+\\beta+1)}\n$$\nSubstituting the given parameters $\\alpha = 4$ and $\\beta = 6$:\n$$\n\\mathbb{E}^{\\mathbb{Q}}[R] = \\frac{4}{4+6} = \\frac{4}{10} = \\frac{2}{5}\n$$\n$$\n\\mathbb{E}^{\\mathbb{Q}}[R^2] = \\frac{4(4+1)}{(4+6)(4+6+1)} = \\frac{4 \\cdot 5}{10 \\cdot 11} = \\frac{20}{110} = \\frac{2}{11}\n$$\nTherefore, the expected squared loss given default is:\n$$\n\\mathbb{E}^{\\mathbb{Q}}[(1-R)^2] = 1 - 2\\left(\\frac{2}{5}\\right) + \\frac{2}{11} = 1 - \\frac{4}{5} + \\frac{2}{11} = \\frac{1}{5} + \\frac{2}{11} = \\frac{11 + 10}{55} = \\frac{21}{55}\n$$\nThe second term in the $PV_{protection}$ expression, $\\mathbb{E}^{\\mathbb{Q}}[e^{-r\\tau} \\mathbb{1}_{\\{\\tau \\le T\\}}]$, is calculated by integrating against the default time probability density function, $f(t) = \\lambda e^{-\\lambda t}$ for $t \\ge 0$.\n$$\n\\mathbb{E}^{\\mathbb{Q}}[e^{-r\\tau} \\mathbb{1}_{\\{\\tau \\le T\\}}] = \\int_0^T e^{-rt} f(t) \\,dt = \\int_0^T e^{-rt} \\lambda e^{-\\lambda t} \\,dt = \\lambda \\int_0^T e^{-(r+\\lambda)t} \\,dt\n$$\n$$\n\\lambda \\int_0^T e^{-(r+\\lambda)t} \\,dt = \\lambda \\left[ \\frac{e^{-(r+\\lambda)t}}{-(r+\\lambda)} \\right]_0^T = \\frac{\\lambda}{r+\\lambda} \\left( 1 - e^{-(r+\\lambda)T} \\right)\n$$\nCombining the terms, the full expression for the protection leg is:\n$$\nPV_{protection} = \\frac{21}{55} \\cdot \\frac{\\lambda}{r+\\lambda} \\left( 1 - e^{-(r+\\lambda)T} \\right)\n$$\n\nNext, we determine the present value of the premium leg, $PV_{premium}$. This is the present value of the continuous payment of $S$ until the time of default $\\tau$ or maturity $T$, whichever occurs first. This is equivalent to integrating the discounted payment rate over time, weighted by the probability of survival up to that time.\n$$\nPV_{premium} = \\mathbb{E}^{\\mathbb{Q}} \\left[ \\int_0^{\\min(\\tau, T)} S e^{-rt} \\,dt \\right] = S \\int_0^T e^{-rt} \\mathbb{Q}(\\tau > t) \\,dt\n$$\nSubstituting the survival probability $\\mathbb{Q}(\\tau > t) = e^{-\\lambda t}$:\n$$\nPV_{premium} = S \\int_0^T e^{-rt} e^{-\\lambda t} \\,dt = S \\int_0^T e^{-(r+\\lambda)t} \\,dt\n$$\nThis integral is recognized from the previous calculation:\n$$\nPV_{premium} = S \\left( \\frac{1 - e^{-(r+\\lambda)T}}{r+\\lambda} \\right)\n$$\nThis term is often called a \"risky annuity.\"\n\nTo find the par spread $S$, we set $PV_{premium} = PV_{protection}$:\n$$\nS \\left( \\frac{1 - e^{-(r+\\lambda)T}}{r+\\lambda} \\right) = \\frac{21}{55} \\cdot \\frac{\\lambda}{r+\\lambda} \\left( 1 - e^{-(r+\\lambda)T} \\right)\n$$\nAssuming $T > 0$, the term $\\frac{1 - e^{-(r+\\lambda)T}}{r+\\lambda}$ is non-zero and cancels from both sides. This yields a remarkably simple expression for the spread:\n$$\nS = \\lambda \\cdot \\mathbb{E}^{\\mathbb{Q}}[(1-R)^2]\n$$\nThis result is intuitive: the premium rate must equal the expected loss rate. The expected loss rate is the product of the default arrival rate ($\\lambda$) and the expected loss given default (which for this contract is $\\mathbb{E}^{\\mathbb{Q}}[(1-R)^2]$). The interest rate $r$ and maturity $T$ do not affect the par spread in this constant-intensity model with immediate payout.\n\nNow, we substitute the numerical values:\n$\\lambda = 0.05$\n$\\mathbb{E}^{\\mathbb{Q}}[(1-R)^2] = \\frac{21}{55}$\n$$\nS = 0.05 \\cdot \\frac{21}{55} = \\frac{5}{100} \\cdot \\frac{21}{55} = \\frac{1}{20} \\cdot \\frac{21}{55} = \\frac{21}{1100}\n$$\nTo express this as a decimal, we perform the division:\n$$\nS = \\frac{21}{1100} \\approx 0.01909090...\n$$\nThe problem requires the answer to be rounded to four significant figures. The first significant figure is $1$. The subsequent figures are $9$, $0$, $9$. The fifth significant figure is $0$, so we do not round up.\n$$\nS \\approx 0.01909\n$$\nThis is the par annual premium rate per unit notional.", "answer": "$$\n\\boxed{0.01909}\n$$"}, {"introduction": "Our final practice [@problem_id:2425452] elevates our analysis to the level of modern quantitative finance, where the default risk itself is dynamic. You will work with a sophisticated affine model where the default intensity, $\\lambda_t$, follows a mean-reverting stochastic process. This capstone exercise goes beyond mere pricing and tasks you with *calibrating* the model's parameters to a given term structure of CDS spreads, a core activity for quantitative analysts that bridges the gap between financial theory and market data.", "id": "2425452", "problem": "You are tasked with building a complete, runnable program that calibrates an affine reduced-form default intensity model to synthetic Credit Default Swap (CDS) data. The model is specified as follows. The default intensity is given by $\\lambda_t = Y_t + \\psi$, where $Y_t$ follows an Ornstein–Uhlenbeck (OU) process under the risk-neutral measure:\n$$\ndY_t = \\kappa \\left( \\theta - Y_t \\right) dt + \\sigma \\, dW_t,\n$$\nwith $\\kappa &gt; 0$, $\\sigma \\ge 0$, $\\theta \\in \\mathbb{R}$, and $Y_0 \\in \\mathbb{R}$. The affine offset $\\psi \\in \\mathbb{R}$ is a constant parameter. The CDS is priced under the reduced-form approach with a continuous premium approximation, constant risk-free interest rate $r \\ge 0$, fractional Loss Given Default (LGD) in $(0,1]$, and protection maturity $T &gt; 0$.\n\nBegin from the following foundational base without invoking any unproven shortcuts:\n- The Ornstein–Uhlenbeck stochastic differential equation and its well-known Gaussianity.\n- The survival probability definition $S(t) = \\mathbb{E}\\left[ \\exp\\left( - \\int_0^t \\lambda_s \\, ds \\right) \\right]$.\n- The continuous-premium fair CDS spread $s^{\\star}(T)$ solves the equation that equates the present value of the default leg and the present value of the premium leg,\n$$\ns^{\\star}(T) \\int_0^T e^{- r t} S(t) \\, dt = \\mathrm{LGD} \\int_0^T e^{- r t} \\left( - \\frac{dS(t)}{dt} \\right) dt.\n$$\n\nYour program must:\n- Derive and implement the survival probability $S(t)$ implied by the model given $Y_0$, $\\kappa$, $\\theta$, $\\sigma$, and $\\psi$.\n- Use $S(t)$ to compute the continuous-premium fair CDS par spread $s^{\\star}(T)$ for each quoted maturity $T$, given constant $r$ and fractional $\\mathrm{LGD}$, via the integral equation above. If needed, you may use numerical quadrature. No discrete accrual conventions should be used; assume the continuous-premium approximation exclusively.\n- Calibrate the unknown parameters $\\psi$ and $\\theta$ by minimizing the sum of squared errors between model-implied par spreads and the provided synthetic quotes across maturities for each dataset. Use a least-squares criterion and impose simple, reasonable bounds that guarantee well-posedness for the optimizer. You should treat $(\\kappa,\\sigma,r,\\mathrm{LGD},Y_0)$ as known inputs for each dataset.\n\nImportant units and conventions:\n- All rates (including $\\kappa$, $\\theta$, $\\sigma$, $Y_0$, $\\psi$, $r$, and CDS par spreads) must be treated as “per year” in decimal form (for example, $0.02$ means “two percent per year”).\n- There are no angles or physical units in this task.\n- Report all outputs as decimals.\n\nTest suite to implement and cover in your code (for each case below, generate synthetic CDS quotes by first computing model-implied par spreads $s^{\\star}(T)$ at the stated maturities using the “true” parameters, then calibrate $\\psi$ and $\\theta$ back from those quotes, treating $\\kappa$, $\\sigma$, $Y_0$, $r$, and $\\mathrm{LGD}$ as known):\n\n- Case A (happy path, moderate mean reversion and volatility):\n  - Known inputs: $\\kappa = 1.0$, $\\sigma = 0.1$, $Y_0 = 0.02$, $r = 0.02$, $\\mathrm{LGD} = 0.6$, maturities $T \\in \\{ 1.0, 3.0, 5.0 \\}$ years.\n  - True parameters for data generation: $\\theta_{\\text{true}} = 0.015$, $\\psi_{\\text{true}} = 0.01$.\n\n- Case B (boundary condition with deterministic intensity component, $\\sigma = 0$):\n  - Known inputs: $\\kappa = 0.7$, $\\sigma = 0.0$, $Y_0 = 0.03$, $r = 0.01$, $\\mathrm{LGD} = 0.6$, maturities $T \\in \\{ 1.0, 2.0, 4.0 \\}$ years.\n  - True parameters for data generation: $\\theta_{\\text{true}} = 0.03$, $\\psi_{\\text{true}} = 0.005$.\n\n- Case C (fast mean reversion, higher offset):\n  - Known inputs: $\\kappa = 3.0$, $\\sigma = 0.2$, $Y_0 = 0.01$, $r = 0.015$, $\\mathrm{LGD} = 0.6$, maturities $T \\in \\{ 2.0, 5.0, 7.0 \\}$ years.\n  - True parameters for data generation: $\\theta_{\\text{true}} = 0.012$, $\\psi_{\\text{true}} = 0.02$.\n\nAlgorithmic requirements:\n- For each case, first compute synthetic quotes using the true parameters. Then, using those quotes alone, calibrate $\\psi$ and $\\theta$ via least squares subject to simple bounds that keep $\\psi$ strictly positive and $\\theta$ within a wide, plausible interval. Use robust numerical integration for all needed integrals.\n- Output formatting: Your program should produce a single line of output containing a flat list of calibrated parameters ordered as\n$$\n[\\psi_A, \\theta_A, \\psi_B, \\theta_B, \\psi_C, \\theta_C],\n$$\nwhere the subscript denotes the case. Round each value to $6$ decimal places. For example, an acceptable format is $[0.010000,0.015000,0.005000,0.030000,0.020000,0.012000]$.\n\nYour implementation must be self-contained, require no user input, and not access any external resources. The final printed line must match the exact format described above. All quantities must be computed in per-year decimals.", "solution": "The problem statement is subjected to validation and is found to be valid. It is scientifically grounded in the principles of quantitative finance, specifically affine term structure models. The model, an Ornstein-Uhlenbeck process driving a default intensity, is a standard construct (a Vasicek-type model). The problem is well-posed, providing sufficient information for a unique solution via numerical calibration, and is free from ambiguity or contradiction. It represents a standard exercise in computational finance.\n\nThe solution proceeds in three principal stages: first, the derivation of the survival probability function; second, the formulation of the Credit Default Swap (CDS) spread calculation; and third, the specification of the numerical calibration procedure.\n\n### 1. Survival Probability Derivation\n\nThe default intensity is given by the affine process $\\lambda_t = Y_t + \\psi$, where $Y_t$ follows the Ornstein-Uhlenbeck (OU) process under the risk-neutral measure $\\mathbb{Q}$:\n$$\ndY_t = \\kappa (\\theta - Y_t) dt + \\sigma dW_t\n$$\nwith initial condition $Y_0$. The parameters $\\kappa$, $\\theta$, $\\sigma$, and $\\psi$ are constants.\n\nThe survival probability $S(t)$ until time $t$ is defined as the risk-neutral expectation of the discount factor associated with the cumulative default intensity:\n$$\nS(t) = \\mathbb{E}^{\\mathbb{Q}} \\left[ \\exp\\left( - \\int_0^t \\lambda_s ds \\right) \\bigg| \\mathcal{F}_0 \\right]\n$$\nSubstituting $\\lambda_s = Y_s + \\psi$ and using the linearity of the integral yields:\n$$\nS(t) = \\mathbb{E}^{\\mathbb{Q}} \\left[ \\exp\\left( - \\int_0^t (Y_s + \\psi) ds \\right) \\right] = \\exp(-\\psi t) \\mathbb{E}^{\\mathbb{Q}} \\left[ \\exp\\left( - \\int_0^t Y_s ds \\right) \\right]\n$$\nThe expectation term is a standard result for affine processes. For an OU process as defined for $Y_t$, the expectation is known to have an exponentially affine form in the initial state $Y_0$:\n$$\n\\mathbb{E}^{\\mathbb{Q}} \\left[ \\exp\\left( - \\int_0^t Y_s ds \\right) \\right] = \\exp\\left( A(t) - B(t)Y_0 \\right)\n$$\nwhere $A(t)$ and $B(t)$ are deterministic functions of time. These functions solve a system of ordinary differential equations derived from the Feynman-Kac theorem. The standard solutions are:\n$$\nB(t) = \\frac{1}{\\kappa} \\left( 1 - e^{-\\kappa t} \\right)\n$$\nand\n$$\nA(t) = \\left( \\theta - \\frac{\\sigma^2}{2\\kappa^2} \\right) [B(t) - t] - \\frac{\\sigma^2}{4\\kappa} B(t)^2\n$$\nThis formulation for $A(t)$ and $B(t)$ is robust and holds even for the case $\\sigma = 0$, where the model becomes deterministic. The case $\\kappa \\to 0$ represents a different process (Brownian motion) and is not covered here, as the problem specifies $\\kappa > 0$.\n\nCombining these results, the survival probability $S(t)$ is given by the following analytical expression:\n$$\nS(t) = \\exp \\left( -\\psi t + A(t) - B(t)Y_0 \\right)\n$$\n\n### 2. CDS Spread Calculation\n\nThe fair par spread for a continuous-premium CDS, denoted $s^{\\star}(T)$, is defined by the equation equating the present value (PV) of the premium leg and the PV of the default leg:\n$$\ns^{\\star}(T) \\int_0^T e^{-rt} S(t) dt = \\mathrm{LGD} \\int_0^T e^{-rt} \\left( -\\frac{dS(t)}{dt} \\right) dt\n$$\nwhere $r$ is the constant risk-free rate and $\\mathrm{LGD}$ is the fractional Loss Given Default.\n\nLet the PV of the premium leg be $PL(T) = \\int_0^T e^{-rt} S(t) dt$. The integral on the right-hand side, representing the PV of the LGD-scaled default probability density, can be simplified using integration by parts. Let $u = e^{-rt}$ and $dv = -S'(t)dt$. Then $du = -re^{-rt}dt$ and $v = S(t)$.\n$$\n\\int_0^T e^{-rt}(-S'(t))dt = \\left[ e^{-rt}S(t) \\right]_0^T - \\int_0^T S(t)(-re^{-rt})dt\n$$\n$$\n= \\left( e^{-rT}S(T) - S(0) \\right) + r \\int_0^T e^{-rt}S(t)dt\n$$\nSince $S(0) = 1$ (survival probability at time zero is unity), this becomes:\n$$\n\\int_0^T e^{-rt}(-S'(t))dt = e^{-rT}S(T) - 1 + r \\cdot PL(T)\n$$\nWait, this is an error in derivation. Re-evaluating the integration by parts:\nLet $u = e^{-rt}$ and $dv = -S'(t)dt$. The integral is $\\int u \\, dv$.\nBy parts: $\\int u \\, dv = uv - \\int v \\, du$.\n$uv = e^{-rt}(-S(t))$. Thus $[uv]_0^T = -e^{-rT}S(T) - (-e^0 S(0)) = 1-e^{-rT}S(T)$.\n$\\int v \\, du = \\int_0^T (-S(t))(-re^{-rt})dt = r \\int_0^T e^{-rt}S(t)dt = r \\cdot PL(T)$.\nTherefore, the correct expression for the default leg integral is:\n$$\n\\int_0^T e^{-rt}(-S'(t))dt = 1 - e^{-rT}S(T) - r \\cdot PL(T)\n$$\nThis expression is more stable numerically as it avoids differentiation of $S(t)$.\n\nThe fair spread $s^{\\star}(T)$ is then found by solving for it:\n$$\ns^{\\star}(T) = \\mathrm{LGD} \\frac{1 - e^{-rT}S(T) - r \\cdot PL(T)}{PL(T)}\n$$\nThe integral for $PL(T)$ does not have a closed-form solution and must be computed via numerical quadrature.\n\n### 3. Calibration Procedure\n\nThe goal is to calibrate the parameters $\\mathbf{p} = (\\psi, \\theta)$ by minimizing the sum of squared differences between the model-implied spreads, $s^{\\star}_{\\text{model}}(T_i; \\mathbf{p})$, and the synthetically generated market quotes, $s^{\\text{quote}}_i$, across a set of maturities $\\{T_i\\}_{i=1}^N$.\n\nThe objective function to minimize is:\n$$\nJ(\\psi, \\theta) = \\sum_{i=1}^N \\left( s^{\\star}_{\\text{model}}(T_i; \\psi, \\theta) - s^{\\text{quote}}_i \\right)^2\n$$\nThe known parameters for each calibration are $(\\kappa, \\sigma, Y_0, r, \\mathrm{LGD})$. This is a non-linear least-squares problem. It will be solved using a quasi-Newton optimization algorithm (specifically L-BFGS-B, which handles box constraints) subject to bounds on the parameters. As specified, we will impose $\\psi > 0$ and constrain $\\theta$ to a wide, reasonable interval to ensure the stability and financial sensibility of the solution.\n\nThe overall algorithm for each test case is as follows:\n1.  Using the \"true\" parameters $(\\psi_{\\text{true}}, \\theta_{\\text{true}})$ and the other knowns for the case, compute the synthetic CDS quotes $s^{\\text{quote}}_i$ for each maturity $T_i$ by implementing the spread formula derived above.\n2.  Define the objective function $J(\\psi, \\theta)$ which takes candidate parameters, computes the corresponding model spreads, and returns the sum of squared errors against the synthetic quotes.\n3.  Use an optimization routine (`scipy.optimize.minimize`) with an initial guess and predefined bounds to find the parameter vector $(\\hat{\\psi}, \\hat{\\theta})$ that minimizes $J$.\n4.  The resulting pair $(\\hat{\\psi}, \\hat{\\theta})$ constitutes the calibrated parameters for that case. This process is repeated for all specified test cases.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import quad\nfrom scipy.optimize import minimize\n\ndef B_func(t, kappa):\n    \"\"\"\n    Calculates the B(t) function for the affine model.\n    B(t) = (1/kappa) * (1 - exp(-kappa * t))\n    \"\"\"\n    if np.isclose(kappa, 0.0):\n        # Taylor expansion for small kappa: (1 - (1 - kt + (kt)^2/2)) / k = t - kt^2/2 -> t\n        return t\n    return (1.0 - np.exp(-kappa * t)) / kappa\n\ndef A_func(t, kappa, theta, sigma):\n    \"\"\"\n    Calculates the A(t) function for the affine model.\n    A(t) = (theta - sigma^2/(2*kappa^2)) * [B(t) - t] - (sigma^2 / (4*kappa)) * B(t)^2\n    \"\"\"\n    if np.isclose(kappa, 0.0):\n        # Limit for kappa -> 0 with dY_t = sigma * dW_t\n        # This case is not required by problem spec (kappa>0) but good for robustness.\n        # Direct derivation gives A(t) = sigma^2 * t^3 / 6\n        return sigma**2 * t**3 / 6.0\n        \n    b_val = B_func(t, kappa)\n    \n    # This calculation can be unstable if kappa is very small.\n    # Grouping terms to improve stability. theta * (B(t) - t) is one part.\n    # The sigma part: sigma^2 * [ - (B(t)-t)/(2k^2) - B(t)^2/(4k) ]\n    # = sigma^2 * [ (t-B(t))/(2k^2) - B(t)^2/(4k) ]\n    # = sigma^2/(4k^3) * [ 2k(t-B(t)) - k^2 B(t)^2 ]\n    # 2k(t-B(t)) = 2k(t - (1-e^-kt)/k) = 2kt - 2 + 2e^-kt\n    # k^2 B(t)^2 = (1-e^-kt)^2 = 1 - 2e^-kt + e^-2kt\n    # sum = 2kt - 3 + 4e^-kt - e^-2kt\n    # So A(t) = theta(B(t)-t) + sigma^2/(4k^3) * (2kt - 3 + 4e^-kt - e^-2kt)\n    # The standard form is generally stable enough for kappa values not extremely close to 0.\n    term1_factor = theta - (sigma**2) / (2.0 * kappa**2)\n    term1 = term1_factor * (b_val - t)\n    term2 = -(sigma**2) / (4.0 * kappa) * b_val**2\n    return term1 + term2\n\ndef survival_prob(t, Y0, kappa, theta, sigma, psi):\n    \"\"\"\n    Calculates the survival probability S(t) given model parameters.\n    S(t) = exp(-psi*t + A(t) - B(t)*Y0)\n    \"\"\"\n    if t < 1e-9:  # Survival probability at t=0 is 1.\n        return 1.0\n\n    a_val = A_func(t, kappa, theta, sigma)\n    b_val = B_func(t, kappa)\n    \n    exponent = -psi * t + a_val - b_val * Y0\n    return np.exp(exponent)\n\ndef calculate_spread(T_maturity, Y0, kappa, theta, sigma, psi, r, LGD):\n    \"\"\"\n    Calculates the fair CDS par spread s*(T) for a given maturity.\n    \"\"\"\n    # Integrand for the premium leg PV\n    integrand_pl = lambda t: np.exp(-r * t) * survival_prob(t, Y0, kappa, theta, sigma, psi)\n    \n    # Calculate premium leg PV using numerical quadrature\n    pl_pv, quad_err = quad(integrand_pl, 0, T_maturity, epsabs=1e-9, epsrel=1e-9)\n    \n    if pl_pv < 1e-12:\n        return np.inf  # Avoid division by zero\n        \n    s_T = survival_prob(T_maturity, Y0, kappa, theta, sigma, psi)\n    \n    # PV of default leg per unit of LGD, derived using integration by parts\n    dl_pv_per_lgd = 1.0 - np.exp(-r * T_maturity) * s_T - r * pl_pv\n    \n    spread = LGD * dl_pv_per_lgd / pl_pv\n    return spread\n\ndef solve():\n    \"\"\"\n    Main function to run test cases, calibrate parameters, and print results.\n    \"\"\"\n    test_cases = [\n        {\n            \"name\": \"Case A\",\n            \"knowns\": {\"kappa\": 1.0, \"sigma\": 0.1, \"Y0\": 0.02, \"r\": 0.02, \"LGD\": 0.6},\n            \"maturities\": [1.0, 3.0, 5.0],\n            \"true_params\": {\"theta\": 0.015, \"psi\": 0.01},\n        },\n        {\n            \"name\": \"Case B\",\n            \"knowns\": {\"kappa\": 0.7, \"sigma\": 0.0, \"Y0\": 0.03, \"r\": 0.01, \"LGD\": 0.6},\n            \"maturities\": [1.0, 2.0, 4.0],\n            \"true_params\": {\"theta\": 0.03, \"psi\": 0.005},\n        },\n        {\n            \"name\": \"Case C\",\n            \"knowns\": {\"kappa\": 3.0, \"sigma\": 0.2, \"Y0\": 0.01, \"r\": 0.015, \"LGD\": 0.6},\n            \"maturities\": [2.0, 5.0, 7.0],\n            \"true_params\": {\"theta\": 0.012, \"psi\": 0.02},\n        },\n    ]\n\n    all_results = []\n    \n    for case in test_cases:\n        knowns = case[\"knowns\"]\n        true_params = case[\"true_params\"]\n        maturities = case[\"maturities\"]\n\n        # Step 1: Generate synthetic CDS quotes using the true parameters\n        synthetic_quotes = [\n            calculate_spread(\n                T_maturity=T,\n                Y0=knowns[\"Y0\"],\n                kappa=knowns[\"kappa\"],\n                theta=true_params[\"theta\"],\n                sigma=knowns[\"sigma\"],\n                psi=true_params[\"psi\"],\n                r=knowns[\"r\"],\n                LGD=knowns[\"LGD\"],\n            ) for T in maturities\n        ]\n\n        # Step 2: Define the objective function for calibration\n        def objective_function(params):\n            psi_cal, theta_cal = params\n            \n            # Simple check for parameter validity\n            if psi_cal <= 0:\n                return 1e9 # Return a large number if parameters are out of bounds\n\n            model_spreads = [\n                calculate_spread(\n                    T_maturity=T,\n                    Y0=knowns[\"Y0\"],\n                    kappa=knowns[\"kappa\"],\n                    theta=theta_cal,\n                    sigma=knowns[\"sigma\"],\n                    psi=psi_cal,\n                    r=knowns[\"r\"],\n                    LGD=knowns[\"LGD\"],\n                ) for T in maturities\n            ]\n            \n            error = np.sum((np.array(model_spreads) - np.array(synthetic_quotes))**2)\n            return error\n\n        # Step 3: Calibrate parameters using least squares minimization\n        initial_guess = [0.01, 0.01]  # Generic initial guess\n        bounds = [(1e-7, 0.5), (-0.1, 0.5)] # Bounds: psi > 0, theta in a wide range\n\n        result = minimize(\n            objective_function,\n            initial_guess,\n            method='L-BFGS-B',\n            bounds=bounds,\n            options={'ftol': 1e-12, 'gtol': 1e-12}\n        )\n        \n        calibrated_psi, calibrated_theta = result.x\n        all_results.extend([calibrated_psi, calibrated_theta])\n\n    # Final print statement in the exact required format.\n    formatted_results = [f\"{val:.6f}\" for val in all_results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```"}]}