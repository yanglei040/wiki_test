{"hands_on_practices": [{"introduction": "Transitioning from theory to practice often involves making reasoned judgments, and structural models are no exception. This exercise will guide you through implementing the core Merton model to calculate a firm's probability of default. More importantly, it highlights how the practical definition of the default barrier, $F$—which can be interpreted in several ways from a real-world balance sheet—significantly impacts the resulting risk assessment, a critical concept known as model sensitivity. [@problem_id:2435090]", "id": "2435090", "problem": "Consider a firm whose total asset value process $\\{V_t\\}_{t \\in [0,T]}$ evolves under the risk-neutral measure as a geometric Brownian motion satisfying the stochastic differential equation $\\mathrm{d}V_t = (r - q) V_t \\, \\mathrm{d}t + \\sigma V_t \\, \\mathrm{d}W_t$, where $V_0 > 0$ is known, $r \\ge 0$ is the continuously compounded risk-free rate, $q \\ge 0$ is the continuous payout yield on assets, $\\sigma > 0$ is the asset volatility, and $T > 0$ is the time horizon (in years). In the structural model of default due to Merton, default occurs if and only if $V_T < F$, where $F > 0$ is a face-value-like default threshold associated with the firm’s debt.\n\nYour task is to compute, for several parameter sets, the risk-neutral default probability at horizon $T$ under different common heuristics for defining $F$, and to quantify the sensitivity of the computed default probability to the choice of heuristic. For each parameter set, you are given the following inputs: $V_0$, $\\sigma$, $r$, $q$, $T$, short-term (current) interest-bearing debt $D_S$, long-term interest-bearing debt $D_L$, total liabilities $L$, and cash and equivalents $C$. You must evaluate the following four heuristics for $F$:\n\n- Heuristic $\\mathrm{H1}$ (half long-term debt): $F_1 = D_S + 0.5 \\, D_L$.\n- Heuristic $\\mathrm{H2}$ (all interest-bearing debt): $F_2 = D_S + D_L$.\n- Heuristic $\\mathrm{H3}$ (total liabilities): $F_3 = L$.\n- Heuristic $\\mathrm{H4}$ (net debt with floor): $F_4 = \\max\\{ D_S + D_L - C, \\, 1 \\}$, where the floor of $1$ ensures strict positivity.\n\nFor each heuristic $\\mathrm{Hi}$, compute the risk-neutral default probability $p_i = \\mathbb{Q}(V_T < F_i)$ implied by the model. Then compute the following sensitivity metrics across the four $p_i$ values:\n- The absolute range $R_{\\mathrm{abs}} = \\max_i p_i - \\min_i p_i$.\n- The relative range $R_{\\mathrm{rel}} = R_{\\mathrm{abs}} / \\overline{p}$, where $\\overline{p}$ is the arithmetic mean of $\\{p_1, p_2, p_3, p_4\\}$.\n\nAll probabilities and sensitivity metrics must be expressed as decimals (not as percentages).\n\nUse the following test suite of parameter sets. Each test case is a tuple $(V_0,\\sigma,r,q,T,D_S,D_L,L,C)$:\n\n- Case $\\#1$: $(200.0, \\, 0.25, \\, 0.02, \\, 0.00, \\, 1.0, \\, 30.0, \\, 70.0, \\, 120.0, \\, 20.0)$.\n- Case $\\#2$: $(120.0, \\, 0.30, \\, 0.03, \\, 0.01, \\, 1.0, \\, 40.0, \\, 100.0, \\, 180.0, \\, 10.0)$.\n- Case $\\#3$: $(90.0, \\, 0.20, \\, 0.01, \\, 0.00, \\, 0.5, \\, 50.0, \\, 80.0, \\, 150.0, \\, 5.0)$.\n- Case $\\#4$: $(150.0, \\, 0.15, \\, 0.02, \\, 0.00, \\, 2.0, \\, 10.0, \\, 20.0, \\, 60.0, \\, 50.0)$.\n\nFor each case, your program must output a list of six floats ordered as $[p_1, \\, p_2, \\, p_3, \\, p_4, \\, R_{\\mathrm{abs}}, \\, R_{\\mathrm{rel}}]$, where each float is rounded to $6$ decimals.\n\nFinal output format: Your program should produce a single line of output containing the results for all cases as a list of lists. The outer list must contain exactly $4$ inner lists, each corresponding to a case in the order given above, and each inner list must contain exactly $6$ floats rounded to $6$ decimals. For example, the printed line must look like $[[x_{11},x_{12},\\dots,x_{16}],[x_{21},\\dots,x_{26}],[x_{31},\\dots,x_{36}],[x_{41},\\dots,x_{46}]]$ with no extra whitespace or text.", "solution": "The problem requires the computation of risk-neutral default probabilities under the Merton model framework for several heuristics defining the default barrier, and an analysis of the sensitivity of these probabilities to the choice of heuristic. The problem is well-posed, scientifically grounded in established financial theory, and provides all necessary data for a unique solution.\n\nThe value of the firm's assets, $V_t$, is modeled as a geometric Brownian motion under the risk-neutral measure $\\mathbb{Q}$:\n$$\n\\mathrm{d}V_t = (r - q) V_t \\, \\mathrm{d}t + \\sigma V_t \\, \\mathrm{d}W_t\n$$\nwhere $r$ is the risk-free rate, $q$ is the continuous dividend yield, $\\sigma$ is the asset volatility, and $W_t$ is a standard Wiener process. The solution to this stochastic differential equation for the asset value at time $T$, given an initial value $V_0$, is\n$$\nV_T = V_0 \\exp\\left( \\left(r - q - \\frac{1}{2}\\sigma^2\\right)T + \\sigma W_T \\right)\n$$\nwhere $W_T = \\sqrt{T}Z$ and $Z$ is a standard normal random variable, $Z \\sim N(0, 1)$. This implies that $\\ln(V_T)$ is normally distributed with mean $\\mu = \\ln(V_0) + (r - q - \\frac{1}{2}\\sigma^2)T$ and variance $\\sigma^2 T$.\n\nDefault occurs if the asset value at maturity $T$ falls below a certain default threshold, $F$. The risk-neutral probability of default, $p$, is therefore given by $\\mathbb{Q}(V_T < F)$. To compute this probability, we standardize the log-normal variable:\n$$\n\\begin{aligned}\np = \\mathbb{Q}(V_T < F) &= \\mathbb{Q}(\\ln(V_T) < \\ln(F)) \\\\\n&= \\mathbb{Q}\\left(\\frac{\\ln(V_T) - \\mu}{\\sigma\\sqrt{T}} < \\frac{\\ln(F) - \\mu}{\\sigma\\sqrt{T}}\\right) \\\\\n&= \\mathbb{Q}\\left(Z < \\frac{\\ln(F) - \\left(\\ln(V_0) + \\left(r - q - \\frac{1}{2}\\sigma^2\\right)T\\right)}{\\sigma\\sqrt{T}}\\right) \\\\\n&= \\mathbb{Q}\\left(Z < \\frac{\\ln(F/V_0) - \\left(r - q - \\frac{1}{2}\\sigma^2\\right)T}{\\sigma\\sqrt{T}}\\right)\n\\end{aligned}\n$$\nThis probability is evaluated using the cumulative distribution function (CDF) of the standard normal distribution, denoted by $\\Phi(\\cdot)$. The argument of $\\Phi$ is commonly recognized in option pricing theory as the negative of the Black-Scholes $d_2$ parameter. Let us define $d_2$ as:\n$$\nd_2 = \\frac{\\ln(V_0/F) + \\left(r - q - \\frac{1}{2}\\sigma^2\\right)T}{\\sigma\\sqrt{T}}\n$$\nThe default probability is then given by $p = \\Phi(-d_2)$.\n\nThe problem specifies four heuristics for defining the default threshold $F$ based on balance sheet data: short-term debt $D_S$, long-term debt $D_L$, total liabilities $L$, and cash $C$. For each heuristic $\\mathrm{Hi}$, we calculate a threshold $F_i$ and the corresponding default probability $p_i$.\n\n- Heuristic $\\mathrm{H1}$: $F_1 = D_S + 0.5 D_L$. The default probability is $p_1 = \\Phi(-d_{2,1})$.\n- Heuristic $\\mathrm{H2}$: $F_2 = D_S + D_L$. The default probability is $p_2 = \\Phi(-d_{2,2})$.\n- Heuristic $\\mathrm{H3}$: $F_3 = L$. The default probability is $p_3 = \\Phi(-d_{2,3})$.\n- Heuristic $\\mathrm{H4}$: $F_4 = \\max\\{D_S + D_L - C, 1\\}$. The default probability is $p_4 = \\Phi(-d_{2,4})$.\n\nFor each test case, the computational procedure is as follows:\n1.  From the input parameters $(V_0, \\sigma, r, q, T, D_S, D_L, L, C)$, calculate the four default thresholds $F_1, F_2, F_3, F_4$.\n2.  For each threshold $F_i$, where $i \\in \\{1, 2, 3, 4\\}$, compute the corresponding $d_{2,i}$ term:\n    $$\n    d_{2,i} = \\frac{\\ln(V_0/F_i) + (r - q - 0.5\\sigma^2)T}{\\sigma\\sqrt{T}}\n    $$\n3.  Compute the four default probabilities $p_i = \\Phi(-d_{2,i})$ using a numerical implementation of the standard normal CDF.\n4.  Once the set of probabilities $\\{p_1, p_2, p_3, p_4\\}$ is obtained, calculate the two sensitivity metrics:\n    -   Absolute Range: $R_{\\mathrm{abs}} = \\max_i p_i - \\min_i p_i$.\n    -   Relative Range: $R_{\\mathrm{rel}} = R_{\\mathrm{abs}} / \\overline{p}$, where $\\overline{p} = \\frac{1}{4}\\sum_{i=1}^{4} p_i$ is the arithmetic mean. Since $V_0 > 0$, $F_i > 0$, $\\sigma > 0$, and $T > 0$, the probability $p_i = \\Phi(-d_{2,i})$ is always strictly positive, ensuring that $\\overline{p} > 0$ and the relative range is well-defined.\n5.  Collect the results for each case into a list of six values: $[p_1, p_2, p_3, p_4, R_{\\mathrm{abs}}, R_{\\mathrm{rel}}]$, with each value rounded to $6$ decimal places. This process is repeated for all provided test cases.\n\nThe scientific library `scipy.stats.norm` provides the necessary function `cdf` to compute $\\Phi(\\cdot)$. The `numpy` library is used for efficient numerical and array-based computations.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Computes risk-neutral default probabilities and sensitivity metrics\n    for the Merton model under different default threshold heuristics.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (V0, sigma, r, q, T, DS, DL, L, C)\n    test_cases = [\n        (200.0, 0.25, 0.02, 0.00, 1.0, 30.0, 70.0, 120.0, 20.0),\n        (120.0, 0.30, 0.03, 0.01, 1.0, 40.0, 100.0, 180.0, 10.0),\n        (90.0, 0.20, 0.01, 0.00, 0.5, 50.0, 80.0, 150.0, 5.0),\n        (150.0, 0.15, 0.02, 0.00, 2.0, 10.0, 20.0, 60.0, 50.0),\n    ]\n\n    all_results = []\n    for case in test_cases:\n        V0, sigma, r, q, T, DS, DL, L, C = case\n\n        # Heuristic 1: Half long-term debt\n        F1 = DS + 0.5 * DL\n        # Heuristic 2: All interest-bearing debt\n        F2 = DS + DL\n        # Heuristic 3: Total liabilities\n        F3 = L\n        # Heuristic 4: Net debt with floor\n        F4 = max(DS + DL - C, 1.0)\n        \n        # Array of default thresholds\n        F_arr = np.array([F1, F2, F3, F4])\n\n        # Common terms in the d2 formula\n        drift_term = (r - q - 0.5 * sigma**2) * T\n        stdev_term = sigma * np.sqrt(T)\n\n        # Calculate d2 for each heuristic in a vectorized way\n        # d2 = (ln(V0/F) + (r - q - 0.5*sigma^2)*T) / (sigma*sqrt(T))\n        d2_arr = (np.log(V0 / F_arr) + drift_term) / stdev_term\n        \n        # Calculate default probabilities: P(V_T < F) = N(-d2)\n        probs = norm.cdf(-d2_arr)\n\n        # Calculate sensitivity metrics\n        R_abs = np.max(probs) - np.min(probs)\n        mean_p = np.mean(probs)\n        \n        # Relative range, handle case of mean_p being zero to avoid division errors,\n        # though it's theoretically not possible with these model constraints.\n        R_rel = R_abs / mean_p if mean_p > 0 else 0.0\n        \n        # Combine all results for the current case\n        case_result = list(probs) + [R_abs, R_rel]\n\n        # Round to 6 decimal places as required\n        rounded_result = [round(x, 6) for x in case_result]\n        all_results.append(rounded_result)\n\n    # Format the final output string as a list of lists.\n    #\n    # This manual string construction ensures the output strictly matches\n    # the required format with no extra spaces.\n    # Ex: [[1.0,2.0],[3.0,4.0]]\n    list_of_lists_str = [\n        f\"[{','.join(map(str, res))}]\" \n        for res in all_results\n    ]\n    final_output_str = f\"[{','.join(list_of_lists_str)}]\"\n    print(final_output_str)\n\nsolve()\n```"}, {"introduction": "In reality, default is not always a passive event that occurs only at a debt's maturity. This practice extends the basic Merton framework to incorporate strategic decision-making by shareholders. By comparing the firm's continuation value—the value of equity less any ongoing operational costs—to the zero-value of immediate default, you will determine the optimal point for shareholders to walk away, a concept that mirrors the early exercise feature of an American option. [@problem_id:2435122]", "id": "2435122", "problem": "Consider a firm financed by a single class of zero-coupon debt with face value $F$ maturing at time $T$, and equity held by shareholders with limited liability. The firm’s asset value $V_t$ follows a geometric Brownian motion under the risk-neutral measure with constant risk-free rate $r$ and constant volatility $\\sigma$, for $t \\in [0,T]$. At a decision time $t<T$, shareholders may choose either to default immediately (strategic early default) or to continue operating until $T$. If shareholders default immediately at time $t$, they receive $0$. If they continue, they must incur a deterministic operating burden modeled as a constant cost flow of $k$ per unit time over $[t,T]$, with costs discounted at rate $r$ under risk-neutral valuation. Assume no recovery to equity upon default at $t$, no intermediate coupon payments on debt, frictionless markets, and that default in the baseline structural model (absent strategic action) occurs only at $T$.\n\nUnder the structural approach of the Merton model, equity at time $t$ is the value of an option on the firm’s assets. Under rational expectations and risk-neutral pricing, shareholders compare the continuation value to the immediate default value. The continuation value at time $t$ is the risk-neutral present value of equity at $t$ (as implied by the Merton framework) minus the present value at time $t$ of the constant cost flow $k$ over $[t,T]$. The immediate default value at time $t$ is $0$. Shareholders choose to default early at time $t$ if and only if the continuation value is strictly less than $0$; in the case of equality, they are indifferent, and for the purpose of this task you must select continuation. All time is measured in years, all rates (such as $r$) must be treated as decimals (for example, $0.05$ for five percent), and all monetary quantities ($V$, $F$, $k$) must be treated in consistent monetary units. The angle unit is not applicable.\n\nYour task is to write a complete, runnable program that, given a set of parameter tuples $(V,F,r,\\sigma,t,T,k)$, decides for each tuple whether rational shareholders at time $t$ optimally choose immediate default (output boolean $True$) or continuation (output boolean $False$) according to the rule: default early if and only if the continuation value $<0$, otherwise continue. The present value at time $t$ of a constant cost flow $k$ over $[t,T]$ discounted at rate $r$ must be computed as a function of $r$, $k$, $t$, and $T$ using first principles; note that for $r=0$ this reduces to a limit case.\n\nTest suite:\n- Case $1$: $(V,F,r,\\sigma,t,T,k) = (80,100,0.03,0.2,0,1,0)$.\n- Case $2$: $(V,F,r,\\sigma,t,T,k) = (60,100,0.05,0.25,0,1,20)$.\n- Case $3$: $(V,F,r,\\sigma,t,T,k) = (100,100,0.02,0.2,0.5,1.0,12.3)$.\n- Case $4$: $(V,F,r,\\sigma,t,T,k) = (90,100,0.0,0.3,0.0,1.5,5.0)$.\n- Case $5$: $(V,F,r,\\sigma,t,T,k) = (70,100,0.03,0.8,0.0,2.0,5.0)$.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the same order as the test suite, where each entry is a boolean indicating the optimal action at time $t$ for the corresponding case. For example, the output format must be of the form $[result_1,result_2,result_3,result_4,result_5]$ with each $result_i \\in \\{\\text{True},\\text{False}\\}$.", "solution": "The problem as stated is valid. It is scientifically grounded in the established principles of financial economics, specifically the structural model of credit risk pioneered by Merton. The problem is well-posed, providing all necessary parameters and an unambiguous decision criterion. It is free of contradictions, subjective statements, and non-formalizable elements. We may therefore proceed directly to the solution.\n\nThe core of the problem is to determine the optimal action for shareholders at time $t$ by comparing the value of continuing operations against the value of immediate default. The value of immediate default is given as $0$. The decision rule is to default if and only if the continuation value is strictly less than $0$.\n\nThe continuation value at time $t$, denoted $CV_t$, is the value of the shareholders' equity at time $t$, $E_t$, less the present value of the future operating burden, which we denote $P_k(t,T)$.\n$$ CV_t = E_t - P_k(t,T) $$\nThe shareholders' optimal action at time $t$ is to default if $CV_t < 0$, and to continue if $CV_t \\geq 0$.\n\nThe first component, the equity value $E_t$, is derived from the Merton model. In this framework, equity is equivalent to a European call option on the firm's total asset value, $V_t$. The strike price of this option is the face value of the debt, $F$, and the time to expiration is the time remaining until the debt matures, $\\tau = T-t$. The value of this call option is given by the Black-Scholes-Merton formula:\n$$ E_t = V_t N(d_1) - F e^{-r(T-t)} N(d_2) $$\nwhere $N(\\cdot)$ is the cumulative distribution function (CDF) of the standard normal distribution, and the parameters $d_1$ and $d_2$ are defined as:\n$$ d_1 = \\frac{\\ln(V_t/F) + (r + \\frac{1}{2}\\sigma^2)(T-t)}{\\sigma \\sqrt{T-t}} $$\n$$ d_2 = d_1 - \\sigma \\sqrt{T-t} = \\frac{\\ln(V_t/F) + (r - \\frac{1}{2}\\sigma^2)(T-t)}{\\sigma \\sqrt{T-t}} $$\n\nThe second component is the present value of the operating costs, $P_k(t,T)$. The firm is subject to a constant cost flow of $k$ per unit time over the interval $[t,T]$. Under risk-neutral valuation, the present value of this stream of costs at time $t$ is calculated by integrating the discounted cost flow:\n$$ P_k(t,T) = \\int_{t}^{T} k e^{-r(s-t)} ds $$\nThe evaluation of this integral depends on the risk-free rate $r$.\nFor the case where the risk-free rate is non-zero, $r > 0$, the integral evaluates to:\n$$ P_k(t,T) = \\frac{k}{r} \\left( 1 - e^{-r(T-t)} \\right) $$\nFor the special case where the risk-free rate is zero, $r=0$, the exponential term in the integrand becomes $1$, and the integral simplifies to:\n$$ P_k(t,T) = \\int_{t}^{T} k \\, ds = k(T-t) $$\nThis result for $r=0$ can also be confirmed by taking the limit of the expression for $r > 0$ as $r \\to 0$ via L'Hôpital's rule.\n\nThe algorithmic procedure to solve the problem for a given set of parameters $(V, F, r, \\sigma, t, T, k)$ is as follows:\n$1$. Calculate the time to maturity, $\\tau = T-t$.\n$2$. Compute the parameters $d_1$ and $d_2$ using the provided values.\n$3$. Evaluate the standard normal CDF, $N(d_1)$ and $N(d_2)$, using a numerical library function.\n$4$. Calculate the equity value $E_t$ using the Black-Scholes-Merton formula.\n$5$. Calculate the present value of the cost flow, $P_k(t,T)$, ensuring the correct formula is used for $r=0$ versus $r > 0$.\n$6$. Compute the continuation value, $CV_t = E_t - P_k(t,T)$.\n$7$. Return `True` (for default) if $CV_t < 0$, and `False` (for continuation) otherwise.\n\nThis structured procedure is translated into a Python program for the numerical evaluation of the specified test cases.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Solves for the optimal shareholder decision (default or continue) for\n    a series of test cases based on a modified Merton model.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    # Each tuple is in the format: (V, F, r, sigma, t, T, k)\n    test_cases = [\n        (80, 100, 0.03, 0.2, 0, 1, 0),\n        (60, 100, 0.05, 0.25, 0, 1, 20),\n        (100, 100, 0.02, 0.2, 0.5, 1.0, 12.3),\n        (90, 100, 0.0, 0.3, 0.0, 1.5, 5.0),\n        (70, 100, 0.03, 0.8, 0.0, 2.0, 5.0),\n    ]\n\n    results = []\n    for case in test_cases:\n        V, F, r, sigma, t, T, k = case\n        decision = should_default_early(V, F, r, sigma, t, T, k)\n        results.append(decision)\n\n    # Final print statement in the exact required format.\n    # The str() of a Python boolean is 'True' or 'False'.\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef should_default_early(V, F, r, sigma, t, T, k):\n    \"\"\"\n    Determines if shareholders should default early based on continuation value.\n\n    Args:\n        V (float): Firm's asset value at time t.\n        F (float): Face value of zero-coupon debt.\n        r (float): Constant risk-free rate.\n        sigma (float): Constant volatility of asset value.\n        t (float): Decision time.\n        T (float): Debt maturity time.\n        k (float): Constant cost flow rate.\n\n    Returns:\n        bool: True if default is optimal, False if continuation is optimal.\n    \"\"\"\n    time_to_maturity = T - t\n\n    # In the problem, t < T, so time_to_maturity > 0.\n    # No need to handle time_to_maturity <= 0 edge cases.\n\n    # 1. Calculate Equity Value (E_t) using Black-Scholes-Merton formula\n    # The problem constraints ensure sigma > 0 and time_to_maturity > 0,\n    # so the denominator is non-zero.\n    \n    sigma_sqrt_tau = sigma * np.sqrt(time_to_maturity)\n    \n    # Check for V > 0 to avoid math domain error with log, which is a reasonable assumption.\n    if V <= 0:\n      # If asset value is zero, equity value is zero.\n      equity_value = 0.0\n    else:\n      d1 = (np.log(V / F) + (r + 0.5 * sigma**2) * time_to_maturity) / sigma_sqrt_tau\n      d2 = d1 - sigma_sqrt_tau\n      \n      N_d1 = norm.cdf(d1)\n      N_d2 = norm.cdf(d2)\n      \n      equity_value = V * N_d1 - F * np.exp(-r * time_to_maturity) * N_d2\n\n    # 2. Calculate Present Value of Costs (PV_costs)\n    if r == 0.0:\n        pv_costs = k * time_to_maturity\n    else:\n        pv_costs = (k / r) * (1 - np.exp(-r * time_to_maturity))\n\n    # 3. Calculate Continuation Value (CV_t)\n    continuation_value = equity_value - pv_costs\n\n    # 4. Decision Rule: Default if Continuation Value is strictly negative.\n    return continuation_value < 0\n\nsolve()\n```"}, {"introduction": "Effective risk management requires moving beyond static snapshots to understand the dynamics of risk. This final practice elevates your analysis by decomposing the change in default probability into contributions from its fundamental drivers: changes in asset value, volatility, leverage, and the simple passage of time. By implementing a first-order Taylor expansion, you will learn a powerful technique used by quantitative analysts to attribute risk and explain why a firm's creditworthiness is changing. [@problem_id:2435102]", "id": "2435102", "problem": "Consider the structural model of default introduced by Robert C. Merton. Let a firm's asset value process $\\{V_t\\}_{t \\ge 0}$ under the risk-neutral measure follow a geometric Brownian motion with constant risk-free rate $r$ and constant asset volatility $\\sigma_V$, so that the terminal asset value at maturity $T$ is lognormally distributed. The firm has a single zero-coupon debt claim with face value $F$ maturing at time $T$. Default occurs at $T$ if and only if $V_T < F$. The probability of default (PD) under the risk-neutral measure at calendar time $t$ with time to maturity $\\tau = T - t$ is the probability that $V_T < F$ given $V_t = V$, $r$, $\\sigma_V$, and $\\tau$, expressed as a decimal in $[0,1]$ (not as a percentage).\n\nLet the initial parameter vector at time $t$ be $\\theta = (V, \\sigma_V, F, \\tau, r)$, and consider a short time increment $\\Delta t > 0$ with corresponding small parameter changes $\\Delta V$, $\\Delta \\sigma_V$, $\\Delta F$. The new parameter vector at time $t + \\Delta t$ is $\\theta' = (V + \\Delta V, \\sigma_V + \\Delta \\sigma_V, F + \\Delta F, \\tau - \\Delta t, r)$, with $\\tau - \\Delta t > 0$. Define the exact change in the probability of default over this short interval as\n$$\n\\Delta \\text{PD}_{\\text{exact}} \\equiv \\text{PD}(V + \\Delta V, \\sigma_V + \\Delta \\sigma_V, F + \\Delta F, \\tau - \\Delta t, r) - \\text{PD}(V, \\sigma_V, F, \\tau, r).\n$$\nDecompose $\\Delta \\text{PD}_{\\text{exact}}$ into additive contributions attributable to changes in $V$, $\\sigma_V$, $F$, and the passage of time (time decay) by evaluating the first-order differential of $\\text{PD}$ at the initial parameters $\\theta$, producing four contributions $C_V$, $C_{\\sigma}$, $C_F$, and $C_{\\text{time}}$ such that their sum approximates $\\Delta \\text{PD}_{\\text{exact}}$. Report the approximation error as the difference between the sum of contributions and the exact change.\n\nAssume the probability of default $\\text{PD}(V, \\sigma_V, F, \\tau, r)$ is computed directly from the lognormal distribution of $V_T$ implied by the risk-neutral dynamics of $V_t$ and the default event $\\{V_T < F\\}$. All results must be expressed as decimals (not percentages). No angles are involved.\n\nYour program must compute, for each test case, a list of six floats:\n1. $\\Delta \\text{PD}_{\\text{exact}}$,\n2. $C_V$,\n3. $C_{\\sigma}$,\n4. $C_F$,\n5. $C_{\\text{time}}$,\n6. $\\left(C_V + C_{\\sigma} + C_F + C_{\\text{time}}\\right) - \\Delta \\text{PD}_{\\text{exact}}$,\n\neach rounded to eight decimal places. Aggregate the results for all test cases into a single line of output containing a list of lists, for example, \"[[...],[...],...]\".\n\nUse the following test suite of parameter values, each as a tuple $(V, \\sigma_V, F, \\tau, r, \\Delta V, \\Delta \\sigma_V, \\Delta F, \\Delta t)$:\n- Case 1 (typical): $(100.0, 0.25, 80.0, 1.0, 0.03, 0.5, 0.01, 0.2, 0.01)$.\n- Case 2 (near at-the-money): $(100.0, 0.30, 100.0, 0.5, 0.02, -1.0, -0.02, 0.0, 0.02)$.\n- Case 3 (high leverage): $(70.0, 0.20, 100.0, 2.0, 0.05, 0.0, 0.03, -1.0, 0.1)$.\n- Case 4 (short maturity, pure time decay): $(95.0, 0.35, 100.0, 0.05, 0.01, 0.0, 0.0, 0.0, 0.01)$.\n- Case 5 (low volatility): $(100.0, 0.05, 90.0, 1.5, 0.02, -0.5, 0.0, 0.0, 0.05)$.\n\nYour program should produce a single line of output containing the results as a comma-separated list of the five case results enclosed in square brackets (e.g., \"[[c1],[c2],[c3],[c4],[c5]]\").", "solution": "The problem requires the decomposition of the change in a firm's risk-neutral probability of default (PD) within the Merton model framework. The decomposition is based on a first-order Taylor series expansion with respect to the model's parameters: the firm's asset value $V$, asset volatility $\\sigma_V$, debt face value $F$, and time to maturity $\\tau$.\n\nFirst, we establish the formula for the probability of default, $\\text{PD}$. According to the Merton model, the firm's asset value $V_t$ follows a geometric Brownian motion under the risk-neutral measure $\\mathbb{Q}$:\n$$\ndV_t = r V_t dt + \\sigma_V V_t dZ_t\n$$\nwhere $r$ is the constant risk-free rate, $\\sigma_V$ is the constant asset volatility, and $Z_t$ is a standard Wiener process. The solution to this stochastic differential equation gives the asset value at maturity $T$, $V_T$, conditional on the value $V_t$ at time $t$:\n$$\nV_T = V_t \\exp\\left( \\left(r - \\frac{1}{2}\\sigma_V^2\\right)\\tau + \\sigma_V \\sqrt{\\tau} Z \\right)\n$$\nwhere $\\tau = T - t$ is the time to maturity and $Z$ is a standard normal random variable, $Z \\sim N(0, 1)$.\n\nDefault occurs if and only if the asset value at maturity is less than the face value of the debt, $V_T < F$. The probability of this event is:\n$$\n\\text{PD} = \\mathbb{Q}(V_T < F | V_t = V) = \\mathbb{Q}\\left( V \\exp\\left( \\left(r - \\frac{1}{2}\\sigma_V^2\\right)\\tau + \\sigma_V \\sqrt{\\tau} Z \\right) < F \\right)\n$$\nTaking the natural logarithm of both sides of the inequality inside the probability measure:\n$$\n\\ln(V) + \\left(r - \\frac{1}{2}\\sigma_V^2\\right)\\tau + \\sigma_V \\sqrt{\\tau} Z < \\ln(F)\n$$\n$$\n\\sigma_V \\sqrt{\\tau} Z < \\ln(F) - \\ln(V) - \\left(r - \\frac{1}{2}\\sigma_V^2\\right)\\tau\n$$\n$$\nZ < \\frac{\\ln(F/V) - \\left(r - \\frac{1}{2}\\sigma_V^2\\right)\\tau}{\\sigma_V \\sqrt{\\tau}} = - \\frac{\\ln(V/F) + \\left(r - \\frac{1}{2}\\sigma_V^2\\right)\\tau}{\\sigma_V \\sqrt{\\tau}}\n$$\nThis expression defines the negative of the standard distance-to-default metric, $-d_2$, where:\n$$\nd_2 = \\frac{\\ln(V/F) + \\left(r - \\frac{1}{2}\\sigma_V^2\\right)\\tau}{\\sigma_V \\sqrt{\\tau}}\n$$\nThe probability of default is thus given by the cumulative distribution function (CDF) of the standard normal distribution, $\\Phi(\\cdot)$:\n$$\n\\text{PD}(V, \\sigma_V, F, \\tau, r) = \\mathbb{Q}(Z < -d_2) = \\Phi(-d_2)\n$$\nThe problem requires computing the exact change $\\Delta \\text{PD}_{\\text{exact}} = \\text{PD}(\\theta') - \\text{PD}(\\theta)$ and approximating this change using a first-order Taylor expansion around the initial parameter vector $\\theta = (V, \\sigma_V, F, \\tau, r)$. The change in parameters is given by $(\\Delta V, \\Delta \\sigma_V, \\Delta F, -\\Delta t)$. The first-order approximation is:\n$$\n\\Delta \\text{PD}_{\\text{approx}} = \\frac{\\partial \\text{PD}}{\\partial V}\\Delta V + \\frac{\\partial \\text{PD}}{\\partial \\sigma_V}\\Delta \\sigma_V + \\frac{\\partial \\text{PD}}{\\partial F}\\Delta F + \\frac{\\partial \\text{PD}}{\\partial \\tau}(-\\Delta t)\n$$\nThe individual terms are the contributions $C_V$, $C_{\\sigma}$, $C_F$, and $C_{\\text{time}}$. To compute these, we must find the partial derivatives of $\\text{PD}$ with respect to its arguments. Using the chain rule, for any variable $x$, we have $\\frac{\\partial \\text{PD}}{\\partial x} = \\frac{\\partial \\Phi(-d_2)}{\\partial x} = \\phi(-d_2) \\cdot \\left(-\\frac{\\partial d_2}{\\partial x}\\right)$, where $\\phi(\\cdot)$ is the standard normal probability density function (PDF). Since $\\phi(-z) = \\phi(z)$, this simplifies to $\\frac{\\partial \\text{PD}}{\\partial x} = -\\phi(d_2) \\frac{\\partial d_2}{\\partial x}$.\n\nThe partial derivatives of $d_2$ are:\n1.  With respect to $V$:\n    $$\n    \\frac{\\partial d_2}{\\partial V} = \\frac{\\partial}{\\partial V} \\left( \\frac{\\ln V - \\ln F + (r - \\frac{1}{2}\\sigma_V^2)\\tau}{\\sigma_V \\sqrt{\\tau}} \\right) = \\frac{1}{V \\sigma_V \\sqrt{\\tau}}\n    $$\n    Therefore, the sensitivity to asset value is:\n    $$\n    C_V = \\frac{\\partial \\text{PD}}{\\partial V} \\Delta V = -\\frac{\\phi(d_2)}{V \\sigma_V \\sqrt{\\tau}} \\Delta V\n    $$\n2.  With respect to $F$:\n    $$\n    \\frac{\\partial d_2}{\\partial F} = \\frac{\\partial}{\\partial F} \\left( \\frac{\\ln V - \\ln F + (r - \\frac{1}{2}\\sigma_V^2)\\tau}{\\sigma_V \\sqrt{\\tau}} \\right) = -\\frac{1}{F \\sigma_V \\sqrt{\\tau}}\n    $$\n    The sensitivity to the face value of debt is:\n    $$\n    C_F = \\frac{\\partial \\text{PD}}{\\partial F} \\Delta F = \\frac{\\phi(d_2)}{F \\sigma_V \\sqrt{\\tau}} \\Delta F\n    $$\n3.  With respect to $\\sigma_V$:\n    It is useful to first define $d_1 = d_2 + \\sigma_V \\sqrt{\\tau} = \\frac{\\ln(V/F) + (r + \\frac{1}{2}\\sigma_V^2)\\tau}{\\sigma_V \\sqrt{\\tau}}$. A standard result from financial calculus is $\\frac{\\partial d_2}{\\partial \\sigma_V} = -\\frac{d_1}{\\sigma_V}$.\n    The sensitivity to asset volatility is thus:\n    $$\n    C_{\\sigma} = \\frac{\\partial \\text{PD}}{\\partial \\sigma_V} \\Delta \\sigma_V = -\\phi(d_2) \\left( -\\frac{d_1}{\\sigma_V} \\right) \\Delta \\sigma_V = \\frac{\\phi(d_2) d_1}{\\sigma_V} \\Delta \\sigma_V\n    $$\n4.  With respect to $\\tau$:\n    $$\n    d_2 = \\frac{\\ln (V/F)}{\\sigma_V} \\tau^{-1/2} + \\frac{r - \\frac{1}{2}\\sigma_V^2}{\\sigma_V} \\tau^{1/2}\n    $$\n    $$\n    \\frac{\\partial d_2}{\\partial \\tau} = -\\frac{1}{2}\\frac{\\ln (V/F)}{\\sigma_V} \\tau^{-3/2} + \\frac{1}{2}\\frac{r - \\frac{1}{2}\\sigma_V^2}{\\sigma_V} \\tau^{-1/2} = \\frac{1}{2\\tau} \\left( -\\frac{\\ln(V/F)}{\\sigma_V\\sqrt{\\tau}} + \\frac{(r - \\frac{1}{2}\\sigma_V^2)\\tau}{\\sigma_V\\sqrt{\\tau}} \\right) = -\\frac{d_2}{2\\tau} + \\frac{r - \\frac{1}{2}\\sigma_V^2}{\\sigma_V\\sqrt{\\tau}}\n    $$\n    The contribution from time decay is:\n    $$\n    C_{\\text{time}} = \\frac{\\partial \\text{PD}}{\\partial \\tau} (-\\Delta t) = -\\phi(d_2) \\left( -\\frac{d_2}{2\\tau} + \\frac{r - \\frac{1}{2}\\sigma_V^2}{\\sigma_V\\sqrt{\\tau}} \\right) (-\\Delta t) = \\phi(d_2) \\left( -\\frac{d_2}{2\\tau} + \\frac{r - \\frac{1}{2}\\sigma_V^2}{\\sigma_V\\sqrt{\\tau}} \\right) \\Delta t\n    $$\nThe algorithm implemented will:\n1.  For each test case, define the initial parameter vector $\\theta = (V, \\sigma_V, F, \\tau, r)$ and the changes $(\\Delta V, \\Delta \\sigma_V, \\Delta F, \\Delta t)$.\n2.  Calculate the initial probability of default, $\\text{PD}(\\theta) = \\Phi(-d_2(\\theta))$.\n3.  Define the new parameter vector $\\theta' = (V+\\Delta V, \\sigma_V+\\Delta \\sigma_V, F+\\Delta F, \\tau-\\Delta t, r)$.\n4.  Calculate the final probability of default, $\\text{PD}(\\theta')$.\n5.  Compute the exact change: $\\Delta \\text{PD}_{\\text{exact}} = \\text{PD}(\\theta') - \\text{PD}(\\theta)$.\n6.  Compute the partial derivatives $\\frac{\\partial \\text{PD}}{\\partial V}$, $\\frac{\\partial \\text{PD}}{\\partial \\sigma_V}$, $\\frac{\\partial \\text{PD}}{\\partial F}$, and $\\frac{\\partial \\text{PD}}{\\partial \\tau}$ at the initial point $\\theta$.\n7.  Calculate the four contributions $C_V$, $C_{\\sigma}$, $C_F$, and $C_{\\text{time}}$ using the derived formulas.\n8.  Calculate the approximation error as $\\left(C_V + C_{\\sigma} + C_F + C_{\\text{time}}\\right) - \\Delta \\text{PD}_{\\text{exact}}$.\nAll calculations will use functions from the `numpy` and `scipy.stats` libraries for numerical precision.", "answer": "```python\nimport numpy as np\nfrom scipy.stats import norm\n\ndef calculate_pd_and_sensitivities(V, sigma_V, F, tau, r):\n    \"\"\"\n    Calculates the probability of default (PD) and its first-order partial derivatives\n    (sensitivities) with respect to V, sigma_V, F, and tau, based on the Merton model.\n\n    Args:\n        V (float): Firm's asset value.\n        sigma_V (float): Asset volatility.\n        F (float): Face value of debt.\n        tau (float): Time to maturity.\n        r (float): Risk-free rate.\n\n    Returns:\n        tuple: A tuple containing:\n            - pd (float): Probability of default.\n            - pd_V (float): Partial derivative of PD w.r.t. V.\n            - pd_sigma (float): Partial derivative of PD w.r.t. sigma_V.\n            - pd_F (float): Partial derivative of PD w.r.t. F.\n            - pd_tau (float): Partial derivative of PD w.r.t. tau.\n    \"\"\"\n    if tau <= 1e-9:\n        pd = 1.0 if V < F else 0.0\n        return pd, 0.0, 0.0, 0.0, 0.0\n\n    sqrt_tau = np.sqrt(tau)\n    sigma_sqrt_tau = sigma_V * sqrt_tau\n    \n    d1 = (np.log(V / F) + (r + 0.5 * sigma_V**2) * tau) / sigma_sqrt_tau\n    d2 = d1 - sigma_sqrt_tau\n    \n    pd = norm.cdf(-d2)\n    \n    pdf_d2 = norm.pdf(d2)\n    \n    pd_V = -pdf_d2 / (V * sigma_sqrt_tau)\n    \n    pd_sigma = pdf_d2 * d1 / sigma_V\n    \n    pd_F = pdf_d2 / (F * sigma_sqrt_tau)\n    \n    d2_tau_deriv = (r - 0.5 * sigma_V**2) / (sigma_V * sqrt_tau) - d2 / (2 * tau)\n    pd_tau = -pdf_d2 * d2_tau_deriv\n    \n    return pd, pd_V, pd_sigma, pd_F, pd_tau\n\ndef solve_case(params):\n    \"\"\"\n    Solves a single test case for PD decomposition.\n\n    Args:\n        params (tuple): A tuple of parameters (V, sigma_V, F, tau, r, dV, d_sigma, dF, dt).\n\n    Returns:\n        list: A list of six floats rounded to eight decimal places.\n    \"\"\"\n    V, sigma_V, F, tau, r, dV, d_sigma, dF, dt = params\n\n    pd_initial, pd_V, pd_sigma, pd_F, pd_tau = calculate_pd_and_sensitivities(V, sigma_V, F, tau, r)\n    \n    C_V = pd_V * dV\n    C_sigma = pd_sigma * d_sigma\n    C_F = pd_F * dF\n    C_time = pd_tau * (-dt)\n    \n    V_new = V + dV\n    sigma_V_new = sigma_V + d_sigma\n    F_new = F + dF\n    tau_new = tau - dt\n    \n    pd_final = calculate_pd_and_sensitivities(V_new, sigma_V_new, F_new, tau_new, r)[0]\n    \n    delta_pd_exact = pd_final - pd_initial\n    \n    total_approximation = C_V + C_sigma + C_F + C_time\n    \n    approximation_error = total_approximation - delta_pd_exact\n    \n    return [\n        round(delta_pd_exact, 8),\n        round(C_V, 8),\n        round(C_sigma, 8),\n        round(C_F, 8),\n        round(C_time, 8),\n        round(approximation_error, 8)\n    ]\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print the final output.\n    \"\"\"\n    test_cases = [\n        # (V, sigma_V, F, tau, r, dV, d_sigma, dF, dt)\n        (100.0, 0.25, 80.0, 1.0, 0.03, 0.5, 0.01, 0.2, 0.01),\n        (100.0, 0.30, 100.0, 0.5, 0.02, -1.0, -0.02, 0.0, 0.02),\n        (70.0, 0.20, 100.0, 2.0, 0.05, 0.0, 0.03, -1.0, 0.1),\n        (95.0, 0.35, 100.0, 0.05, 0.01, 0.0, 0.0, 0.0, 0.01),\n        (100.0, 0.05, 90.0, 1.5, 0.02, -0.5, 0.0, 0.0, 0.05),\n    ]\n\n    results = []\n    for case in test_cases:\n        result_case = solve_case(case)\n        results.append(result_case)\n\n    case_strings = []\n    for res_list in results:\n        case_str = f\"[{','.join(map(str, res_list))}]\"\n        case_strings.append(case_str)\n    \n    final_output = f\"[{','.join(case_strings)}]\"\n    print(final_output)\n\nsolve()\n```"}]}