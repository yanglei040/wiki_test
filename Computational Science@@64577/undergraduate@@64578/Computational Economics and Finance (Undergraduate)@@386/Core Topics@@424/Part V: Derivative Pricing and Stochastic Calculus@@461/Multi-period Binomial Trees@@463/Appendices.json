{"hands_on_practices": [{"introduction": "The binomial model is more than a pricing calculator; it's a blueprint for a dynamic trading strategy that perfectly replicates an option's payoff. This hands-on exercise guides you through implementing this \"delta-hedging\" strategy, the cornerstone of modern derivatives pricing. By tracking your portfolio along a given price path, you will verify the central claim of arbitrage-free theory: that a perfect hedge results in zero tracking error, revealing why the binomial price is the unique price that prevents risk-free profits [@problem_id:2412792].", "id": "2412792", "problem": "You are given a discrete-time, multi-period binomial asset pricing model. Let the underlying asset price process $\\{S_{t}\\}_{t=0}^{N}$ follow multiplicative dynamics where, in each period, the price either moves up by a factor $u$ or down by a factor $d$, with $u&gt;d&gt;0$. The per-period gross risk-free return is $R$, with the no-arbitrage condition $d&lt;R&lt;u$. Consider a European call option written on this asset with strike $K$ and maturity at time step $N$. Let $C_{t}$ denote the unique no-arbitrage time-$t$ value of the option at a given node, computed under the risk-neutral measure with probability $q=(R-d)/(u-d)$, and terminal condition $C_{N}=\\max(S_{N}-K,0)$. At each non-terminal node, define the local Delta as the number of shares in the replicating portfolio,\n$$\n\\Delta_{t}=\\frac{C_{t+1}^{(u)}-C_{t+1}^{(d)}}{S_{t+1}^{(u)}-S_{t+1}^{(d)}},\n$$\nwhere superscripts indicate the value in the up- or down-child node.\n\nA trader is short one unit of the call at time $0$, receives the premium $C_{0}$, and dynamically hedges the short position by holding $\\Delta_{t}$ shares and a risk-free account position $B_{t}$, with zero transaction costs and a self-financing constraint. The initial hedge satisfies $B_{0}=C_{0}-\\Delta_{0}S_{0}$. Along a realized price path of length $N$, let the pre-rebalancing hedging error at the end of period $t$ be\n$$\ne_{t}=\\Delta_{t-1}S_{t}+B_{t-1}R-C_{t},\\quad t=1,2,\\dots,N,\n$$\nwhere $C_{t}$ is the option value at the reached node at time $t$, with $C_{N}=\\max(S_{N}-K,0)$. After measuring $e_{t}$, the hedge is rebalanced to $\\Delta_{t}$ at time $t$ for $t=1,2,\\dots,N-1$.\n\nYour task is to implement a program that, for each given parameter set and realized path, constructs the binomial price tree, computes the option value tree, implements the dynamic Delta-hedging strategy for the short call as defined above, and returns the sequence $\\{e_{t}\\}_{t=1}^{N}$ along the path. All values must be expressed as decimals (no percentage signs), and each $e_{t}$ must be rounded to $10$ decimal places.\n\nTest Suite. For each case below, use the provided parameters and realized path of up/down moves, where $U$ denotes an up move by factor $u$ and $D$ denotes a down move by factor $d$:\n- Case $1$ (general multi-period path): $S_{0}=100.0$, $u=1.1$, $d=0.9$, $R=1.02$, $K=100.0$, $N=4$, path $[U,D,U,U]$.\n- Case $2$ (boundary, single period): $S_{0}=50.0$, $u=1.2$, $d=0.8$, $R=1.0$, $K=50.0$, $N=1$, path $[U]$.\n- Case $3$ (edge, zero interest and all downs): $S_{0}=80.0$, $u=1.25$, $d=0.8$, $R=1.0$, $K=90.0$, $N=3$, path $[D,D,D]$.\n- Case $4$ (edge, deep in-the-money and all ups): $S_{0}=100.0$, $u=1.2$, $d=0.8$, $R=1.01$, $K=80.0$, $N=3$, path $[U,U,U]$.\n\nRequired final output format. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. Each element of this list must be the list of rounded hedging errors $[e_{1},e_{2},\\dots,e_{N}]$ for the corresponding test case. For example, an output with two cases should look like $[[e_{1}^{(1)},\\dots,e_{N\\_{1}}^{(1)}],[e_{1}^{(2)},\\dots,e_{N\\_{2}}^{(2)}]]$ with no spaces anywhere in the line.", "solution": "The problem statement is subjected to validation.\n\nGivens are extracted verbatim:\n- Asset price process: $\\{S_{t}\\}_{t=0}^{N}$ following a multiplicative binomial model.\n- Up-move factor: $u$. Down-move factor: $d$. With $u > d > 0$.\n- Per-period gross risk-free return: $R$.\n- No-arbitrage condition: $d < R < u$.\n- Derivative: European call option, strike $K$, maturity $N$.\n- Option value: $C_{t}$ at time $t$.\n- Terminal condition: $C_{N} = \\max(S_{N}-K, 0)$.\n- Risk-neutral probability of an up move: $q = \\frac{R-d}{u-d}$.\n- Option valuation: under the risk-neutral measure, implying $C_{t} = R^{-1}[q C_{t+1}^{(u)} + (1-q) C_{t+1}^{(d)}]$.\n- Replicating portfolio Delta: $\\Delta_{t}=\\frac{C_{t+1}^{(u)}-C_{t+1}^{(d)}}{S_{t+1}^{(u)}-S_{t+1}^{(d)}}$.\n- Hedging strategy: Short one call option, hedge with $\\Delta_{t}$ shares and a risk-free account position $B_{t}$.\n- Initial hedge: $B_{0}=C_{0}-\\Delta_{0}S_{0}$.\n- Pre-rebalancing hedging error: $e_{t}=\\Delta_{t-1}S_{t}+B_{t-1}R-C_{t}$ for $t=1, 2, \\dots, N$.\n- Rebalancing: The hedge is rebalanced to $\\Delta_{t}$ at time $t$ for $t=1, 2, \\dots, N-1$ under a self-financing constraint.\n- Test cases: Four specific sets of parameters ($S_{0}, u, d, R, K, N$) and realized paths are provided.\n- Output requirement: A list of lists of hedging errors $\\{e_{t}\\}_{t=1}^{N}$ for each case, rounded to $10$ decimal places.\n\nValidation verdict: The problem is valid.\nIt is scientifically grounded, being a standard exercise in the Cox-Ross-Rubinstein binomial option pricing model, a fundamental concept in computational finance. The problem is well-posed; all parameters, definitions, and constraints are provided, ensuring a unique solution can be computationally determined. The definitions of option value, risk-neutral probability, and delta are standard and correct. The problem is objective and contains no ambiguities. The no-arbitrage condition is correctly stated and satisfied by the test cases. The core of the problem is to verify the central claim of the binomial model: that a derivative's payoff can be perfectly replicated by a dynamic, self-financing trading strategy in the underlying asset and a risk-free bond. The hedging error, as defined, should therefore be theoretically zero at all time steps, with any non-zero results attributable only to floating-point numerical precision.\n\nA complete solution is now presented. The methodology is structured upon the foundational principles of discrete-time asset pricing.\n\nFirst, we construct the binomial lattice for the underlying asset price, $\\{S_{t}\\}_{t=0}^{N}$. A node in the tree at time step $i$ ($0 \\le i \\le N$) after $j$ up-moves ($0 \\le j \\le i$) has a price given by:\n$$S_{i,j} = S_{0} u^{j} d^{i-j}$$\n\nSecond, we determine the option value at each node of the tree. This is done by backward induction, starting from the known option values at maturity, $t=N$. The value of the European call option at maturity is its intrinsic value:\n$$C_{N,j} = \\max(S_{N,j} - K, 0) \\quad \\text{for } j = 0, 1, \\dots, N$$\nFor any non-terminal node $(i,j)$ where $i < N$, the no-arbitrage option value $C_{i,j}$ is the discounted expected value of the option in the next period, computed under the risk-neutral measure. The risk-neutral probability of an up-move is $q = \\frac{R-d}{u-d}$. The valuation formula is:\n$$C_{i,j} = \\frac{1}{R} \\left[ q C_{i+1,j+1} + (1-q) C_{i+1,j} \\right]$$\nThis backward recursive calculation populates the entire option value tree, $\\{C_{i,j}\\}$.\n\nThird, we implement the dynamic hedging strategy along a specified path of asset price moves. The strategy involves creating a portfolio of $\\Delta_{t}$ shares of the asset and a cash position $B_{t}$ in a risk-free account. The value of this portfolio at time $t$ is $V_t = \\Delta_t S_t + B_t$.\n\nThe strategy is initiated at $t=0$. The initial portfolio is constructed to replicate the option's value, $V_0 = C_0$. The number of shares, $\\Delta_0$, is given by the delta-hedging formula:\n$$\\Delta_{0} = \\frac{C_{1,1} - C_{1,0}}{S_{1,1} - S_{1,0}}$$\nThe initial cash position, $B_0$, is then set to ensure the portfolio value matches the option value: $B_{0} = C_{0,0} - \\Delta_{0}S_{0,0}$.\n\nThe portfolio is self-financing. This means that for any subsequent period $t > 0$, any change in the portfolio composition is financed internally, with no external cash infusions or withdrawals. At the beginning of a period $t$ (after the price move from $t-1$), the value of the portfolio from the previous period, $(\\Delta_{t-1}, B_{t-1})$, has evolved to:\n$$V_{t}^{-} = \\Delta_{t-1}S_{t} + B_{t-1}R$$\nThe problem defines the hedging error at time $t$ as the difference between this portfolio value and the theoretical option price $C_{t}$ at the new node:\n$$e_{t} = V_{t}^{-} - C_{t}$$\nA core result of the binomial model is that the replicating portfolio's value, $V_{t}^{-}$, will exactly match the option's value, $C_{t}$, at each node. Therefore, we expect $e_t = 0$ for all $t$, subject to numerical precision.\n\nAfter calculating the error, the portfolio is rebalanced for the next period (if $t < N$). The new number of shares, $\\Delta_t$, is calculated based on the current node's successor values:\n$$\\Delta_{t} = \\frac{C_{t+1}^{\\text{(up)}} - C_{t+1}^{\\text{(down)}}}{S_{t+1}^{\\text{(up)}} - S_{t+1}^{\\text{(down)}}}$$\nThe new cash position, $B_t$, is determined by the self-financing condition. The value of the portfolio is preserved during rebalancing, so the post-rebalancing value $V_t^{+} = \\Delta_t S_t + B_t$ must equal the pre-rebalancing value $V_t^{-}$. Thus, the new cash position is:\n$$B_{t} = V_{t}^{-} - \\Delta_{t}S_{t}$$\nThis process of moving along the path, calculating hedging error, and rebalancing is repeated until maturity at $t=N$. The sequence of calculated errors $\\{e_t\\}_{t=1}^N$ is the final result for the given path.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to run test cases and print results.\n    \"\"\"\n\n    test_cases = [\n        {'S0': 100.0, 'u': 1.1, 'd': 0.9, 'R': 1.02, 'K': 100.0, 'N': 4, 'path': ['U', 'D', 'U', 'U']},\n        {'S0': 50.0, 'u': 1.2, 'd': 0.8, 'R': 1.0, 'K': 50.0, 'N': 1, 'path': ['U']},\n        {'S0': 80.0, 'u': 1.25, 'd': 0.8, 'R': 1.0, 'K': 90.0, 'N': 3, 'path': ['D', 'D', 'D']},\n        {'S0': 100.0, 'u': 1.2, 'd': 0.8, 'R': 1.01, 'K': 80.0, 'N': 3, 'path': ['U', 'U', 'U']}\n    ]\n\n    results = []\n    for case in test_cases:\n        errors = _calculate_hedging_errors(\n            S0=case['S0'],\n            u=case['u'],\n            d=case['d'],\n            R=case['R'],\n            K=case['K'],\n            N=case['N'],\n            path=case['path']\n        )\n        results.append(errors)\n    \n    # Format the final output string precisely as required.\n    inner_parts = []\n    for err_list in results:\n        # Format each error to a string with the required precision.\n        # Although the errors are theoretically zero, they may be small non-zero floats.\n        # We ensure standard float representation e.g. '0.0' instead of '0'\n        # The rounding is already done, this is for formatting.\n        formatted_list = [f\"{err:.10f}\".rstrip('0').rstrip('.') if err != 0 else '0.0' for err in err_list]\n        inner_parts.append(f\"[{','.join(formatted_list)}]\")\n        \n    final_output = f\"[{','.join(inner_parts)}]\"\n    print(final_output)\n\ndef _calculate_hedging_errors(S0: float, u: float, d: float, R: float, K: float, N: int, path: list[str]) -> list[float]:\n    \"\"\"\n    Calculates the sequence of dynamic hedging errors for a given path.\n\n    Args:\n        S0: Initial asset price.\n        u: Up-move factor.\n        d: Down-move factor.\n        R: Gross risk-free return per period.\n        K: Option strike price.\n        N: Number of periods to maturity.\n        path: A list of 'U' or 'D' strings representing the realized path.\n\n    Returns:\n        A list of hedging errors {e_t} for t=1,...,N, rounded to 10 decimal places.\n    \"\"\"\n    # 1. Construct asset price and option value trees\n    # Risk-neutral probability\n    q = (R - d) / (u - d)\n\n    # Initialize trees\n    S_tree = np.zeros((N + 1, N + 1))\n    C_tree = np.zeros((N + 1, N + 1))\n\n    # Populate asset price tree S[i,j] = price at time i after j up-moves\n    for i in range(N + 1):\n        for j in range(i + 1):\n            S_tree[i, j] = S0 * (u**j) * (d**(i - j))\n\n    # Populate option value tree at maturity (t=N)\n    C_tree[N, :] = np.maximum(S_tree[N, :] - K, 0)\n\n    # Populate option value tree by backward induction\n    for i in range(N - 1, -1, -1):\n        for j in range(i + 1):\n            C_up = C_tree[i + 1, j + 1]\n            C_down = C_tree[i + 1, j]\n            C_tree[i, j] = (q * C_up + (1 - q) * C_down) / R\n\n    # 2. Trace the path and compute hedging errors\n    hedging_errors = []\n    \n    # Initial portfolio setup at t=0\n    num_ups = 0  # number of up moves from t=0\n    \n    # Initial delta (Delta_0)\n    delta_prev = (C_tree[1, 1] - C_tree[1, 0]) / (S_tree[1, 1] - S_tree[1, 0])\n    \n    # Initial bond position (B_0)\n    B_prev = C_tree[0, 0] - delta_prev * S_tree[0, 0]\n\n    # Iterate along the path from t=1 to N\n    for t in range(1, N + 1):\n        # Determine current node based on path\n        move = path[t - 1]\n        if move == 'U':\n            num_ups += 1\n        \n        # Current asset and option values at node (t, num_ups)\n        current_S = S_tree[t, num_ups]\n        current_C = C_tree[t, num_ups]\n        \n        # Value of hedge portfolio before rebalancing\n        portfolio_val_pre_rebalance = delta_prev * current_S + B_prev * R\n        \n        # Calculate hedging error e_t\n        error = portfolio_val_pre_rebalance - current_C\n        hedging_errors.append(round(error, 10))\n\n        # Rebalance the portfolio for the next period (if not at maturity)\n        if t < N:\n            # Calculate new delta (Delta_t) at the current node\n            delta_curr = (C_tree[t + 1, num_ups + 1] - C_tree[t + 1, num_ups]) / \\\n                         (S_tree[t + 1, num_ups + 1] - S_tree[t + 1, num_ups])\n            \n            # Calculate new bond position (B_t) to maintain self-financing\n            # New portfolio value V_t+ must equal V_t-\n            B_curr = portfolio_val_pre_rebalance - delta_curr * current_S\n            \n            # Update portfolio for the next iteration\n            delta_prev = delta_curr\n            B_prev = B_curr\n\n    return hedging_errors\n\nif __name__ == \"__main__\":\n    solve()\n```"}, {"introduction": "Once the logic of replication is clear, the binomial tree becomes a versatile tool for valuing a vast universe of financial instruments. Its power lies in its adaptability, particularly in defining the payoffs at maturity. This exercise demonstrates this flexibility by having you price a capped call option, where the payoff is limited, a feature common in structured products [@problem_id:2412781]. You'll see how a simple change to the terminal condition allows the same backward induction algorithm to handle non-standard contracts.", "id": "2412781", "problem": "Consider a frictionless market with no arbitrage. A single risky asset has current price $S_0 = 100$ and evolves over $N = 3$ equal-length periods according to a recombining binomial tree with constant per-period up factor $u = 1.2$ and down factor $d = 0.9$. The risk-free asset grows at a constant per-period effective rate $r = 0.05$, so the per-period gross return is $R = 1 + r = 1.05$. The risky asset pays no dividends. \n\nA European capped call option written on the risky asset has strike $K = 100$ and cap amount $C = 15$. Its payoff at maturity $T$ is given by $\\min\\!\\big(\\max(S_T - K, 0), C\\big)$. Assume the binomial model and parameters above hold for the entire life of the option.\n\nUnder the no-arbitrage principle in this binomial model, compute the arbitrage-free price at time $t=0$ of this capped call option. Express your final answer in the same currency units as $S_0$ and round your answer to $4$ significant figures. Do not include any currency symbol in your final numerical entry.", "solution": "The problem as stated is valid. It is a self-contained, scientifically grounded problem in quantitative finance. All necessary parameters for the binomial option pricing model are provided: the initial asset price $S_0$, the up-factor $u$, the down-factor $d$, the risk-free rate $r$, the number of periods $N$, and the specific payoff structure of the derivative (a European capped call option with strike $K$ and cap $C$). The model is based on the fundamental principle of no-arbitrage, a cornerstone of financial theory. The no-arbitrage condition for the existence of a unique risk-neutral probability, $d < R < u$, where $R = 1+r$, is satisfied. Given $d=0.9$, $u=1.2$, and $R=1.05$, we have $0.9 < 1.05 < 1.2$. Therefore, the problem is well-posed and a unique arbitrage-free price can be computed.\n\nThe price of the European capped call option at time $t=0$, denoted $V_0$, is determined by the principle of risk-neutral valuation. This principle states that the current price of a derivative is the discounted expected value of its future payoff, where the expectation is taken under the risk-neutral probability measure and the discounting is done at the risk-free rate.\n\nFirst, we must compute the risk-neutral probability, $q$, of an upward movement in the asset price. The formula for $q$ is derived from the condition that the expected return on the risky asset, under the risk-neutral measure, must equal the risk-free return.\n$$\nq S_0 u + (1-q) S_0 d = S_0 R\n$$\nSolving for $q$, we get:\n$$\nq = \\frac{R - d}{u - d}\n$$\nSubstituting the given values: $R = 1.05$, $u = 1.2$, and $d = 0.9$.\n$$\nq = \\frac{1.05 - 0.9}{1.2 - 0.9} = \\frac{0.15}{0.30} = 0.5\n$$\nThe probability of a downward movement is $1 - q = 1 - 0.5 = 0.5$.\n\nThe problem involves $N=3$ periods. The price of the underlying asset at maturity, $S_T = S_3$, can take on $N+1 = 4$ distinct values. Let $j$ be the number of upward price movements in the $N$ periods. The asset price at maturity is given by $S_3(j) = S_0 u^j d^{N-j}$. The possible terminal prices are:\n-   For $j=3$ (3 ups): $S_3(3) = 100 \\times (1.2)^3 = 100 \\times 1.728 = 172.8$\n-   For $j=2$ (2 ups, 1 down): $S_3(2) = 100 \\times (1.2)^2 \\times (0.9)^1 = 100 \\times 1.44 \\times 0.9 = 129.6$\n-   For $j=1$ (1 up, 2 downs): $S_3(1) = 100 \\times (1.2)^1 \\times (0.9)^2 = 100 \\times 1.2 \\times 0.81 = 97.2$\n-   For $j=0$ (3 downs): $S_3(0) = 100 \\times (0.9)^3 = 100 \\times 0.729 = 72.9$\n\nNext, we calculate the option payoff at maturity, $V_3$, for each of these terminal asset prices. The payoff is defined as $V_3 = \\min(\\max(S_3 - K, 0), C)$, with strike $K=100$ and cap $C=15$.\n-   Payoff at $S_3(3) = 172.8$: $V_3(3) = \\min(\\max(172.8 - 100, 0), 15) = \\min(72.8, 15) = 15$.\n-   Payoff at $S_3(2) = 129.6$: $V_3(2) = \\min(\\max(129.6 - 100, 0), 15) = \\min(29.6, 15) = 15$.\n-   Payoff at $S_3(1) = 97.2$: $V_3(1) = \\min(\\max(97.2 - 100, 0), 15) = \\min(0, 15) = 0$.\n-   Payoff at $S_3(0) = 72.9$: $V_3(0) = \\min(\\max(72.9 - 100, 0), 15) = \\min(0, 15) = 0$.\n\nThe arbitrage-free price at time $t=0$ is the present value of the expected payoff under the risk-neutral measure. The probability of achieving the state with $j$ up-moves in $N$ periods follows a binomial distribution with probability $q$. This probability is given by $\\binom{N}{j} q^j (1-q)^{N-j}$.\n$$\nV_0 = \\frac{1}{R^N} \\sum_{j=0}^{N} \\binom{N}{j} q^j (1-q)^{N-j} V_3(j)\n$$\nSubstituting $N=3$, $R=1.05$, and $q=0.5$:\n$$\nV_0 = \\frac{1}{(1.05)^3} \\left[ \\binom{3}{0}(0.5)^3 V_3(0) + \\binom{3}{1}(0.5)^3 V_3(1) + \\binom{3}{2}(0.5)^3 V_3(2) + \\binom{3}{3}(0.5)^3 V_3(3) \\right]\n$$\nThe binomial coefficients are $\\binom{3}{0}=1$, $\\binom{3}{1}=3$, $\\binom{3}{2}=3$, $\\binom{3}{3}=1$.\n$$\nV_0 = \\frac{(0.5)^3}{(1.05)^3} \\left[ 1 \\cdot V_3(0) + 3 \\cdot V_3(1) + 3 \\cdot V_3(2) + 1 \\cdot V_3(3) \\right]\n$$\nSubstituting the calculated payoff values:\n$$\nV_0 = \\frac{0.125}{(1.05)^3} \\left[ 1 \\cdot 0 + 3 \\cdot 0 + 3 \\cdot 15 + 1 \\cdot 15 \\right]\n$$\n$$\nV_0 = \\frac{0.125}{(1.05)^3} \\left[ 45 + 15 \\right] = \\frac{0.125 \\times 60}{(1.05)^3} = \\frac{7.5}{(1.05)^3}\n$$\nNow, we compute the numerical value.\n$$\n(1.05)^3 = 1.157625\n$$\n$$\nV_0 = \\frac{7.5}{1.157625} \\approx 6.4788506...\n$$\nThe problem requires the answer to be rounded to $4$ significant figures.\n$$\nV_0 \\approx 6.479\n$$\nThis is the arbitrage-free price of the European capped call option at time $t=0$.", "answer": "$$\n\\boxed{6.479}\n$$"}, {"introduction": "Beyond simple pricing, the binomial framework is an excellent laboratory for exploring the complex dynamics of option sensitivities, or \"Greeks.\" This advanced practice delves into the behavior of an American call option on a stock paying a high dividend, forcing you to incorporate the critical decision of early exercise. You will investigate the option's time decay, or Theta ($\\Theta$), and uncover the counter-intuitive yet important scenario where an option can gain value as maturity approaches [@problem_id:2412797], a key concept for any trader managing American options.", "id": "2412797", "problem": "Consider an American call option on a dividend-paying stock modeled on a two-step Cox–Ross–Rubinstein (CRR) binomial tree. The stock price at time $t=0$ is $S_0 = 100$. The option has strike $K = 95$ and maturity $T = 0.5$ years. The continuously compounded risk-free interest rate is $r = 0.02$ per year, the continuous dividend yield is $q = 0.08$ per year, and the annualized volatility is $\\sigma = 0.20$. The tree uses $N=2$ equal time steps, so $\\Delta t = T/N = 0.25$. In the CRR model, the up and down factors are $u = e^{\\sigma \\sqrt{\\Delta t}}$ and $d = 1/u$, and the risk-neutral probability is $p^\\ast = \\dfrac{e^{(r-q)\\Delta t} - d}{u - d}$. At each node, the time-$\\Delta t$ discount factor is $e^{-r \\Delta t}$. The American call value at a node equals the maximum of its continuation value (the discounted risk-neutral expectation of next-step option values) and its immediate exercise value.\n\nDefine the discrete Theta $\\Theta$ at $t=0$ and $S=S_0$ as the finite-difference approximation of the partial derivative of the option value with respect to time, holding $S$ fixed. Approximate $C(t+\\Delta t, S_0)$ by linear interpolation between the two time-$\\Delta t$ option values at prices $S_0 u$ and $S_0 d$ to obtain a value at $S=S_0$. Then compute the discrete Theta as\n$$\n\\Theta \\approx \\frac{C(t+\\Delta t, S_0) - C(t, S_0)}{\\Delta t}.\n$$\nUsing this framework, determine which statement is correct.\n\nA. For the given parameters, the discrete $\\Theta$ at $t=0$ and $S_0=100$ is positive. More generally, in a multi-period binomial model with a continuous dividend yield $q$ that exceeds $r$, there can be regions in the continuation set for in-the-money states where the American call exhibits positive $\\Theta$.\n\nB. For the given parameters, the discrete $\\Theta$ at $t=0$ and $S_0=100$ is negative; time decay always reduces the value of a call, regardless of dividends, so $\\Theta<0$ at all nodes.\n\nC. For the given parameters, the discrete $\\Theta$ at $t=0$ and $S_0=100$ is zero because immediate exercise is optimal at $t=0$.\n\nD. Positive $\\Theta$ for an American call can occur only at nodes where immediate exercise is optimal; otherwise $\\Theta$ is non-positive.", "solution": "The problem statement is subjected to validation before a solution is attempted.\n\n**Step 1: Extract Givens**\n-   Model: two-step Cox–Ross–Rubinstein (CRR) binomial tree for an American call option.\n-   Initial stock price: $S_0 = 100$.\n-   Strike price: $K = 95$.\n-   Maturity: $T = 0.5$ years.\n-   Number of time steps: $N=2$.\n-   Time step duration: $\\Delta t = T/N = 0.25$ years.\n-   Continuously compounded risk-free interest rate: $r = 0.02$ per year.\n-   Continuous dividend yield: $q = 0.08$ per year.\n-   Annualized volatility: $\\sigma = 0.20$.\n-   Up-move factor: $u = e^{\\sigma \\sqrt{\\Delta t}}$.\n-   Down-move factor: $d = 1/u$.\n-   Risk-neutral probability: $p^\\ast = \\dfrac{e^{(r-q)\\Delta t} - d}{u - d}$.\n-   Time-$\\Delta t$ discount factor: $e^{-r \\Delta t}$.\n-   American call value rule: at any node, the value is the maximum of its continuation value and its immediate exercise value.\n-   Discrete Theta definition: $\\Theta \\approx \\frac{C(t+\\Delta t, S_0) - C(t, S_0)}{\\Delta t}$, where $C(t+\\Delta t, S_0)$ is obtained by linear interpolation of option values at time $t+\\Delta t$.\n\n**Step 2: Validate Using Extracted Givens**\n-   **Scientific Grounding**: The problem uses the standard CRR binomial model, a fundamental tool in computational finance. All definitions and parameters are standard and scientifically valid. The condition $q > r$ is a key feature, which is realistic and leads to non-trivial behavior for American options.\n-   **Well-Posedness**: The problem is well-posed. It provides all necessary data and a clear, unambiguous procedure to calculate the discrete Theta. A unique numerical solution exists.\n-   **Objectivity**: The problem is stated in precise, objective, mathematical language.\n\n**Step 3: Verdict and Action**\nThe problem is valid. It is scientifically sound, well-posed, and objective. A solution will be derived.\n\n**Derivation**\n\nFirst, we calculate the parameters for the binomial model.\nThe time step is $\\Delta t = T/N = 0.5 / 2 = 0.25$.\nThe up and down factors are:\n$$ u = e^{\\sigma \\sqrt{\\Delta t}} = e^{0.20 \\sqrt{0.25}} = e^{0.10} \\approx 1.105171 $$\n$$ d = 1/u = e^{-0.10} \\approx 0.904837 $$\nThe risk-neutral probability $p^\\ast$ is:\n$$ p^\\ast = \\frac{e^{(r-q)\\Delta t} - d}{u - d} = \\frac{e^{(0.02-0.08)(0.25)} - e^{-0.10}}{e^{0.10} - e^{-0.10}} = \\frac{e^{-0.015} - e^{-0.10}}{e^{0.10} - e^{-0.10}} $$\n$$ p^\\ast \\approx \\frac{0.985112 - 0.904837}{1.105171 - 0.904837} = \\frac{0.080275}{0.200334} \\approx 0.40069 $$\nThe single-period discount factor is:\n$$ e^{-r\\Delta t} = e^{-0.02 \\times 0.25} = e^{-0.005} \\approx 0.9950125 $$\n\nNext, we construct the stock price tree for $N=2$ steps.\n-   Time $t=0$: $S_0 = 100$.\n-   Time $t=\\Delta t=0.25$:\n    -   $S_u = S_0 u \\approx 100 \\times 1.105171 = 110.5171$\n    -   $S_d = S_0 d \\approx 100 \\times 0.904837 = 90.4837$\n-   Time $t=2\\Delta t=0.5$:\n    -   $S_{uu} = S_u u \\approx 110.5171 \\times 1.105171 = 122.140$\n    -   $S_{ud} = S_u d = S_d u = S_0 = 100.000$\n    -   $S_{dd} = S_d d \\approx 90.4837 \\times 0.904837 = 81.873$\n\nNow, we value the American call option by backward induction from maturity $T=0.5$. The strike is $K=95$. The option value is $C = \\max(S-K, 0)$ at expiration.\n-   At node $(uu)$: $C_{uu} = \\max(S_{uu} - K, 0) = \\max(122.140 - 95, 0) = 27.140$.\n-   At node $(ud)$: $C_{ud} = \\max(S_{ud} - K, 0) = \\max(100.000 - 95, 0) = 5.000$.\n-   At node $(dd)$: $C_{dd} = \\max(S_{dd} - K, 0) = \\max(81.873 - 95, 0) = 0$.\n\nNext, we step back to $t=\\Delta t=0.25$ and calculate the option values, checking for early exercise.\n-   At node $(u)$:\n    -   Continuation value: $C_{u, \\text{cont}} = e^{-r\\Delta t} [p^\\ast C_{uu} + (1-p^\\ast) C_{ud}] \\approx 0.9950125 [0.40069 \\times 27.140 + 0.59931 \\times 5.000] \\approx 0.9950125 [10.8730 + 2.9966] \\approx 13.800$.\n    -   Immediate exercise value: $C_{u, \\text{exer}} = \\max(S_u - K, 0) = \\max(110.5171 - 95, 0) = 15.5171$.\n    -   The option value is $C_u = \\max(C_{u, \\text{cont}}, C_{u, \\text{exer}}) = \\max(13.800, 15.5171) = 15.5171$. Early exercise is optimal at this node.\n-   At node $(d)$:\n    -   Continuation value: $C_{d, \\text{cont}} = e^{-r\\Delta t} [p^\\ast C_{ud} + (1-p^\\ast) C_{dd}] \\approx 0.9950125 [0.40069 \\times 5.000 + 0.59931 \\times 0] \\approx 0.9950125 [2.00345] \\approx 1.993$.\n    -   Immediate exercise value: $C_{d, \\text{exer}} = \\max(S_d - K, 0) = \\max(90.4837 - 95, 0) = 0$.\n    -   The option value is $C_d = \\max(C_{d, \\text{cont}}, C_{d, \\text{exer}}) = \\max(1.993, 0) = 1.993$.\n\nFinally, we step back to $t=0$ to find the initial option value, $C_0 = C(t=0, S_0)$.\n-   At node $(0)$:\n    -   Continuation value: $C_{0, \\text{cont}} = e^{-r\\Delta t} [p^\\ast C_u + (1-p^\\ast) C_d] \\approx 0.9950125 [0.40069 \\times 15.5171 + (1-0.40069) \\times 1.993] \\approx 0.9950125 [6.2163 + 1.1944] \\approx 0.9950125 \\times 7.4107 \\approx 7.374$.\n    -   Immediate exercise value: $C_{0, \\text{exer}} = \\max(S_0 - K, 0) = \\max(100 - 95, 0) = 5$.\n    -   The option value is $C(t=0, S_0) = C_0 = \\max(C_{0, \\text{cont}}, C_{0, \\text{exer}}) = \\max(7.374, 5) = 7.374$. Early exercise is not optimal at $t=0$.\n\nNow we calculate the discrete Theta. We have $C(t=0, S_0) \\approx 7.374$. We need to find $C(t=\\Delta t, S_0)$ by linear interpolation between $C_u$ and $C_d$ at stock prices $S_u$ and $S_d$.\nThe value to find is at $S=S_0=100$, between $(S_d, C_d) \\approx (90.4837, 1.993)$ and $(S_u, C_u) \\approx (110.5171, 15.5171)$.\n$$ C(\\Delta t, S_0) \\approx C_d + \\left(\\frac{S_0 - S_d}{S_u - S_d}\\right)(C_u - C_d) $$\n$$ C(\\Delta t, S_0) \\approx 1.993 + \\left(\\frac{100 - 90.4837}{110.5171 - 90.4837}\\right)(15.5171 - 1.993) $$\n$$ C(\\Delta t, S_0) \\approx 1.993 + \\left(\\frac{9.5163}{20.0334}\\right)(13.5241) \\approx 1.993 + 0.47501 \\times 13.5241 \\approx 1.993 + 6.4241 \\approx 8.417 $$\nThe discrete Theta is then:\n$$ \\Theta \\approx \\frac{C(\\Delta t, S_0) - C(0, S_0)}{\\Delta t} \\approx \\frac{8.417 - 7.374}{0.25} = \\frac{1.043}{0.25} = 4.172 $$\nThe calculated discrete Theta is positive.\n\n**Option-by-Option Analysis**\n\n**A. For the given parameters, the discrete $\\Theta$ at $t=0$ and $S_0=100$ is positive. More generally, in a multi-period binomial model with a continuous dividend yield $q$ that exceeds $r$, there can be regions in the continuation set for in-the-money states where the American call exhibits positive $\\Theta$.**\nOur calculation yields $\\Theta \\approx 4.172$, which is positive. This confirms the first part of the statement. The second part provides the correct theoretical justification. For an American call, the holder forgoes dividends. When the dividend yield $q$ is large (specifically, $q>r$), this represents a significant opportunity cost. As time passes and maturity approaches, the present value of the stream of foregone dividends decreases. This reduction in holding cost can increase the option's value, contributing a positive component to Theta that may outweigh the standard negative time decay component (related to the passage of time and increasing present value of the strike). This effect is most pronounced for in-the-money options that are close to, but not yet at, the early exercise boundary. Our calculation at $t=0$ shows exactly this: the option is in-the-money ($S_0>K$) but not exercised ($C_0 > S_0-K$), and $\\Theta$ is positive.\n**Verdict: Correct.**\n\n**B. For the given parameters, the discrete $\\Theta$ at $t=0$ and $S_0=100$ is negative; time decay always reduces the value of a call, regardless of dividends, so $\\Theta<0$ at all nodes.**\nThe calculation shows $\\Theta > 0$, directly contradicting the first claim. The second claim, that time decay is always negative for a call, is a common oversimplification. It is generally false for American call options on stocks with high dividend yields, as explained for option A.\n**Verdict: Incorrect.**\n\n**C. For the given parameters, the discrete $\\Theta$ at $t=0$ and $S_0=100$ is zero because immediate exercise is optimal at $t=0$.**\nOur calculation shows that at $t=0$, the option's continuation value is $C_0 \\approx 7.374$, while the immediate exercise value is $5$. Since $7.374 > 5$, immediate exercise is **not** optimal. The premise of the statement is false. Consequently, the entire statement is invalid. The calculated Theta is also not zero.\n**Verdict: Incorrect.**\n\n**D. Positive $\\Theta$ for an American call can occur only at nodes where immediate exercise is optimal; otherwise $\\Theta$ is non-positive.**\nThis statement is theoretically and factually wrong. Our calculation provides a counterexample: at $t=0$, $\\Theta$ is positive, but it is not optimal to exercise. In principle, positive Theta for an American call is a phenomenon that occurs in the *continuation region* (where one does not exercise), typically when an option is in-the-money and the early exercise boundary is approaching. It signals that the benefit of waiting (due to decreasing cost of foregone dividends) outweighs the cost of waiting (standard time decay). If exercise is optimal, the option's value is simply $C=S-K$, and its value no longer evolves according to the option pricing dynamics but simply tracks the stock price minus the strike. The continuous-time Theta, $\\partial C/\\partial t$, would be zero at an exercise point.\n**Verdict: Incorrect.**", "answer": "$$\\boxed{A}$$"}]}