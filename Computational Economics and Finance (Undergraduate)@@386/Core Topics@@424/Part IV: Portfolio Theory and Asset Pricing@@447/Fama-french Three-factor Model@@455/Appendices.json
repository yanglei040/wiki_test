{"hands_on_practices": [{"introduction": "The Fama-French three-factor model provides a powerful baseline for explaining asset returns, but a critical skill for any financial analyst is to test whether the model can be improved by including new variables. This practice exercise [@problem_id:2392196] demonstrates how to use the F-test to formally assess whether a proposed new factor, in this case, the aggregate dividend yield $DY_{t}$, provides statistically significant incremental explanatory power. By comparing the sum of squared residuals from the baseline model to an augmented model, you will apply a cornerstone of econometric analysis for evaluating nested models, a crucial skill in model development.", "id": "2392196", "problem": "Consider testing whether a predictive variable, the aggregate dividend yield, adds incremental explanatory power for portfolio excess returns after controlling for the Fama-French three-factor model (FF3). You observe monthly data for $T=240$ months on a test asset’s excess return $R_{t}-R_{f,t}$, the market excess return $R_{m,t}-R_{f,t}$, the size factor $\\mathrm{SMB}_{t}$ (Small Minus Big), the value factor $\\mathrm{HML}_{t}$ (High Minus Low), and the dividend yield $\\mathrm{DY}_{t}$. You estimate two Ordinary Least Squares (OLS) regressions:\n\nBaseline FF3 model with intercept:\n$$\nR_{t}-R_{f,t} \\;=\\; \\alpha \\;+\\; \\beta_{m}\\,\\big(R_{m,t}-R_{f,t}\\big) \\;+\\; \\beta_{s}\\,\\mathrm{SMB}_{t} \\;+\\; \\beta_{h}\\,\\mathrm{HML}_{t} \\;+\\; \\varepsilon_{t}.\n$$\n\nAugmented model adding dividend yield:\n$$\nR_{t}-R_{f,t} \\;=\\; \\alpha' \\;+\\; \\beta'_{m}\\,\\big(R_{m,t}-R_{f,t}\\big) \\;+\\; \\beta'_{s}\\,\\mathrm{SMB}_{t} \\;+\\; \\beta'_{h}\\,\\mathrm{HML}_{t} \\;+\\; \\gamma\\,\\mathrm{DY}_{t} \\;+\\; u_{t}.\n$$\n\nBoth models include an intercept. The dividend yield series $\\mathrm{DY}_{t}$ is linearly independent of the FF3 regressors in the sample, and all regressors are observed without error. Let $S_{0}$ denote the sum of squared residuals from the baseline FF3 model and $S_{1}$ denote the sum of squared residuals from the augmented model. You obtain $S_{0}=0.216$ and $S_{1}=0.204$. The number of estimated parameters is $k_{0}=4$ for the baseline model and $k_{1}=5$ for the augmented model.\n\nAt the $5\\%$ significance level, which statement is most appropriate regarding whether the dividend yield has any remaining explanatory power for the asset’s excess returns after accounting for the three FF3 factors?\n\nA. Yes. The reduction in residual variation is statistically significant at the $5\\%$ level, indicating incremental explanatory power for $\\mathrm{DY}_{t}$.\n\nB. No. The value factor already spans dividend yield, making $\\mathrm{DY}_{t}$ perfectly collinear and non-identifiable in the augmented regression.\n\nC. No. The reduction in residual variation is too small to be statistically distinguishable at the $5\\%$ level given $T=240$.\n\nD. Inconclusive. Because no intercept is included, the test for incremental explanatory power cannot be conducted.", "solution": "The problem statement must first be validated for scientific and logical integrity.\n\nThe given data and conditions are as follows:\n- The number of observations is $T=240$ months.\n- The dependent variable is the test asset's excess return, $R_{t}-R_{f,t}$.\n- The baseline (restricted) model is the Fama-French three-factor model with an intercept:\n$$ R_{t}-R_{f,t} \\;=\\; \\alpha \\;+\\; \\beta_{m}\\,\\big(R_{m,t}-R_{f,t}\\big) \\;+\\; \\beta_{s}\\,\\mathrm{SMB}_{t} \\;+\\; \\beta_{h}\\,\\mathrm{HML}_{t} \\;+\\; \\varepsilon_{t} $$\nThe number of estimated parameters in this model is $k_{0}=4$ (corresponding to $\\alpha$, $\\beta_{m}$, $\\beta_{s}$, and $\\beta_{h}$). The sum of squared residuals from this model is $S_{0}=0.216$.\n\n- The augmented (unrestricted) model adds the dividend yield, $\\mathrm{DY}_{t}$:\n$$ R_{t}-R_{f,t} \\;=\\; \\alpha' \\;+\\; \\beta'_{m}\\,\\big(R_{m,t}-R_{f,t}\\big) \\;+\\; \\beta'_{s}\\,\\mathrm{SMB}_{t} \\;+\\; \\beta'_{h}\\,\\mathrm{HML}_{t} \\;+\\; \\gamma\\,\\mathrm{DY}_{t} \\;+\\; u_{t} $$\nThe number of estimated parameters in this model is $k_{1}=5$ (corresponding to $\\alpha'$, $\\beta'_{m}$, $\\beta'_{s}$, $\\beta'_{h}$, and $\\gamma$). The sum of squared residuals from this model is $S_{1}=0.204$.\n\n- A key condition is that $\\mathrm{DY}_{t}$ is linearly independent of the other regressors.\n- The significance level for the test is specified as $5\\%$.\n\nThe problem is scientifically grounded in the domain of financial econometrics, specifically asset pricing model testing. It is well-posed, providing all necessary information to conduct a hypothesis test on the incremental explanatory power of a variable. The stated conditions and data are self-contained and consistent. No flaws are identified. The problem is therefore valid, and we may proceed with the solution.\n\nThe question is whether the dividend yield, $\\mathrm{DY}_{t}$, has incremental explanatory power. This is equivalent to testing the null hypothesis $H_{0}: \\gamma = 0$ against the alternative hypothesis $H_{A}: \\gamma \\neq 0$ in the augmented model. The standard procedure for testing such a restriction on nested linear models is the F-test.\n\nThe F-statistic is formulated as:\n$$ F = \\frac{(S_{0} - S_{1}) / q}{(S_{1}) / (T - k_{1})} $$\nwhere:\n- $S_{0}$ is the sum of squared residuals from the restricted model ($0.216$).\n- $S_{1}$ is the sum of squared residuals from the unrestricted model ($0.204$).\n- $q$ is the number of restrictions, which is the difference in the number of parameters between the two models. Here, $q = k_{1} - k_{0} = 5 - 4 = 1$.\n- $T$ is the number of observations ($240$).\n- $k_{1}$ is the number of parameters in the unrestricted model ($5$).\n\nSubstituting the given values into the formula:\n$$ F = \\frac{(0.216 - 0.204) / 1}{(0.204) / (240 - 5)} = \\frac{0.012}{0.204 / 235} $$\nCalculation of the F-statistic yields:\n$$ F = \\frac{0.012}{0.000868085...} \\approx 13.8235 $$\n\nThis calculated F-statistic must be compared to the critical value from an F-distribution with $(q, T-k_1)$ degrees of freedom at the specified significance level of $5\\%$. The degrees of freedom are $(1, 235)$.\n\nThe critical value, $F_{c}$, for an F-distribution with $(1, 235)$ degrees of freedom at the $\\alpha = 0.05$ significance level is sought. For large denominator degrees of freedom, the F-distribution with $1$ numerator degree of freedom approaches a chi-squared distribution with $1$ degree of freedom. The $95$th percentile of a $\\chi^2(1)$ distribution is $3.841$. A more precise value for $F_{0.05}(1, 235)$ from statistical tables or software is approximately $3.882$.\n\nWe compare the calculated F-statistic with the critical value:\n$$ F_{calculated} \\approx 13.82 > F_{critical} \\approx 3.882 $$\nSince the calculated F-statistic is greater than the critical value, we reject the null hypothesis $H_{0}: \\gamma = 0$. The result is statistically significant at the $5\\%$ level. This indicates that the addition of the dividend yield variable, $\\mathrm{DY}_{t}$, leads to a statistically significant reduction in the sum of squared residuals. Therefore, $\\mathrm{DY}_{t}$ possesses incremental explanatory power for the asset's excess returns beyond that provided by the Fama-French three-factor model.\n\nNow, we evaluate each option.\n\nA. Yes. The reduction in residual variation is statistically significant at the $5\\%$ level, indicating incremental explanatory power for $\\mathrm{DY}_{t}$.\nThis statement is a direct and accurate conclusion from our F-test. The test has confirmed that the reduction in the sum of squared residuals from $S_0=0.216$ to $S_1=0.204$ is statistically significant, which by definition means $\\mathrm{DY}_{t}$ has explanatory power.\n**Verdict: Correct.**\n\nB. No. The value factor already spans dividend yield, making $\\mathrm{DY}_{t}$ perfectly collinear and non-identifiable in the augmented regression.\nThis statement is factually incorrect based on the problem's premises. The problem explicitly states that \"The dividend yield series $\\mathrm{DY}_{t}$ is linearly independent of the FF3 regressors in the sample.\" This rules out perfect collinearity. If perfect collinearity were present, the OLS estimation of the augmented model would not have been possible.\n**Verdict: Incorrect.**\n\nC. No. The reduction in residual variation is too small to be statistically distinguishable at the $5\\%$ level given $T=240$.\nThis statement claims the opposite of our finding. The F-test, which is the correct procedure to determine if a reduction in residual variation is \"too small,\" has shown that the reduction is, in fact, statistically significant. The magnitude of the reduction cannot be judged in isolation; it must be evaluated relative to the residual variance and sample size, which is precisely what the F-statistic does. Our calculation proved the reduction is significant.\n**Verdict: Incorrect.**\n\nD. Inconclusive. Because no intercept is included, the test for incremental explanatory power cannot be conducted.\nThis statement is based on a false premise. The problem explicitly states \"Both models include an intercept,\" and the model equations clearly show intercept terms ($\\alpha$ and $\\alpha'$). The parameter counts $k_0=4$ and $k_1=5$ are also consistent with the presence of an intercept.\n**Verdict: Incorrect.**", "answer": "$$\\boxed{A}$$"}, {"introduction": "After identifying a characteristic that explains returns, such as an ESG score, the next practical step is to construct a tradable portfolio that captures its associated risk premium. This exercise [@problem_id:2392242] guides you through creating a factor-mimicking portfolio using constrained optimization, a core technique in modern quantitative finance. You will build a portfolio that has a specific, target exposure to the novel 'ESG' characteristic while simultaneously neutralizing its exposure to the original Fama-French factors ($R_{m,t}-R_{f,t}$, $\\mathrm{SMB}_{t}$, and $\\mathrm{HML}_{t}$).", "id": "2392242", "problem": "You are given a cross-section of assets and their exposures relevant to the Fama-French three-factor model (FF3) and a novel characteristic. The Fama-French three-factor model (FF3) encompasses the Market factor, Small-Minus-Big (SMB), and High-Minus-Low (HML). The novel characteristic is an Environmental, Social, and Governance (ESG) score. Your task is to construct minimum-variance factor-mimicking portfolios for the ESG characteristic under specified linear exposure constraints using a given panel of asset excess returns.\n\nLet there be $N=6$ assets and $T=10$ time periods. Let $R \\in \\mathbb{R}^{T \\times N}$ denote the matrix of asset excess returns in decimal form, where row $t$ contains the $N$ asset excess returns for period $t$. The data for $R$ are:\n- Row $1$: $(0.012, 0.008, 0.015, 0.005, 0.010, 0.011)$\n- Row $2$: $(-0.020, -0.015, -0.018, -0.022, -0.017, -0.019)$\n- Row $3$: $(0.025, 0.020, 0.028, 0.018, 0.022, 0.024)$\n- Row $4$: $(0.005, 0.007, 0.004, 0.009, 0.006, 0.005)$\n- Row $5$: $(0.030, 0.026, 0.033, 0.021, 0.027, 0.029)$\n- Row $6$: $(-0.010, -0.012, -0.009, -0.013, -0.011, -0.010)$\n- Row $7$: $(0.018, 0.014, 0.020, 0.012, 0.016, 0.017)$\n- Row $8$: $(-0.005, -0.006, -0.004, -0.007, -0.005, -0.005)$\n- Row $9$: $(0.022, 0.019, 0.024, 0.016, 0.020, 0.021)$\n- Row $10$: $(0.003, 0.004, 0.002, 0.005, 0.003, 0.003)$\n\nLet $\\Sigma \\in \\mathbb{R}^{N \\times N}$ denote the covariance matrix of asset excess returns computed as the population covariance estimator:\n$$\n\\Sigma \\;=\\; \\frac{1}{T} \\sum_{t=1}^{T} \\left( r_t - \\bar{r} \\right)\\left( r_t - \\bar{r} \\right)^{\\top},\n$$\nwhere $r_t \\in \\mathbb{R}^{N}$ is the $t$-th row of $R$ and $\\bar{r} \\in \\mathbb{R}^{N}$ is the vector of time-series means of the asset returns.\n\nYou are also given exposure vectors for each asset to the FF3 factors and the ESG characteristic. Let $f^{\\text{MKT}}, f^{\\text{SMB}}, f^{\\text{HML}}, f^{\\text{ESG}} \\in \\mathbb{R}^{N}$ denote the exposures per asset:\n- $f^{\\text{MKT}} = (1.10, 0.90, 1.20, 0.80, 1.00, 1.05)$\n- $f^{\\text{SMB}} = (-0.30, 0.50, -0.20, 0.70, 0.10, -0.40)$\n- $f^{\\text{HML}} = (0.60, -0.20, 0.40, -0.50, 0.00, 0.30)$\n- $f^{\\text{ESG}} = (0.80, 0.20, -0.40, 1.10, -0.60, 0.30)$\n\nA factor-mimicking portfolio is a vector of portfolio weights $w \\in \\mathbb{R}^{N}$ that is chosen to minimize the portfolio variance subject to linear exposure constraints. Formally, for a given constraint matrix $A \\in \\mathbb{R}^{K \\times N}$ and target exposure vector $b \\in \\mathbb{R}^{K}$, the weights $w$ solve:\n$$\n\\min_{w \\in \\mathbb{R}^{N}} \\; w^{\\top}\\Sigma w \\quad \\text{subject to} \\quad A w = b.\n$$\n\nConsider the following four test cases, each specifying a set of constraints. Let $\\mathbf{1} \\in \\mathbb{R}^{N}$ denote the vector of ones.\n\n- Test case $1$ (self-financing, neutral to FF3, unit ESG exposure):\n  - Constraints: $\\mathbf{1}^{\\top} w = 0$, $(f^{\\text{MKT}})^{\\top} w = 0$, $(f^{\\text{SMB}})^{\\top} w = 0$, $(f^{\\text{HML}})^{\\top} w = 0$, $(f^{\\text{ESG}})^{\\top} w = 1$.\n- Test case $2$ (self-financing, neutral to FF3, negative unit ESG exposure):\n  - Constraints: $\\mathbf{1}^{\\top} w = 0$, $(f^{\\text{MKT}})^{\\top} w = 0$, $(f^{\\text{SMB}})^{\\top} w = 0$, $(f^{\\text{HML}})^{\\top} w = 0$, $(f^{\\text{ESG}})^{\\top} w = -1$.\n- Test case $3$ (fully invested, neutral to FF3, half ESG exposure):\n  - Constraints: $\\mathbf{1}^{\\top} w = 1$, $(f^{\\text{MKT}})^{\\top} w = 0$, $(f^{\\text{SMB}})^{\\top} w = 0$, $(f^{\\text{HML}})^{\\top} w = 0$, $(f^{\\text{ESG}})^{\\top} w = 0.5$.\n- Test case $4$ (self-financing, neutral to FF3, zero ESG exposure; boundary case):\n  - Constraints: $\\mathbf{1}^{\\top} w = 0$, $(f^{\\text{MKT}})^{\\top} w = 0$, $(f^{\\text{SMB}})^{\\top} w = 0$, $(f^{\\text{HML}})^{\\top} w = 0$, $(f^{\\text{ESG}})^{\\top} w = 0$.\n\nFor each test case, compute the minimum-variance factor-mimicking portfolio $w$ and report the portfolio variance $v = w^{\\top} \\Sigma w$ as a real number. The return inputs are decimals (unitless), and the reported $v$ must be unitless.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of test cases $1$ through $4$, for example: \"[v1,v2,v3,v4]\".", "solution": "The problem presented is a standard exercise in quantitative finance: the construction of minimum-variance factor-mimicking portfolios under a set of linear constraints. This is a canonical constrained quadratic optimization problem.\n\nThe problem is defined as follows:\n$$ \\min_{w \\in \\mathbb{R}^{N}} \\; v = w^{\\top}\\Sigma w $$\nsubject to the linear equality constraints:\n$$ A w = b $$\nwhere $w \\in \\mathbb{R}^{N}$ is the vector of portfolio weights, $\\Sigma \\in \\mathbb{R}^{N \\times N}$ is the covariance matrix of asset excess returns, $A \\in \\mathbb{R}^{K \\times N}$ is the matrix of constraint coefficients (factor exposures), and $b \\in \\mathbb{R}^{K}$ is the vector of target exposures. Here, the number of assets is $N=6$ and the number of constraints is $K=5$.\n\nThe solution to this problem is derived systematically using the method of Lagrange multipliers. The Lagrangian function $\\mathcal{L}$ is formulated as:\n$$ \\mathcal{L}(w, \\lambda) = w^{\\top}\\Sigma w - \\lambda^{\\top}(Aw - b) $$\nwhere $\\lambda \\in \\mathbb{R}^{K}$ is the vector of Lagrange multipliers.\n\nThe first-order necessary condition for a minimum is found by setting the gradient of the Lagrangian with respect to $w$ to zero:\n$$ \\frac{\\partial \\mathcal{L}}{\\partial w} = 2\\Sigma w - A^{\\top}\\lambda = \\mathbf{0} $$\nAssuming the covariance matrix $\\Sigma$ is invertible, we can solve for $w$:\n$$ w = \\frac{1}{2} \\Sigma^{-1} A^{\\top} \\lambda $$\nTo find $\\lambda$, we substitute this expression for $w$ back into the constraint equation $Aw=b$:\n$$ A \\left( \\frac{1}{2} \\Sigma^{-1} A^{\\top} \\lambda \\right) = b $$\n$$ \\left( A \\Sigma^{-1} A^{\\top} \\right) \\lambda = 2b $$\nThe matrix $A \\Sigma^{-1} A^{\\top}$ is invertible provided that $\\Sigma$ is positive definite and $A$ has full row rank. Both conditions are met in this problem. Thus, we can solve for $\\lambda$:\n$$ \\lambda = 2 \\left( A \\Sigma^{-1} A^{\\top} \\right)^{-1} b $$\nSubstituting $\\lambda$ back into the equation for $w$ yields the optimal weight vector $w^{\\star}$:\n$$ w^{\\star} = \\Sigma^{-1} A^{\\top} \\left( A \\Sigma^{-1} A^{\\top} \\right)^{-1} b $$\nThe minimum portfolio variance $v$ is then given by $v = (w^{\\star})^{\\top}\\Sigma w^{\\star}$. By substituting the expression for $w^{\\star}$, we arrive at a more direct formula for the variance:\n$$ v = \\left( \\Sigma^{-1}A^{\\top}(A\\Sigma^{-1}A^{\\top})^{-1}b \\right)^{\\top} \\Sigma \\left( \\Sigma^{-1}A^{\\top}(A\\Sigma^{-1}A^{\\top})^{-1}b \\right) $$\n$$ v = b^{\\top} \\left( (A\\Sigma^{-1}A^{\\top})^{-1} \\right)^{\\top} (A\\Sigma^{-1})^{\\top} \\Sigma \\Sigma^{-1} A^{\\top} (A\\Sigma^{-1}A^{\\top})^{-1} b $$\n$$ v = b^{\\top} (A\\Sigma^{-1}A^{\\top})^{-1} A \\Sigma^{-1} A^{\\top} (A\\Sigma^{-1}A^{\\top})^{-1} b $$\n$$ v = b^{\\top} (A\\Sigma^{-1}A^{\\top})^{-1} b $$\nThis final expression is computationally efficient and will be used to solve for the variance in each test case.\n\nThe computational procedure is as follows:\n$1$. The asset excess return covariance matrix $\\Sigma \\in \\mathbb{R}^{6 \\times 6}$ is computed from the provided data matrix $R \\in \\mathbb{R}^{10 \\times 6}$ using the specified population covariance formula: $\\Sigma = \\frac{1}{T} \\sum_{t=1}^{T} ( r_t - \\bar{r} )( r_t - \\bar{r} )^{\\top}$, where $T=10$ is the number of time periods, $r_t$ is the vector of returns at time $t$, and $\\bar{r}$ is the time-series mean of returns for each asset.\n\n$2$. The constraint matrix $A \\in \\mathbb{R}^{5 \\times 6}$ is constructed by stacking the vector of ones $\\mathbf{1}$ and the factor exposure vectors $f^{\\text{MKT}}$, $f^{\\text{SMB}}$, $f^{\\text{HML}}$, and $f^{\\text{ESG}}$ as its rows:\n$$ A = \\begin{pmatrix} \\mathbf{1}^{\\top} \\\\ (f^{\\text{MKT}})^{\\top} \\\\ (f^{\\text{SMB}})^{\\top} \\\\ (f^{\\text{HML}})^{\\top} \\\\ (f^{\\text{ESG}})^{\\top} \\end{pmatrix} $$\n\n$3$. For each of the four test cases, the corresponding target exposure vector $b \\in \\mathbb{R}^{5}$ is defined.\n\n$4$. The core matrix $M = (A\\Sigma^{-1}A^{\\top})^{-1}$ is computed.\n\n$5$. The minimum variance for each case is calculated as $v = b^{\\top}Mb$.\n\nThe evaluation of the test cases proceeds as follows:\n- For test case $1$, $b_1 = [0, 0, 0, 0, 1]^{\\top}$. The variance is $v_1 = b_1^{\\top}Mb_1$.\n- For test case $2$, $b_2 = [0, 0, 0, 0, -1]^{\\top}$. Since $b_2 = -b_1$, the variance is $v_2 = (-b_1)^{\\top}M(-b_1) = b_1^{\\top}Mb_1 = v_1$. The variances for cases $1$ and $2$ must be identical.\n- For test case $3$, $b_3 = [1, 0, 0, 0, 0.5]^{\\top}$. The variance is $v_3 = b_3^{\\top}Mb_3$.\n- For test case $4$, $b_4 = [0, 0, 0, 0, 0]^{\\top}$. The target vector is the zero vector. This immediately implies that the variance is $v_4 = \\mathbf{0}^{\\top}M\\mathbf{0} = 0$. The optimal portfolio is simply $w^{\\star} = \\mathbf{0}$, which has zero variance and satisfies the homogeneous constraints $A w = \\mathbf{0}$.\n\nThe following implementation carries out these calculations numerically.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes minimum-variance factor-mimicking portfolio variances for four test cases.\n    \"\"\"\n    # Number of assets N and time periods T\n    N = 6\n    T = 10\n\n    # Data from the problem statement\n    # Asset excess returns matrix R in decimal form\n    R = np.array([\n        [0.012, 0.008, 0.015, 0.005, 0.010, 0.011],\n        [-0.020, -0.015, -0.018, -0.022, -0.017, -0.019],\n        [0.025, 0.020, 0.028, 0.018, 0.022, 0.024],\n        [0.005, 0.007, 0.004, 0.009, 0.006, 0.005],\n        [0.030, 0.026, 0.033, 0.021, 0.027, 0.029],\n        [-0.010, -0.012, -0.009, -0.013, -0.011, -0.010],\n        [0.018, 0.014, 0.020, 0.012, 0.016, 0.017],\n        [-0.005, -0.006, -0.004, -0.007, -0.005, -0.005],\n        [0.022, 0.019, 0.024, 0.016, 0.020, 0.021],\n        [0.003, 0.004, 0.002, 0.005, 0.003, 0.003]\n    ])\n\n    # Factor exposure vectors\n    f_mkt = np.array([1.10, 0.90, 1.20, 0.80, 1.00, 1.05])\n    f_smb = np.array([-0.30, 0.50, -0.20, 0.70, 0.10, -0.40])\n    f_hml = np.array([0.60, -0.20, 0.40, -0.50, 0.00, 0.30])\n    f_esg = np.array([0.80, 0.20, -0.40, 1.10, -0.60, 0.30])\n\n    # Step 1: Compute the population covariance matrix Sigma.\n    # The problem asks for the population covariance estimator, which corresponds\n    # to using a divisor of T (ddof=0 in numpy.cov).\n    Sigma = np.cov(R, rowvar=False, ddof=0)\n\n    # Step 2: Construct the constraint matrix A.\n    # The rows of A are the constraint vectors.\n    ones_vec = np.ones(N)\n    A = np.vstack([ones_vec, f_mkt, f_smb, f_hml, f_esg])\n\n    # Step 3: Compute the core matrix M = (A * Sigma_inv * A^T)^-1.\n    try:\n        Sigma_inv = np.linalg.inv(Sigma)\n        M = np.linalg.inv(A @ Sigma_inv @ A.T)\n    except np.linalg.LinAlgError as e:\n        # This case should not be reached given the problem data.\n        print(f\"Error during matrix inversion: {e}\")\n        return\n\n    # Step 4: Define the target exposure vectors 'b' for each test case.\n    test_cases = [\n        # Case 1: self-financing, FF3-neutral, unit ESG exposure\n        {\"b\": np.array([0., 0., 0., 0., 1.])},\n        # Case 2: self-financing, FF3-neutral, negative unit ESG exposure\n        {\"b\": np.array([0., 0., 0., 0., -1.])},\n        # Case 3: fully invested, FF3-neutral, half ESG exposure\n        {\"b\": np.array([1., 0., 0., 0., 0.5])},\n        # Case 4: self-financing, FF3-neutral, zero ESG exposure (boundary case)\n        {\"b\": np.array([0., 0., 0., 0., 0.])}\n    ]\n\n    results = []\n    # Step 5: Calculate the minimum variance for each test case.\n    for case in test_cases:\n        b = case[\"b\"]\n        variance = b.T @ M @ b\n        results.append(variance)\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```"}, {"introduction": "Static models like the standard Fama-French framework assume constant factor premia, a simplification that may not hold in the real world where risk premia vary with economic conditions. This advanced exercise [@problem_id:2392227] introduces a dynamic approach by modeling factor premia within a regime-switching framework, where their values change based on the unobserved 'state' of the economy. You will apply the Hamilton filter, a key algorithm for Hidden Markov Models, to calculate the model's likelihood and infer the probability of being in different economic regimes over time.", "id": "2392227", "problem": "You are given a two-state regime-switching formulation of the Fama-French three-factor model for expected returns. For a single asset with factor exposures $\\beta_{M}$, $\\beta_{S}$, and $\\beta_{H}$ to the market, Small Minus Big (SMB), and High Minus Low (HML) factors respectively, the conditional expected excess return is assumed to depend on the latent state $S_t \\in \\{1,2\\}$ of the economy through state-dependent factor premia for the SMB and HML factors. Specifically, for each time $t$, the observed excess return $r_t$ is modeled as\n$$\nr_t \\mid S_t=s \\sim \\mathcal{N}\\left(\\mu_s, \\sigma^2\\right), \\quad s \\in \\{1,2\\},\n$$\nwith conditional mean\n$$\n\\mu_s \\;=\\; \\beta_{M}\\,\\lambda_{M} \\;+\\; \\beta_{S}\\,\\lambda_{SMB}^{(s)} \\;+\\; \\beta_{H}\\,\\lambda_{HML}^{(s)},\n$$\nwhere $\\lambda_{M}$ is the market premium, and $\\lambda_{SMB}^{(s)}$ and $\\lambda_{HML}^{(s)}$ are the state-dependent factor premia for the SMB and HML factors. The latent state $\\{S_t\\}$ follows a time-homogeneous first-order Markov chain with transition matrix\n$$\nP \\;=\\; \n\\begin{bmatrix}\np_{11} & p_{12} \\\\\np_{21} & p_{22}\n\\end{bmatrix},\n\\quad \\text{where } p_{ij} = \\mathbb{P}(S_t=j \\mid S_{t-1}=i), \\; p_{12}=1-p_{11}, \\; p_{21}=1-p_{22}.\n$$\nLet the initial state distribution be $\\pi_0 = \\big(\\mathbb{P}(S_0=1), \\mathbb{P}(S_0=2)\\big)$.\n\nYour task is to compute, for each provided test case:\n- the total log-likelihood of the observed sequence $\\{r_t\\}_{t=1}^{T}$ under the specified model, and\n- the filtered probability $\\mathbb{P}(S_T=1 \\mid r_1,\\dots,r_T)$.\n\nAll returns are excess returns expressed in decimal form. The Gaussian likelihood must be computed using the exact density with variance $\\sigma^2$ as specified. The results must be reported as real numbers rounded to six decimal places.\n\nTest Suite:\n- Test Case A:\n  - Parameters:\n    - $\\beta_{M} = 1.1$, $\\beta_{S} = 0.4$, $\\beta_{H} = -0.2$.\n    - $\\lambda_{M} = 0.006$.\n    - $\\lambda_{SMB}^{(1)} = 0.004$, $\\lambda_{HML}^{(1)} = 0.002$; $\\lambda_{SMB}^{(2)} = -0.001$, $\\lambda_{HML}^{(2)} = 0.005$.\n    - $\\sigma = 0.01$.\n    - $P = \\begin{bmatrix} 0.9 & 0.1 \\\\ 0.2 & 0.8 \\end{bmatrix}$.\n    - $\\pi_0 = \\big(2/3,\\, 1/3\\big)$.\n  - Observations (decimal): $[\\,0.006,\\,0.009,\\,0.004,\\,0.007,\\,0.005,\\,0.008\\,]$.\n- Test Case B:\n  - Parameters:\n    - $\\beta_{M} = 0.9$, $\\beta_{S} = 0.7$, $\\beta_{H} = 0.3$.\n    - $\\lambda_{M} = 0.005$.\n    - $\\lambda_{SMB}^{(1)} = 0.003$, $\\lambda_{HML}^{(1)} = 0.001$; $\\lambda_{SMB}^{(2)} = -0.002$, $\\lambda_{HML}^{(2)} = -0.001$.\n    - $\\sigma = 0.008$.\n    - $P = \\begin{bmatrix} 0.99 & 0.01 \\\\ 0.02 & 0.98 \\end{bmatrix}$.\n    - $\\pi_0 = \\big(2/3,\\,1/3\\big)$.\n  - Observations (decimal): $[\\,0.0065,\\,0.0072,\\,0.0023,\\,0.0030,\\,0.0068\\,]$.\n- Test Case C (edge case with equal state means):\n  - Parameters:\n    - $\\beta_{M} = 1.0$, $\\beta_{S} = 0.5$, $\\beta_{H} = 0.5$.\n    - $\\lambda_{M} = 0.004$.\n    - $\\lambda_{SMB}^{(1)} = 0.002$, $\\lambda_{HML}^{(1)} = 0.001$; $\\lambda_{SMB}^{(2)} = 0.002$, $\\lambda_{HML}^{(2)} = 0.001$.\n    - $\\sigma = 0.012$.\n    - $P = \\begin{bmatrix} 0.6 & 0.4 \\\\ 0.3 & 0.7 \\end{bmatrix}$.\n    - $\\pi_0 = \\big(3/7,\\,4/7\\big)$.\n  - Observations (decimal): $[\\,0.0040,\\,0.0060,\\,0.0050,\\,0.0070\\,]$.\n\nRequired final output format:\n- Your program must produce a single line containing a list with one entry per test case.\n- Each entry must be a two-element list containing:\n  - the total log-likelihood (rounded to six decimal places), and\n  - the filtered probability $\\mathbb{P}(S_T=1 \\mid r_1,\\dots,r_T)$ (rounded to six decimal places).\n- The exact string format must be:\n  - $[\\,[\\ell_A, p_A],\\,[\\ell_B, p_B],\\,[\\ell_C, p_C]\\,]$, where $\\ell_\\cdot$ and $p_\\cdot$ are the respective rounded values for Test Cases A, B, and C.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, for example, $[[\\ell_A,p_A],[\\ell_B,p_B],[\\ell_C,p_C]]$.", "solution": "The problem requires the computation of the total log-likelihood and the final filtered state probability for a sequence of asset returns generated by a two-state regime-switching Fama-French model. This is a classic application of a Hidden Markov Model (HMM), for which the forward-pass of the forward-backward algorithm, commonly known as the Hamilton filter, is the standard solution method.\n\nThe model is specified as follows:\nThe observed excess return at time $t$, denoted $r_t$, is drawn from a Gaussian distribution whose parameters depend on a latent state $S_t \\in \\{1, 2\\}$.\n$$\nr_t \\mid S_t=s \\sim \\mathcal{N}(\\mu_s, \\sigma^2)\n$$\nThe state-dependent mean $\\mu_s$ is a linear function of three factors, with state-dependent premia for the SMB and HML factors:\n$$\n\\mu_s = \\beta_{M}\\lambda_{M} + \\beta_{S}\\lambda_{SMB}^{(s)} + \\beta_{H}\\lambda_{HML}^{(s)}\n$$\nThe latent state sequence $\\{S_t\\}$ is a first-order Markov chain with a given transition matrix $P$ and an initial state distribution $\\pi_0$ for the state $S_0$. The observations are provided from $t=1$ to $t=T$.\n\nThe objective is to compute the total log-likelihood $\\mathcal{L} = \\log \\mathbb{P}(r_1, \\dots, r_T)$ and the filtered probability $\\mathbb{P}(S_T=1 \\mid r_1, \\dots, r_T)$. This is accomplished by recursively computing the filtered probabilities $\\pi_{t|t} = (\\mathbb{P}(S_t=1 \\mid \\mathcal{F}_t), \\mathbb{P}(S_t=2 \\mid \\mathcal{F}_t))$, where $\\mathcal{F}_t = \\{r_1, \\dots, r_t\\}$ is the information set at time $t$.\n\nThe Hamilton filter algorithm proceeds iteratively for $t = 1, \\dots, T$:\n\n1.  **Initialization**: The process begins at $t=1$. We need the probability distribution of the state $S_1$ before observing $r_1$. This is the predicted probability at $t=1$, conditioned on information at $t=0$ (which is none, observation-wise). The problem specifies the distribution of $S_0$ as $\\pi_0$. The predicted probability vector for $S_1$ is thus $\\pi_{1|0} = \\pi_0 P$, where $P$ is the transition matrix. For the first step of the recursion, we use $\\pi_{0|0} = \\pi_0$.\n\n2.  **Recursive Step ($t=1, \\dots, T$)**: Given the filtered probability from the previous step, $\\pi_{t-1|t-1} = (\\mathbb{P}(S_{t-1}=1 \\mid \\mathcal{F}_{t-1}), \\mathbb{P}(S_{t-1}=2 \\mid \\mathcal{F}_{t-1}))$, we perform two operations: prediction and update.\n\n    a.  **Prediction Step**: We predict the state probability for time $t$ using the Markov property:\n        $$\n        \\pi_{t|t-1} = \\pi_{t-1|t-1} P\n        $$\n        where $\\pi_{t|t-1}(j) = \\mathbb{P}(S_t=j \\mid \\mathcal{F}_{t-1})$.\n\n    b.  **Update Step**: Upon observing $r_t$, we update our belief about the state $S_t$ using Bayes' theorem.\n        First, we calculate the conditional probability density of the observation $r_t$ for each state $s \\in \\{1, 2\\}$, which we denote $\\eta_s(r_t)$:\n        $$\n        \\eta_s(r_t) = f(r_t \\mid S_t=s) = \\frac{1}{\\sqrt{2\\pi}\\sigma} \\exp\\left(-\\frac{(r_t - \\mu_s)^2}{2\\sigma^2}\\right)\n        $$\n        The marginal likelihood of observing $r_t$, given past observations $\\mathcal{F}_{t-1}$, is a weighted average of these densities, with weights given by the predicted probabilities:\n        $$\n        f(r_t \\mid \\mathcal{F}_{t-1}) = \\sum_{s=1}^{2} f(r_t \\mid S_t=s) \\mathbb{P}(S_t=s \\mid \\mathcal{F}_{t-1}) = \\sum_{s=1}^{2} \\eta_s(r_t) \\pi_{t|t-1}(s)\n        $$\n        The log-likelihood of the entire sequence is the sum of the logarithms of these marginal likelihoods for each time step:\n        $$\n        \\mathcal{L} = \\sum_{t=1}^{T} \\log f(r_t \\mid \\mathcal{F}_{t-1})\n        $$\n        Finally, the filtered probability vector $\\pi_{t|t}$ is calculated by updating the predicted probability with the information from $r_t$:\n        $$\n        \\pi_{t|t}(s) = \\mathbb{P}(S_t=s \\mid \\mathcal{F}_t) = \\frac{f(r_t \\mid S_t=s) \\mathbb{P}(S_t=s \\mid \\mathcal{F}_{t-1})}{f(r_t \\mid \\mathcal{F}_{t-1})} = \\frac{\\eta_s(r_t) \\pi_{t|t-1}(s)}{\\sum_{k=1}^{2} \\eta_k(r_t) \\pi_{t|t-1}(k)}\n        $$\n\nThis recursive procedure is applied for $t=1, \\dots, T$. After the final step $t=T$, the accumulated sum is the total log-likelihood $\\mathcal{L}$, and the final filtered probability vector is $\\pi_{T|T}$. The problem requests the first component of this vector, $\\mathbb{P}(S_T=1 \\mid \\mathcal{F}_T)$.\n\nFor Test Case C, we note that the state-dependent means are identical, $\\mu_1 = \\mu_2$. This implies that the conditional densities are also identical, $\\eta_1(r_t) = \\eta_2(r_t)$ for any $r_t$. As a result, the observation $r_t$ provides no information to distinguish between the states. The update step simplifies to $\\pi_{t|t}(s) = \\pi_{t|t-1}(s)$. Consequently, the filtered probabilities evolve solely according to the Markov chain dynamics: $\\pi_{t|t} = \\pi_{t-1|t-1} P$. Since the provided initial distribution $\\pi_0 = (3/7, 4/7)$ is the stationary distribution of the given transition matrix $P$, it follows that $\\pi_{t|t} = \\pi_0$ for all $t$. The final filtered probability $\\mathbb{P}(S_T=1 \\mid \\mathcal{F}_T)$ must therefore be $3/7$. The log-likelihood is simply the sum of log-densities evaluated at a single mean $\\mu = \\mu_1 = \\mu_2$.\n\nThe implementation will follow this logic for each test case, calculating state-dependent means, then iterating through the observations to perform the filter recursion.", "answer": "```python\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Solves the regime-switching Fama-French model problem for all test cases.\n    \"\"\"\n\n    test_cases = [\n        {\n            \"betas\": (1.1, 0.4, -0.2), # (beta_M, beta_S, beta_H)\n            \"lambda_M\": 0.006,\n            \"lambda_s1\": (0.004, 0.002), # (lambda_SMB_1, lambda_HML_1)\n            \"lambda_s2\": (-0.001, 0.005), # (lambda_SMB_2, lambda_HML_2)\n            \"sigma\": 0.01,\n            \"P\": np.array([[0.9, 0.1], [0.2, 0.8]]),\n            \"pi0\": np.array([2/3, 1/3]),\n            \"observations\": [0.006, 0.009, 0.004, 0.007, 0.005, 0.008]\n        },\n        {\n            \"betas\": (0.9, 0.7, 0.3),\n            \"lambda_M\": 0.005,\n            \"lambda_s1\": (0.003, 0.001),\n            \"lambda_s2\": (-0.002, -0.001),\n            \"sigma\": 0.008,\n            \"P\": np.array([[0.99, 0.01], [0.02, 0.98]]),\n            \"pi0\": np.array([2/3, 1/3]),\n            \"observations\": [0.0065, 0.0072, 0.0023, 0.0030, 0.0068]\n        },\n        {\n            \"betas\": (1.0, 0.5, 0.5),\n            \"lambda_M\": 0.004,\n            \"lambda_s1\": (0.002, 0.001),\n            \"lambda_s2\": (0.002, 0.001),\n            \"sigma\": 0.012,\n            \"P\": np.array([[0.6, 0.4], [0.3, 0.7]]),\n            \"pi0\": np.array([3/7, 4/7]),\n            \"observations\": [0.0040, 0.0060, 0.0050, 0.0070]\n        }\n    ]\n\n    def run_filter(case):\n        \"\"\"\n        Implements the Hamilton filter for a single test case.\n        \"\"\"\n        beta_m, beta_s, beta_h = case[\"betas\"]\n        lambda_m = case[\"lambda_M\"]\n        lambda_smb1, lambda_hml1 = case[\"lambda_s1\"]\n        lambda_smb2, lambda_hml2 = case[\"lambda_s2\"]\n        sigma = case[\"sigma\"]\n        P = case[\"P\"]\n        pi0 = case[\"pi0\"]\n        observations = case[\"observations\"]\n\n        # Calculate state-dependent means\n        mu1 = beta_m * lambda_m + beta_s * lambda_smb1 + beta_h * lambda_hml1\n        mu2 = beta_m * lambda_m + beta_s * lambda_smb2 + beta_h * lambda_hml2\n        \n        mus = np.array([mu1, mu2])\n\n        total_log_likelihood = 0.0\n        # Initialize filtered probability with pi0 (for state S_0)\n        filtered_prob = pi0\n\n        for r_t in observations:\n            # Prediction step: P(S_t | F_{t-1}) = P(S_{t-1} | F_{t-1}) * P\n            predicted_prob = filtered_prob @ P\n            \n            # Likelihood of observation r_t in each state\n            # eta_s = P(r_t | S_t=s)\n            emission_likelihoods = norm.pdf(r_t, loc=mus, scale=sigma)\n            \n            # Marginal likelihood of observation r_t\n            # f(r_t | F_{t-1})\n            marginal_likelihood = np.dot(predicted_prob, emission_likelihoods)\n            \n            # Update total log-likelihood\n            total_log_likelihood += np.log(marginal_likelihood)\n            \n            # Update step: P(S_t | F_t)\n            # using Bayes' rule: P(S_t | r_t, F_{t-1}) approx P(S_t | F_t)\n            numerator = predicted_prob * emission_likelihoods\n            filtered_prob = numerator / marginal_likelihood\n        \n        final_filtered_prob_s1 = filtered_prob[0]\n        \n        return [round(total_log_likelihood, 6), round(final_filtered_prob_s1, 6)]\n\n    results = []\n    for case in test_cases:\n        results.append(run_filter(case))\n\n    # Format the output string to match the required format exactly.\n    # The format [l,p] should not have spaces after the comma.\n    formatted_results = [f\"[{res[0]},{res[1]}]\" for res in results]\n    final_output_str = f\"[{','.join(formatted_results)}]\"\n    \n    print(final_output_str)\n\nsolve()\n```"}]}