{"hands_on_practices": [{"introduction": "The first step in applying the Feynman-Kac theorem is to correctly define the underlying stochastic process and derive its dynamics. This exercise focuses on that crucial preliminary step, where you will use Itô's lemma for a ratio of two correlated assets to find the correct stochastic differential equation (SDE). By correctly identifying the drift and diffusion terms of the new process, you will then be able to construct the corresponding pricing partial differential equation (PDE), a foundational skill for valuing derivatives on multiple underlyings [@problem_id:2440772].", "id": "2440772", "problem": "Consider two risky assets whose ex-dividend prices under the risk-neutral measure have correlated Geometric Brownian Motion (GBM) dynamics. Specifically, let $S_{1,t}$ and $S_{2,t}$ satisfy, for $t \\in [0,T]$,\n$$\n\\frac{d S_{1,t}}{S_{1,t}} = (r - q_1)\\,dt + \\sigma_1\\,dW_{1,t}, \n\\qquad\n\\frac{d S_{2,t}}{S_{2,t}} = (r - q_2)\\,dt + \\sigma_2\\,dW_{2,t},\n$$\nwhere $r, q_1, q_2, \\sigma_1, \\sigma_2$ are constants with $\\sigma_1>0$, $\\sigma_2>0$, and the Brownian motions (BM) $W_{1,t}$ and $W_{2,t}$ satisfy $dW_{1,t}\\,dW_{2,t}=\\rho\\,dt$ for a constant correlation $\\rho \\in (-1,1)$. Define the ratio process $X_t = S_{1,t}/S_{2,t}$.\n\nConsider a European derivative that pays $\\Phi(X_T)$ units of cash at maturity $T$, where $\\Phi:\\mathbb{R}_+ \\to \\mathbb{R}$ is continuous and of at most polynomial growth. Let $v(t,x)$ denote the no-arbitrage price at time $t$ of this derivative conditional on $X_t=x$. Among the following alternatives, which pair consisting of (i) the correct Stochastic Differential Equation (SDE) for $X_t$ and (ii) the correct Partial Differential Equation (PDE) for $v(t,x)$ is valid under the given modeling assumptions?\n\nA. \nSDE: \n$$\ndX_t = X_t\\Big[(q_2-q_1)\\,dt + \\sigma_1\\,dW_{1,t} - \\sigma_2\\,dW_{2,t}\\Big].\n$$\nPDE:\n$$\nv_t + \\tfrac{1}{2}\\big(\\sigma_1^2+\\sigma_2^2-2\\rho\\sigma_1\\sigma_2\\big)x^2 v_{xx} + (q_2-q_1)\\,x\\,v_x - r\\,v = 0,\n\\quad\nv(T,x)=\\Phi(x).\n$$\n\nB.\nSDE:\n$$\ndX_t = X_t\\Big[\\big((q_2-q_1)-\\sigma_2^2+\\rho\\sigma_1\\sigma_2\\big)\\,dt + \\sigma_1\\,dW_{1,t} + \\sigma_2\\,dW_{2,t}\\Big].\n$$\nPDE:\n$$\nv_t + \\tfrac{1}{2}\\big(\\sigma_1^2+\\sigma_2^2+2\\rho\\sigma_1\\sigma_2\\big)x^2 v_{xx} + \\big((q_2-q_1)-\\sigma_2^2+\\rho\\sigma_1\\sigma_2\\big)\\,x\\,v_x - r\\,v = 0,\n\\quad\nv(T,x)=\\Phi(x).\n$$\n\nC.\nSDE:\n$$\ndX_t = X_t\\Big[\\big((q_2-q_1)+\\sigma_2^2-\\rho\\sigma_1\\sigma_2\\big)\\,dt + \\sigma_1\\,dW_{1,t} - \\sigma_2\\,dW_{2,t}\\Big].\n$$\nPDE:\n$$\nv_t + \\tfrac{1}{2}\\big(\\sigma_1^2+\\sigma_2^2-2\\rho\\sigma_1\\sigma_2\\big)x^2 v_{xx} + \\big((q_2-q_1)+\\sigma_2^2-\\rho\\sigma_1\\sigma_2\\big)\\,x\\,v_x - r\\,v = 0,\n\\quad\nv(T,x)=\\Phi(x).\n$$\n\nD.\nSDE:\n$$\ndX_t = X_t\\Big[(q_2-q_1)\\,dt + \\sigma_1\\,dW_{1,t} - \\sigma_2\\,dW_{2,t}\\Big].\n$$\nPDE:\n$$\nv_t + \\tfrac{1}{2}\\big(\\sigma_1^2+\\sigma_2^2-2\\rho\\sigma_1\\sigma_2\\big)x^2 v_{xx} + (q_2-q_1)\\,x\\,v_x = 0,\n\\quad\nv(T,x)=\\Phi(x).\n$$", "solution": "We derive the dynamics of $X_t=S_{1,t}/S_{2,t}$ from first principles and then write the pricing Partial Differential Equation (PDE) via the Feynman-Kac theorem (FK).\n\nStep $1$: Dynamics of $X_t$ using the quotient rule and Itô calculus with correlated Brownian motions.\n\nWe start from\n$$\n\\frac{d S_{1,t}}{S_{1,t}} = (r-q_1)\\,dt + \\sigma_1\\,dW_{1,t}, \n\\qquad\n\\frac{d S_{2,t}}{S_{2,t}} = (r-q_2)\\,dt + \\sigma_2\\,dW_{2,t},\n$$\nwith $dW_{1,t}\\,dW_{2,t}=\\rho\\,dt$. Write $X_t=S_{1,t}/S_{2,t}$. Using Itô’s product rule for $X_t = S_{1,t}\\cdot S_{2,t}^{-1}$,\n$$\ndX_t = \\frac{1}{S_{2,t}}\\,dS_{1,t} + S_{1,t}\\,d\\big(S_{2,t}^{-1}\\big) + dS_{1,t}\\,d\\big(S_{2,t}^{-1}\\big).\n$$\nCompute $d(S_{2,t}^{-1})$ by Itô’s lemma. Let $Y_t = S_{2,t}^{-1}$. Then\n$$\ndY_t = \\frac{\\partial Y}{\\partial s}\\Big|_{s=S_{2,t}}\\,dS_{2,t} + \\frac{1}{2}\\frac{\\partial^2 Y}{\\partial s^2}\\Big|_{s=S_{2,t}}(dS_{2,t})^2\n= -\\frac{1}{S_{2,t}^2}\\,dS_{2,t} + \\frac{1}{S_{2,t}^3}\\,(dS_{2,t})^2.\n$$\nSince $(dS_{2,t})^2 = S_{2,t}^2 \\sigma_2^2\\,dt$, we obtain\n$$\nd\\big(S_{2,t}^{-1}\\big) \n= -\\frac{1}{S_{2,t}^2} S_{2,t}\\big((r-q_2)\\,dt+\\sigma_2\\,dW_{2,t}\\big) + \\frac{1}{S_{2,t}} \\sigma_2^2\\,dt\n= \\frac{1}{S_{2,t}}\\Big(- (r-q_2) + \\sigma_2^2\\Big)dt - \\frac{\\sigma_2}{S_{2,t}}\\,dW_{2,t}.\n$$\nNow substitute:\n$$\n\\frac{1}{S_{2,t}}\\,dS_{1,t} = \\frac{S_{1,t}}{S_{2,t}}\\big((r-q_1)\\,dt + \\sigma_1\\,dW_{1,t}\\big) = X_t\\big((r-q_1)\\,dt + \\sigma_1\\,dW_{1,t}\\big),\n$$\n$$\nS_{1,t}\\,d(S_{2,t}^{-1}) = X_t\\Big(- (r-q_2) + \\sigma_2^2\\Big)dt - X_t \\sigma_2\\,dW_{2,t},\n$$\nand for the quadratic covariation term,\n$$\ndS_{1,t}\\,d(S_{2,t}^{-1}) = S_{1,t}\\sigma_1\\,dW_{1,t}\\cdot \\Big(-\\frac{\\sigma_2}{S_{2,t}}\\,dW_{2,t}\\Big) = -X_t \\sigma_1\\sigma_2\\,dW_{1,t}\\,dW_{2,t} = -X_t \\sigma_1\\sigma_2 \\rho\\,dt.\n$$\nCollecting terms,\n$$\ndX_t = X_t\\Big[\\underbrace{\\big((r-q_1) - (r-q_2) + \\sigma_2^2 - \\rho \\sigma_1\\sigma_2\\big)}_{(q_2 - q_1) + \\sigma_2^2 - \\rho \\sigma_1\\sigma_2}\\,dt + \\sigma_1\\,dW_{1,t} - \\sigma_2\\,dW_{2,t}\\Big].\n$$\nHence the drift and diffusion are\n$$\n\\mu_X = (q_2 - q_1) + \\sigma_2^2 - \\rho \\sigma_1\\sigma_2, \n\\qquad\n\\text{and} \\qquad \n\\text{diffusion vector } (\\sigma_1, -\\sigma_2).\n$$\nThe instantaneous variance of $X_t$’s multiplicative noise is\n$$\n\\sigma_X^2 := \\sigma_1^2 + \\sigma_2^2 - 2\\rho \\sigma_1\\sigma_2,\n$$\nsince $\\mathrm{Var}(\\sigma_1\\,dW_{1,t} - \\sigma_2\\,dW_{2,t}) = (\\sigma_1^2 + \\sigma_2^2 - 2\\rho \\sigma_1\\sigma_2)\\,dt$.\n\nEquivalently, one may write\n$$\ndX_t = X_t\\Big(\\mu_X\\,dt + \\sigma_X\\,dW_{X,t}\\Big),\n$$\nwhere $W_{X,t}$ is a one-dimensional Brownian motion constructed from $W_{1,t}$ and $W_{2,t}$.\n\nStep $2$: Pricing PDE via the Feynman-Kac theorem (FK).\n\nLet $v(t,x)$ denote the time-$t$ price, conditional on $X_t=x$, of the cash payoff $\\Phi(X_T)$. Under the risk-neutral measure, $X_t$ is Markov with generator\n$$\n\\mathcal{L} f(x) = \\mu_X x f'(x) + \\tfrac{1}{2}\\sigma_X^2 x^2 f''(x).\n$$\nBy the Feynman-Kac theorem, $v(t,x)$ satisfies\n$$\nv_t + \\mathcal{L} v - r\\,v = 0\n\\quad\\Longleftrightarrow\\quad\nv_t + \\tfrac{1}{2}\\big(\\sigma_1^2+\\sigma_2^2-2\\rho\\sigma_1\\sigma_2\\big)x^2 v_{xx} + \\big((q_2-q_1)+\\sigma_2^2-\\rho\\sigma_1\\sigma_2\\big) x v_x - r v = 0,\n$$\nwith terminal condition $v(T,x)=\\Phi(x)$.\n\nOption-by-option analysis:\n\n- Option A: Its SDE drift omits the terms $\\sigma_2^2 - \\rho\\sigma_1\\sigma_2$, yielding only $(q_2-q_1)$. Consequently the PDE drift coefficient of $x v_x$ is also missing $\\sigma_2^2 - \\rho\\sigma_1\\sigma_2$. The diffusion coefficient is correct, but the drift is not. Verdict: Incorrect.\n\n- Option B: The SDE uses the diffusion combination $\\sigma_1\\,dW_{1,t} + \\sigma_2\\,dW_{2,t}$ (a sum rather than the required difference), which produces the wrong instantaneous variance $\\sigma_1^2+\\sigma_2^2+2\\rho\\sigma_1\\sigma_2$ and an inconsistent drift $(q_2-q_1)-\\sigma_2^2+\\rho\\sigma_1\\sigma_2$. Both SDE and PDE are inconsistent with the correct derivation. Verdict: Incorrect.\n\n- Option C: The SDE matches the derived dynamics exactly: drift $(q_2-q_1)+\\sigma_2^2-\\rho\\sigma_1\\sigma_2$ and diffusion $\\sigma_1\\,dW_{1,t} - \\sigma_2\\,dW_{2,t}$. The PDE has the correct generator coefficients and the correct $-r v$ term for a cash payoff under the risk-neutral measure, with terminal condition $v(T,x)=\\Phi(x)$. Verdict: Correct.\n\n- Option D: The SDE has the same omission as in Option A (drift missing $\\sigma_2^2 - \\rho\\sigma_1\\sigma_2$). Furthermore, the PDE lacks the discounting term $-r v$ that is required for a cash-denominated payoff under the risk-neutral measure and also uses the incomplete drift $(q_2-q_1)$. Verdict: Incorrect.\n\nTherefore, the correct choice is Option C.", "answer": "$$\\boxed{C}$$"}, {"introduction": "The power of the Feynman-Kac theorem extends beyond stock options to a vast range of valuation problems in economics and finance. This practice applies the theorem to a model for carbon credit pricing, where the underlying is an environmental variable following a mean-reverting Ornstein-Uhlenbeck process. You will calculate the value of a hypothetical contract that includes both a future payoff and a stream of \"running costs,\" giving you hands-on experience with the full expectation formula provided by the theorem and its application to non-GBM processes [@problem_id:2440756].", "id": "2440756", "problem": "Consider a stylized carbon credit valuation problem where the underlying atmospheric carbon dioxide level deviation from a baseline, denoted by $X_t$, evolves under the Ornstein–Uhlenbeck stochastic differential equation (SDE)\n$$\ndX_t = \\left(\\alpha - \\beta X_t\\right)\\,dt + \\sigma\\,dW_t,\\quad X_0 = x_0,\n$$\nwhere $\\alpha$, $\\beta$, and $\\sigma$ are constants, $W_t$ is a standard Brownian motion, and $x_0$ is given. Let $r$ be a constant discount rate. Let the instantaneous social cost of carbon be modeled by the potential term $V(x,t) = c_0 + c_1 x$, and let the terminal payoff at time $T$ be $g(x) = q x$, for given constants $c_0$, $c_1$, $q$, and $T>0$. Define the time–$t$ value function $u(t,x)$ as the present value of the terminal payoff plus the discounted flow of the social cost, evaluated under the risk-neutral measure.\n\nAccording to the Feynman–Kac theorem, the value function $u(t,x)$ is the unique (sufficiently regular) solution to the linear parabolic partial differential equation\n$$\n\\frac{\\partial u}{\\partial t}(t,x) + \\left(\\alpha - \\beta x\\right)\\frac{\\partial u}{\\partial x}(t,x) + \\frac{1}{2}\\sigma^2 \\frac{\\partial^2 u}{\\partial x^2}(t,x) - r\\,u(t,x) + \\left(c_0 + c_1 x\\right) = 0,\n$$\nwith terminal condition\n$$\nu(T,x) = q\\,x.\n$$\nEquivalently, the Feynman–Kac representation implies, for $0 \\le t \\le T$,\n$$\nu(t,x) = \\mathbb{E}\\left[ e^{-r (T-t)}\\,q\\,X_T + \\int_t^T e^{-r (s-t)} \\left(c_0 + c_1 X_s\\right)\\,ds \\,\\bigg|\\, X_t = x \\right].\n$$\n\nTask: Write a complete, runnable program that computes $u(0,x_0)$ for the following test suite of parameter sets. For each case, the program must use the mathematical specification above and produce a single floating-point result for $u(0,x_0)$.\n\nTest Suite:\n- Case A (happy path, deterministic terminal payoff only): $(\\alpha,\\beta,\\sigma,r,T,x_0,c_0,c_1,q) = (0,0,0,0.05,1,10,0,0,1)$.\n- Case B (boundary condition with zero discounting and deterministic running cost): $(\\alpha,\\beta,\\sigma,r,T,x_0,c_0,c_1,q) = (2,1,0,0,\\ln 2,5,0,2,0)$.\n- Case C (general stochastic setup with both running and terminal components): $(\\alpha,\\beta,\\sigma,r,T,x_0,c_0,c_1,q) = (0.5,0.3,0.6,0.04,1.5,8,0,1,0.5)$.\n\nYour program must compute $u(0,x_0)$ for each of the three cases and aggregate the three results into the final output.\n\nFinal Output Format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (for example, $[a,b,c]$), where each entry is a float rounded to $6$ decimal places.\n\nNo external input or files are allowed, and no randomness in the output is permitted.\n\nAll results are dimensionless real numbers. Angles are not used. If a proportion is needed in intermediate steps, it must be handled internally as a decimal; no percentage signs may appear in the output. The final outputs must be floats as specified above.", "solution": "The problem statement will first be subjected to rigorous validation.\n\nStep 1: Extract Givens\nThe givens are as follows:\n- Stochastic Differential Equation (SDE) for $X_t$:\n$$\ndX_t = \\left(\\alpha - \\beta X_t\\right)\\,dt + \\sigma\\,dW_t,\\quad X_0 = x_0\n$$\n- Parameters: constants $\\alpha$, $\\beta$, $\\sigma$, $r$, $T > 0$, $x_0$, $c_0$, $c_1$, $q$.\n- Instantaneous social cost (potential term): $V(x,t) = c_0 + c_1 x$.\n- Terminal payoff: $g(x) = qx$.\n- Value function definition via Feynman-Kac representation:\n$$\nu(t,x) = \\mathbb{E}\\left[ e^{-r (T-t)}\\,q\\,X_T + \\int_t^T e^{-r (s-t)} \\left(c_0 + c_1 X_s\\right)\\,ds \\,\\bigg|\\, X_t = x \\right]\n$$\n- Equivalent Partial Differential Equation (PDE):\n$$\n\\frac{\\partial u}{\\partial t}(t,x) + \\left(\\alpha - \\beta x\\right)\\frac{\\partial u}{\\partial x}(t,x) + \\frac{1}{2}\\sigma^2 \\frac{\\partial^2 u}{\\partial x^2}(t,x) - r\\,u(t,x) + \\left(c_0 + c_1 x\\right) = 0\n$$\nwith terminal condition $u(T,x) = qx$.\n- Task: Compute $u(0, x_0)$ for three specified parameter sets.\n\nStep 2: Validate Using Extracted Givens\nThe problem is analyzed against the validation criteria.\n- **Scientifically Grounded**: The problem is based on the Ornstein-Uhlenbeck process and the Feynman-Kac theorem, which are standard, well-established theoretical constructs in stochastic calculus and its applications in finance and economics. The model is an archetypal example of an affine term structure model. The formulation is scientifically and mathematically sound.\n- **Well-Posed**: The problem asks for the computation of a specific conditional expectation, which, for the given linear model, has a unique analytical solution. The task reduces to the evaluation of elementary integrals. All necessary parameters are provided for each case, making the problem self-contained and solvable.\n- **Objective**: The problem is presented using precise, unambiguous mathematical language and notation. There are no subjective or opinion-based statements.\n\nStep 3: Verdict and Action\nThe problem is valid. It is a well-posed, scientifically grounded problem in computational finance. A complete solution will be provided.\n\nThe objective is to compute the value function $u(0, x_0)$ given by a specific conditional expectation. By the linearity of the expectation operator, the expression for $u(0, x_0)$ can be decomposed as:\n$$\nu(0, x_0) = q\\,e^{-rT} \\mathbb{E}[X_T | X_0=x_0] + \\int_0^T e^{-rs} \\mathbb{E}[(c_0 + c_1 X_s) | X_0=x_0]\\,ds\n$$\n$$\nu(0, x_0) = q\\,e^{-rT} \\mathbb{E}[X_T | X_0=x_0] + c_0 \\int_0^T e^{-rs}\\,ds + c_1 \\int_0^T e^{-rs} \\mathbb{E}[X_s | X_0=x_0]\\,ds\n$$\nThe volatility parameter $\\sigma$ does not appear in the expectation of $X_s$, a known property for linear SDEs.\n\nThe core of the calculation is the conditional expectation of the Ornstein-Uhlenbeck process, $\\mathbb{E}[X_s | X_0 = x_0]$. The solution to the SDE gives this expectation.\n\nFor $\\beta \\neq 0$:\n$$\n\\mathbb{E}[X_s | X_0=x_0] = x_0 e^{-\\beta s} + \\frac{\\alpha}{\\beta}(1 - e^{-\\beta s})\n$$\nFor the special case $\\beta = 0$, the SDE simplifies to $dX_t = \\alpha dt + \\sigma dW_t$, which is an arithmetic Brownian motion. The expectation is:\n$$\n\\mathbb{E}[X_s | X_0=x_0] = x_0 + \\alpha s\n$$\n\nWe will derive the solution by handling these two cases for $\\beta$ separately.\n\nCase 1: $\\beta \\neq 0$\nWe substitute the expression for $\\mathbb{E}[X_s | X_0=x_0]$ into the formula for $u(0, x_0)$. The total value is a sum of three components:\n1.  Terminal payoff component: $I_{term} = q\\,e^{-rT} \\mathbb{E}[X_T | X_0=x_0] = q\\,e^{-rT} \\left( x_0 e^{-\\beta T} + \\frac{\\alpha}{\\beta}(1 - e^{-\\beta T}) \\right)$.\n2.  Constant running cost component: $I_{run,c_0} = c_0 \\int_0^T e^{-rs}\\,ds$.\n3.  State-dependent running cost component: $I_{run,c_1} = c_1 \\int_0^T e^{-rs} \\left( x_0 e^{-\\beta s} + \\frac{\\alpha}{\\beta}(1 - e^{-\\beta s}) \\right) \\,ds$.\n\nThe integrals are evaluated analytically. Let us define a generic integral function:\n$$\n\\text{Integral}_1(k, T) = \\int_0^T e^{-ks}\\,ds = \\begin{cases} T & \\text{if } k=0 \\\\ \\frac{1 - e^{-kT}}{k} & \\text{if } k \\neq 0 \\end{cases}\n$$\nUsing this, $I_{run,c_0} = c_0 \\cdot \\text{Integral}_1(r, T)$.\nThe integral in $I_{run,c_1}$ is split:\n$$\nI_{run,c_1} = c_1 x_0 \\int_0^T e^{-(r+\\beta)s}\\,ds + \\frac{c_1 \\alpha}{\\beta} \\int_0^T (e^{-rs} - e^{-(r+\\beta)s})\\,ds\n$$\n$$\nI_{run,c_1} = c_1 x_0 \\cdot \\text{Integral}_1(r+\\beta, T) + \\frac{c_1 \\alpha}{\\beta} \\left( \\text{Integral}_1(r, T) - \\text{Integral}_1(r+\\beta, T) \\right)\n$$\nSumming these three components gives $u(0, x_0) = I_{term} + I_{run,c_0} + I_{run,c_1}$.\n\nCase 2: $\\beta = 0$\nHere, $\\mathbb{E}[X_s | X_0=x_0] = x_0 + \\alpha s$. The components are:\n1.  Terminal payoff component: $I_{term} = q\\,e^{-rT} (x_0 + \\alpha T)$.\n2.  Running cost components: $I_{run} = \\int_0^T e^{-rs} (c_0 + c_1(x_0+\\alpha s))\\,ds$. This splits into:\n$$\nI_{run} = (c_0 + c_1 x_0) \\int_0^T e^{-rs}\\,ds + c_1 \\alpha \\int_0^T s e^{-rs}\\,ds\n$$\nThe first integral is $\\text{Integral}_1(r, T)$. The second integral is a new form:\n$$\n\\text{Integral}_2(k, T) = \\int_0^T s e^{-ks}\\,ds = \\begin{cases} \\frac{T^2}{2} & \\text{if } k=0 \\\\ \\frac{1 - e^{-kT} - kTe^{-kT}}{k^2} & \\text{if } k \\neq 0 \\end{cases}\n$$\nSo for $\\beta=0$, the value is:\n$$\nu(0, x_0) = q\\,e^{-rT} (x_0 + \\alpha T) + (c_0 + c_1 x_0)\\text{Integral}_1(r, T) + c_1 \\alpha \\text{Integral}_2(r, T)\n$$\nThese closed-form expressions allow direct computation of $u(0, x_0)$ for any given set of parameters, correctly handling the singular points $k=0$ in the integrals, which correspond to $r=0$, $\\beta=0$, or $r+\\beta=0$. The implementation will be based on these derived formulas.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for u(0, x_0) for the given test cases based on the\n    analytical solution derived from the Feynman-Kac representation.\n    \"\"\"\n\n    test_cases = [\n        # Case A: (alpha, beta, sigma, r, T, x0, c0, c1, q)\n        (0.0, 0.0, 0.0, 0.05, 1.0, 10.0, 0.0, 0.0, 1.0),\n        # Case B:\n        (2.0, 1.0, 0.0, 0.0, np.log(2), 5.0, 0.0, 2.0, 0.0),\n        # Case C:\n        (0.5, 0.3, 0.6, 0.04, 1.5, 8.0, 0.0, 1.0, 0.5),\n    ]\n\n    results = []\n    for params in test_cases:\n        result = calculate_u(*params)\n        results.append(result)\n\n    # Format the output string as required.\n    print(f\"[{','.join(f'{x:.6f}' for x in results)}]\")\n\ndef integral_1(k, T):\n    \"\"\"\n    Computes the definite integral of exp(-k*s) from 0 to T.\n    Integral: ∫[0,T] e^(-ks) ds\n    \"\"\"\n    if abs(k) < 1e-9:\n        return T\n    return (1 - np.exp(-k * T)) / k\n\ndef integral_2(k, T):\n    \"\"\"\n    Computes the definite integral of s*exp(-k*s) from 0 to T.\n    Integral: ∫[0,T] s*e^(-ks) ds\n    \"\"\"\n    if abs(k) < 1e-9:\n        return T**2 / 2.0\n    return (1 - np.exp(-k * T) - k * T * np.exp(-k * T)) / k**2\n\ndef calculate_u(alpha, beta, sigma, r, T, x0, c0, c1, q):\n    \"\"\"\n    Calculates the value u(0, x0) using the derived analytical solution.\n    Handles the special case when beta is zero.\n    The parameter sigma is not used in the expectation calculation.\n    \"\"\"\n    \n    # Case when beta is effectively zero (Arithmetic Brownian Motion)\n    if abs(beta) < 1e-9:\n        # Terminal value component\n        term1 = q * np.exp(-r * T) * (x0 + alpha * T)\n        \n        # Running cost components\n        int1_r = integral_1(r, T)\n        int2_r = integral_2(r, T)\n        \n        term2 = c0 * int1_r\n        term3 = c1 * x0 * int1_r\n        term4 = c1 * alpha * int2_r\n        \n        return term1 + term2 + term3 + term4\n\n    # General case for beta != 0 (Ornstein-Uhlenbeck)\n    else:\n        # 1. Terminal payoff component\n        E_XT = x0 * np.exp(-beta * T) + (alpha / beta) * (1 - np.exp(-beta * T))\n        term1 = q * np.exp(-r * T) * E_XT\n        \n        # 2. Constant running cost component\n        int1_r = integral_1(r, T)\n        term2 = c0 * int1_r\n        \n        # 3. State-dependent running cost component\n        int1_r_beta = integral_1(r + beta, T)\n        term3_x0_part = c1 * x0 * int1_r_beta\n        term3_alpha_part = c1 * (alpha / beta) * (int1_r - int1_r_beta)\n        term3 = term3_x0_part + term3_alpha_part\n        \n        return term1 + term2 + term3\n\nif __name__ == \"__main__\":\n    solve()\n```"}, {"introduction": "The terms within the Feynman-Kac framework—the drift of the process, the diffusion, and the potential or \"killing\" term in the PDE—have distinct mathematical roles and financial interpretations. This exercise explores the subtle but important difference between modeling a cost as part of the asset's dynamics (a dividend yield) versus part of the discounting (a killing rate). By calculating and comparing option prices under both models, you will gain a deeper appreciation for how mathematical choices translate into different economic assumptions and valuation outcomes [@problem_id:2440799].", "id": "2440799", "problem": "Consider a financial market under the Risk-Neutral Measure (RNM) where an underlying asset price process $\\{S_t\\}_{t \\in [0,T]}$ follows a Geometric Brownian Motion driven by a Wiener process (Brownian Motion) $\\{W_t\\}_{t \\in [0,T]}$. Let $S_0 \\in \\mathbb{R}_{+}$ be the initial price, $r \\in \\mathbb{R}$ be the constant risk-free rate, and $\\sigma \\in \\mathbb{R}_{+}$ be the constant volatility. Fix a maturity $T \\in \\mathbb{R}_{+}$ and a strike $K \\in \\mathbb{R}_{+}$. Consider a European call option with payoff $\\varphi(S_T) = \\max(S_T - K, 0)$.\n\nTwo modeling conventions for a nonnegative, deterministic, time-dependent rate $q(t)$ are to be compared:\n\n- Model A (killing-rate model): the price function $u_A(s,t)$ solves a Partial Differential Equation (PDE) with a potential term (killing rate) $V(x,t) = q(t)$, and by the Feynman–Kac theorem,\n$$\nu_A(S_0,0) \\;=\\; \\mathbb{E}\\left[\\exp\\!\\left(-\\int_{0}^{T} \\big(r + q(t)\\big)\\,dt\\right)\\,\\varphi(S_T)\\,\\Big|\\,S_0\\right],\n$$\nwith the underlying following\n$$\ndS_t \\;=\\; r\\,S_t\\,dt \\;+\\; \\sigma\\,S_t\\,dW_t,\\quad S_0 \\;>\\; 0.\n$$\n\n- Model B (dividend-yield model): the same quantity $q(t)$ is interpreted as a continuous dividend yield entering the drift of the underlying,\n$$\ndS_t \\;=\\; \\big(r - q(t)\\big)\\,S_t\\,dt \\;+\\; \\sigma\\,S_t\\,dW_t,\\quad S_0 \\;>\\; 0,\n$$\nand the option price is given by\n$$\nu_B(S_0,0) \\;=\\; \\mathbb{E}\\left[\\exp\\!\\left(-\\int_{0}^{T} r\\,dt\\right)\\,\\varphi(S_T)\\,\\Big|\\,S_0\\right].\n$$\n\nYour task is to compute, for each specified $q(t)$ below, both $u_A(S_0,0)$ and $u_B(S_0,0)$, using only the definitions above and fundamental properties of the Geometric Brownian Motion and the Feynman–Kac theorem. Answers must be expressed in the same currency units as $S_0$ and $K$, rounded to six decimal places.\n\nUse the common parameter set\n$$\nS_0 \\;=\\; 100,\\quad K \\;=\\; 100,\\quad r \\;=\\; 0.03,\\quad \\sigma \\;=\\; 0.2,\\quad T \\;=\\; 1.\n$$\n\nTest suite (five cases for $q(t)$):\n- Case $\\#1$: $q(t) \\;=\\; 0$ for all $t \\in [0,T]$.\n- Case $\\#2$: $q(t) \\;=\\; 0.02$ for all $t \\in [0,T]$.\n- Case $\\#3$: $q(t) \\;=\\; 0.05$ for all $t \\in [0,T]$.\n- Case $\\#4$: $q(t) \\;=\\; 0.10$ for all $t \\in [0,T]$.\n- Case $\\#5$: $q(t)$ is piecewise-constant, with $q(t) \\;=\\; 0.10$ for $t \\in [0, 0.25]$ and $q(t) \\;=\\; 0$ for $t \\in (0.25, 1]$.\n\nYour program must output the results in the following order for the five cases: for each case, first output $u_A(S_0,0)$, then $u_B(S_0,0)$. The final output must be a single line containing a comma-separated list enclosed in square brackets, with ten floating-point numbers rounded to six decimals, in the order\n$$\n\\big[u_A^{(1)},\\,u_B^{(1)},\\,u_A^{(2)},\\,u_B^{(2)},\\,u_A^{(3)},\\,u_B^{(3)},\\,u_A^{(4)},\\,u_B^{(4)},\\,u_A^{(5)},\\,u_B^{(5)}\\big].\n$$", "solution": "The problem statement is subjected to validation before a solution is attempted.\n\nFirst, all givens are extracted verbatim.\n- Underlying asset price process: $\\{S_t\\}_{t \\in [0,T]}$ follows a Geometric Brownian Motion driven by a Wiener process $\\{W_t\\}_{t \\in [0,T]}$.\n- Initial price: $S_0 \\in \\mathbb{R}_{+}$.\n- Risk-free rate: $r \\in \\mathbb{R}$, constant.\n- Volatility: $\\sigma \\in \\mathbb{R}_{+}$, constant.\n- Maturity: $T \\in \\mathbb{R}_{+}$.\n- Strike: $K \\in \\mathbb{R}_{+}$.\n- Payoff function (European call): $\\varphi(S_T) = \\max(S_T - K, 0)$.\n- A nonnegative, deterministic, time-dependent rate $q(t)$.\n- Model A (killing-rate model): $u_A(S_0,0) = \\mathbb{E}\\left[\\exp\\left(-\\int_{0}^{T} (r + q(t))\\,dt\\right)\\,\\varphi(S_T)\\,\\Big|\\,S_0\\right]$, with underlying $dS_t = r\\,S_t\\,dt + \\sigma\\,S_t\\,dW_t$.\n- Model B (dividend-yield model): $u_B(S_0,0) = \\mathbb{E}\\left[\\exp\\left(-\\int_{0}^{T} r\\,dt\\right)\\,\\varphi(S_T)\\,\\Big|\\,S_0\\right]$, with underlying $dS_t = (r - q(t))\\,S_t\\,dt + \\sigma\\,S_t\\,dW_t$.\n- Common parameters: $S_0 = 100$, $K = 100$, $r = 0.03$, $\\sigma = 0.2$, $T = 1$.\n- Test cases for $q(t)$:\n    1. $q(t) = 0$ for all $t \\in [0,T]$.\n    2. $q(t) = 0.02$ for all $t \\in [0,T]$.\n    3. $q(t) = 0.05$ for all $t \\in [0,T]$.\n    4. $q(t) = 0.10$ for all $t \\in [0,T]$.\n    5. $q(t)$ is piecewise-constant, with $q(t) = 0.10$ for $t \\in [0, 0.25]$ and $q(t) = 0$ for $t \\in (0.25, 1]$.\n\nSecond, the problem is validated against the required criteria.\n- **Scientifically Grounded**: The problem is formulated within the standard Black-Scholes-Merton framework of mathematical finance. Both models presented are valid interpretations of incorporating a yield or killing rate, and their representation via the Feynman-Kac theorem is standard theory. The problem is scientifically sound.\n- **Well-Posed**: The problem is fully specified. All necessary parameters ($S_0, K, r, \\sigma, T$) and functional forms for $q(t)$ are provided. The expectations are well-defined for a Geometric Brownian Motion, ensuring a unique and stable solution exists for each case.\n- **Objective**: The problem is stated using precise mathematical and financial terminology, free of ambiguity or subjective claims.\n\nThe verdict is that the problem is **valid**. It is self-contained, scientifically grounded, and well-posed. We proceed with the solution.\n\nThe task is to compute the values of $u_A(S_0,0)$ and $u_B(S_0,0)$ for five different specifications of the rate function $q(t)$. Both models lead to expressions that can be evaluated using the Black-Scholes-Merton (BSM) formula for a European call option. The BSM price for an option with initial stock price $S_0$, strike price $K$, maturity $T$, constant risk-free rate $r$, constant continuous dividend yield $q$, and constant volatility $\\sigma$ is given by:\n$$\nC(S_0, K, T, r, q, \\sigma) = S_0 e^{-qT} N(d_1) - K e^{-rT} N(d_2)\n$$\nwhere $N(\\cdot)$ is the cumulative distribution function (CDF) of the standard normal distribution, and\n$$\nd_1 = \\frac{\\ln(S_0/K) + (r - q + \\sigma^2/2)T}{\\sigma\\sqrt{T}}\n$$\n$$\nd_2 = d_1 - \\sigma\\sqrt{T}\n$$\n\nWe now analyze each model in the context of this formula.\n\n**Model A: Killing-Rate Model**\nThe price is given by the expectation:\n$$\nu_A(S_0,0) = \\mathbb{E}\\left[\\exp\\left(-\\int_{0}^{T} (r + q(t))\\,dt\\right)\\,\\varphi(S_T)\\,\\Big|\\,S_0\\right]\n$$\nThe underlying process is $dS_t = r S_t dt + \\sigma S_t dW_t$. Since $r$ is constant and $q(t)$ is a deterministic function of time, the discount factor can be separated from the expectation:\n$$\nu_A(S_0,0) = \\exp\\left(-\\int_{0}^{T} q(t)\\,dt\\right) \\mathbb{E}\\left[\\exp(-rT)\\,\\varphi(S_T)\\,\\Big|\\,S_0\\right]\n$$\nThe remaining expectation term, $\\mathbb{E}\\left[\\exp(-rT)\\,\\varphi(S_T)\\,\\Big|\\,S_0\\right]$, is precisely the BSM price of a European call option for an underlying with drift $r$, which corresponds to the BSM formula with a dividend yield of $q=0$. Let this be $C_0 = C(S_0, K, T, r, 0, \\sigma)$. Thus, the formula for Model A is:\n$$\nu_A(S_0,0) = \\exp\\left(-\\int_{0}^{T} q(t)\\,dt\\right) \\times C_0\n$$\n\n**Model B: Dividend-Yield Model**\nThe price is given by:\n$$\nu_B(S_0,0) = \\mathbb{E}\\left[\\exp(-rT)\\,\\varphi(S_T)\\,\\Big|\\,S_0\\right]\n$$\nThe underlying process is $dS_t = (r - q(t))S_t dt + \\sigma S_t dW_t$. The solution to this SDE at time $T$ is:\n$$\nS_T = S_0 \\exp\\left(\\int_0^T (r - q(t) - \\sigma^2/2)\\,dt + \\sigma W_T\\right)\n$$\nSince $q(t)$ is deterministic, the integral is also deterministic. Let us define the time-averaged dividend yield $\\bar{q}$ as:\n$$\n\\bar{q} = \\frac{1}{T}\\int_{0}^{T} q(t)\\,dt\n$$\nThen, $\\int_0^T (r-q(t))\\,dt = (r-\\bar{q})T$. The distribution of $S_T$ is lognormal and is identical to the distribution of an asset following a GBM with a constant drift rate of $r-\\bar{q}$. The pricing formula is therefore the standard BSM formula with the constant dividend yield $q$ replaced by the average yield $\\bar{q}$:\n$$\nu_B(S_0,0) = C(S_0, K, T, r, \\bar{q}, \\sigma)\n$$\n\nWe now apply these formulas to the given test cases using the common parameters: $S_0 = 100$, $K = 100$, $r = 0.03$, $\\sigma = 0.2$, and $T = 1$. Since $S_0 = K$, the term $\\ln(S_0/K) = 0$.\n\nFirst, we calculate the baseline price $C_0 = C(100, 100, 1, 0.03, 0, 0.2)$:\n$d_1 = \\frac{(0.03 - 0 + 0.2^2/2) \\times 1}{0.2\\sqrt{1}} = \\frac{0.05}{0.2} = 0.25$.\n$d_2 = 0.25 - 0.2\\sqrt{1} = 0.05$.\n$C_0 = 100 \\times e^0 \\times N(0.25) - 100 \\times e^{-0.03 \\times 1} \\times N(0.05)$.\nUsing $N(0.25) \\approx 0.598706$ and $N(0.05) \\approx 0.519939$, we find $C_0 \\approx 9.412819$.\n\n**Case #1: $q(t) = 0$**\n- $\\int_0^T q(t)dt = 0$.\n- $\\bar{q} = 0$.\n- $u_A^{(1)} = e^{-0} \\times C_0 = C_0 \\approx 9.412819$.\n- $u_B^{(1)} = C(100, 100, 1, 0.03, 0, 0.2) = C_0 \\approx 9.412819$.\n\n**Case #2: $q(t) = 0.02$**\n- $\\int_0^T q(t)dt = 0.02 \\times 1 = 0.02$.\n- $\\bar{q} = 0.02$.\n- $u_A^{(2)} = e^{-0.02} \\times C_0 \\approx 0.980199 \\times 9.412819 \\approx 9.226391$.\n- $u_B^{(2)} = C(100, 100, 1, 0.03, 0.02, 0.2)$.\n  $d_1 = \\frac{(0.03 - 0.02 + 0.02)}{0.2} = 0.15$.\n  $d_2 = 0.15 - 0.2 = -0.05$.\n  $u_B^{(2)} = 100 e^{-0.02} N(0.15) - 100 e^{-0.03} N(-0.05) \\approx 8.267096$.\n\n**Case #3: $q(t) = 0.05$**\n- $\\int_0^T q(t)dt = 0.05 \\times 1 = 0.05$.\n- $\\bar{q} = 0.05$.\n- $u_A^{(3)} = e^{-0.05} \\times C_0 \\approx 0.951229 \\times 9.412819 \\approx 8.953530$.\n- $u_B^{(3)} = C(100, 100, 1, 0.03, 0.05, 0.2)$.\n  $d_1 = \\frac{(0.03 - 0.05 + 0.02)}{0.2} = 0$.\n  $d_2 = 0 - 0.2 = -0.2$.\n  $u_B^{(3)} = 100 e^{-0.05} N(0) - 100 e^{-0.03} N(-0.2) \\approx 6.730836$.\n\n**Case #4: $q(t) = 0.10$**\n- $\\int_0^T q(t)dt = 0.10 \\times 1 = 0.10$.\n- $\\bar{q} = 0.10$.\n- $u_A^{(4)} = e^{-0.10} \\times C_0 \\approx 0.904837 \\times 9.412819 \\approx 8.517192$.\n- $u_B^{(4)} = C(100, 100, 1, 0.03, 0.10, 0.2)$.\n  $d_1 = \\frac{(0.03 - 0.10 + 0.02)}{0.2} = -0.25$.\n  $d_2 = -0.25 - 0.2 = -0.45$.\n  $u_B^{(4)} = 100 e^{-0.10} N(-0.25) - 100 e^{-0.03} N(-0.45) \\approx 4.648986$.\n\n**Case #5: Piecewise-constant $q(t)$**\n- $q(t) = 0.10$ for $t \\in [0, 0.25]$ and $q(t) = 0$ for $t \\in (0.25, 1]$.\n- $\\int_0^T q(t)dt = \\int_0^{0.25} 0.10 dt + \\int_{0.25}^1 0 dt = 0.10 \\times 0.25 = 0.025$.\n- $\\bar{q} = \\frac{0.025}{1} = 0.025$.\n- $u_A^{(5)} = e^{-0.025} \\times C_0 \\approx 0.975310 \\times 9.412819 \\approx 9.180479$.\n- $u_B^{(5)} = C(100, 100, 1, 0.03, 0.025, 0.2)$.\n  $d_1 = \\frac{(0.03 - 0.025 + 0.02)}{0.2} = 0.125$.\n  $d_2 = 0.125 - 0.2 = -0.075$.\n  $u_B^{(5)} = 100 e^{-0.025} N(0.125) - 100 e^{-0.03} N(-0.075) \\approx 7.990990$.\n\nThese values, rounded to six decimal places, will be presented in the final output.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Computes European call option prices for two different models\n    (killing-rate and dividend-yield) based on the Feynman-Kac theorem.\n    \"\"\"\n\n    def black_scholes_call(S0, K, T, r, q, sigma):\n        \"\"\"\n        Calculates the price of a European call option using the Black-Scholes-Merton formula.\n        \"\"\"\n        if sigma <= 0 or T <= 0:\n            return max(0, S0 - K) if T == 0 else max(0, S0 * np.exp(-q * T) - K * np.exp(-r * T))\n\n        d1 = (np.log(S0 / K) + (r - q + 0.5 * sigma**2) * T) / (sigma * np.sqrt(T))\n        d2 = d1 - sigma * np.sqrt(T)\n        \n        price = S0 * np.exp(-q * T) * norm.cdf(d1) - K * np.exp(-r * T) * norm.cdf(d2)\n        return price\n\n    # Common parameters\n    S0 = 100.0\n    K = 100.0\n    r = 0.03\n    sigma = 0.2\n    T = 1.0\n\n    # Test cases for the rate function q(t)\n    test_cases = [\n        {'type': 'constant', 'q_val': 0.0},\n        {'type': 'constant', 'q_val': 0.02},\n        {'type': 'constant', 'q_val': 0.05},\n        {'type': 'constant', 'q_val': 0.10},\n        {'type': 'piecewise', 'pieces': [(0.10, 0.0, 0.25), (0.0, 0.25, 1.0)]}\n    ]\n\n    results = []\n\n    # Calculate the baseline price for q=0, which is used in Model A\n    price_q0 = black_scholes_call(S0, K, T, r, 0.0, sigma)\n\n    for case in test_cases:\n        if case['type'] == 'constant':\n            integral_q_dt = case['q_val'] * T\n        elif case['type'] == 'piecewise':\n            integral_q_dt = sum(q_val * (end_t - start_t) for q_val, start_t, end_t in case['pieces'])\n        \n        q_bar = integral_q_dt / T\n\n        # Model A: u_A = exp(-integral(q(t) dt)) * C(q=0)\n        u_A = np.exp(-integral_q_dt) * price_q0\n\n        # Model B: u_B = C(q=q_bar)\n        u_B = black_scholes_call(S0, K, T, r, q_bar, sigma)\n\n        results.append(round(u_A, 6))\n        results.append(round(u_B, 6))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{x:.6f}' for x in results)}]\")\n\nsolve()\n```"}]}