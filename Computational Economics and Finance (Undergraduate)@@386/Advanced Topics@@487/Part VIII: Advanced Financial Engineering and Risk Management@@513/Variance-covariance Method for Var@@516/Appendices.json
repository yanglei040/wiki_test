{"hands_on_practices": [{"introduction": "This first practice is about translating theory into code by implementing the core variance-covariance Value-at-Risk ($VaR$) formula for a multi-asset portfolio [@problem_id:2447014]. This exercise reinforces the mathematical steps involved in moving from individual asset statistics to portfolio-level risk. By applying the method to diverse scenarios—including a standard portfolio, a perfectly hedged position, and a simple single-asset case—you will build foundational programming skills essential for computational finance.", "id": "2447014", "problem": "You are given an $N$-asset portfolio with linear exposure vector $w \\in \\mathbb{R}^{N}$, daily asset return vector $r \\in \\mathbb{R}^{N}$, daily mean return vector $\\mu \\in \\mathbb{R}^{N}$, and daily variance-covariance matrix $\\Sigma \\in \\mathbb{R}^{N \\times N}$. Assume $r$ is multivariate normally distributed with mean $\\mu$ and covariance $\\Sigma$. The one-day portfolio return is $R_{p} = w^{\\top} r$, the one-day portfolio loss in the same monetary units as the portfolio value is $L = -V \\, R_{p}$, where $V \\in \\mathbb{R}_{+}$ is the current portfolio value. Define the one-day Value-at-Risk (VaR) at tail probability $\\alpha \\in (0,1)$ as the number $v$ such that $\\mathbb{P}(L > v) = \\alpha$. All probabilities are unitless. All returns are expressed as decimals, not with a percentage sign.\n\nWrite a complete program that computes the one-day Value-at-Risk for each of the following test cases using the variance-covariance method under the normality assumption. Each result must be expressed in the same monetary unit as $V$ and rounded to two decimal places. Your program must produce a single line of output containing the results as a comma-separated list enclosed in square brackets (for example, $[x_{1},x_{2},x_{3}]$), with no spaces.\n\nTest Suite:\n- Case $1$ (general multi-asset case):\n  - $N = 3$\n  - $w = [\\,0.5,\\,0.3,\\,0.2\\,]$\n  - $\\mu = [\\,0.0005,\\,0.0002,\\,-0.0001\\,]$\n  - $\\Sigma = \\begin{bmatrix}\n  0.000225 & 0.00003 & 0.00015 \\\\\n  0.00003 & 0.0001 & 0.00006 \\\\\n  0.00015 & 0.00006 & 0.0004\n  \\end{bmatrix}$\n  - $V = 1000000$\n  - $\\alpha = 0.01$\n- Case $2$ (perfect hedge, zero variance):\n  - $N = 2$\n  - $w = [\\,0.5,\\,-0.5\\,]$\n  - $\\mu = [\\,0.0002,\\,0.0002\\,]$\n  - $\\Sigma = \\begin{bmatrix}\n  0.0001 & 0.0001 \\\\\n  0.0001 & 0.0001\n  \\end{bmatrix}$\n  - $V = 2000000$\n  - $\\alpha = 0.01$\n- Case $3$ (single-asset case):\n  - $N = 1$\n  - $w = [\\,1.0\\,]$\n  - $\\mu = [\\,-0.0003\\,]$\n  - $\\Sigma = \\begin{bmatrix} 0.0009 \\end{bmatrix}$\n  - $V = 500000$\n  - $\\alpha = 0.05$\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $[result1,result2,result3]$). Each $resulti$ must be a float rounded to two decimal places. No other text should be printed.", "solution": "The problem requires the computation of the one-day Value-at-Risk ($VaR$) for an $N$-asset portfolio using the variance-covariance method. The problem is well-defined, scientifically sound, and provides all necessary data for a unique solution. The core assumption is that the vector of daily asset returns, $r$, follows a multivariate normal distribution, $r \\sim \\mathcal{N}(\\mu, \\Sigma)$.\n\nFirst, we must determine the statistical distribution of the one-day portfolio return, $R_{p}$. The portfolio return is a linear combination of the individual asset returns, specified by the equation $R_{p} = w^{\\top} r$, where $w$ is the vector of portfolio weights. A fundamental property of the multivariate normal distribution is that any linear combination of its components is also normally distributed. Therefore, $R_{p}$ follows a univariate normal distribution.\n\nThe mean of the portfolio return, $\\mu_{p}$, is the expectation of $R_{p}$:\n$$ \\mu_{p} = \\mathbb{E}[R_{p}] = \\mathbb{E}[w^{\\top} r] = w^{\\top} \\mathbb{E}[r] = w^{\\top} \\mu $$\nThe variance of the portfolio return, $\\sigma_{p}^2$, is given by:\n$$ \\sigma_{p}^2 = \\text{Var}(R_{p}) = \\text{Var}(w^{\\top} r) = w^{\\top} \\text{Var}(r) w = w^{\\top} \\Sigma w $$\nThus, the portfolio return is distributed as $R_{p} \\sim \\mathcal{N}(\\mu_{p}, \\sigma_{p}^2)$.\n\nNext, we consider the portfolio loss, $L$, which is defined as $L = -V R_{p}$, where $V$ is the current portfolio value. Since $L$ is a linear transformation of the normally distributed variable $R_{p}$, $L$ is also normally distributed.\nThe mean of the loss, $\\mu_{L}$, is:\n$$ \\mu_{L} = \\mathbb{E}[L] = \\mathbb{E}[-V R_{p}] = -V \\mathbb{E}[R_{p}] = -V \\mu_{p} = -V w^{\\top} \\mu $$\nThe variance of the loss, $\\sigma_{L}^2$, is:\n$$ \\sigma_{L}^2 = \\text{Var}(L) = \\text{Var}(-V R_{p}) = (-V)^2 \\text{Var}(R_{p}) = V^2 \\sigma_{p}^2 = V^2 (w^{\\top} \\Sigma w) $$\nThe standard deviation of the loss is $\\sigma_{L} = V \\sigma_{p} = V \\sqrt{w^{\\top} \\Sigma w}$.\nSo, the portfolio loss is distributed as $L \\sim \\mathcal{N}(\\mu_{L}, \\sigma_{L}^2)$.\n\nValue-at-Risk at a tail probability $\\alpha$, denoted $v$, is defined by the condition $\\mathbb{P}(L > v) = \\alpha$. To solve for $v$, we standardize the normal random variable $L$. Let $Z$ be a standard normal variable, $Z \\sim \\mathcal{N}(0, 1)$. We can express $L$ as $L = \\mu_{L} + \\sigma_{L} Z$. The probability statement becomes:\n$$ \\mathbb{P}(\\mu_{L} + \\sigma_{L} Z > v) = \\alpha $$\nAssuming $\\sigma_{L} > 0$, we rearrange the inequality:\n$$ \\mathbb{P}\\left(Z > \\frac{v - \\mu_{L}}{\\sigma_{L}}\\right) = \\alpha $$\nLet $z_{\\alpha}$ be the upper $\\alpha$-quantile of the standard normal distribution, which is the value such that $\\mathbb{P}(Z > z_{\\alpha}) = \\alpha$. This value is equivalent to the inverse of the cumulative distribution function (CDF), $\\Phi$, evaluated at $1 - \\alpha$, i.e., $z_{\\alpha} = \\Phi^{-1}(1 - \\alpha)$.\nBy equating the arguments of the probability function, we obtain:\n$$ \\frac{v - \\mu_{L}}{\\sigma_{L}} = z_{\\alpha} $$\nSolving for $v$ yields the formula for $VaR_{\\alpha}$:\n$$ v = \\text{VaR}_{\\alpha} = \\mu_{L} + z_{\\alpha} \\sigma_{L} $$\nSubstituting the expressions for $\\mu_{L}$ and $\\sigma_{L}$, we arrive at the final computational formula:\n$$ \\text{VaR}_{\\alpha} = -V (w^{\\top} \\mu) + z_{\\alpha} V \\sqrt{w^{\\top} \\Sigma w} $$\nThis can be rewritten as:\n$$ \\text{VaR}_{\\alpha} = V (z_{\\alpha} \\sigma_{p} - \\mu_{p}) $$\nIn the special case where the portfolio variance $\\sigma_{p}^2 = 0$, the portfolio return is deterministic: $R_{p} = \\mu_{p}$. The loss is also deterministic, $L = -V\\mu_{p}$. The generalized definition of a quantile gives $\\text{VaR}_{\\alpha} = -V\\mu_{p}$ for any $\\alpha \\in (0,1)$, which is consistent with the general formula as the term containing $\\sigma_{p}$ becomes zero.\n\nThe algorithm to solve the problem for each test case is as follows:\n$1$. For a given set of parameters $\\{w, \\mu, \\Sigma, V, \\alpha\\}$, first compute the mean portfolio return $\\mu_{p} = w^{\\top} \\mu$.\n$2$. Compute the variance of the portfolio return $\\sigma_{p}^2 = w^{\\top} \\Sigma w$.\n$3$. Calculate the standard deviation of the portfolio return $\\sigma_{p} = \\sqrt{\\sigma_{p}^2}$.\n$4$. Determine the standard normal quantile $z_{\\alpha}$ corresponding to the tail probability $\\alpha$ using a numerical function for $\\Phi^{-1}(1 - \\alpha)$.\n$5$. Calculate the $VaR$ using the formula $\\text{VaR}_{\\alpha} = V(z_{\\alpha} \\sigma_{p} - \\mu_{p})$.\n$6$. Round the final result to two decimal places.\nThis procedure will be applied to each of the three test cases provided.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Computes the one-day Value-at-Risk for a portfolio using the\n    variance-covariance method under the normality assumption.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1 (general multi-asset case)\n        {\n            \"w\": np.array([0.5, 0.3, 0.2]),\n            \"mu\": np.array([0.0005, 0.0002, -0.0001]),\n            \"Sigma\": np.array([\n                [0.000225, 0.00003, 0.00015],\n                [0.00003, 0.0001, 0.00006],\n                [0.00015, 0.00006, 0.0004]\n            ]),\n            \"V\": 1000000.0,\n            \"alpha\": 0.01\n        },\n        # Case 2 (perfect hedge, zero variance)\n        {\n            \"w\": np.array([0.5, -0.5]),\n            \"mu\": np.array([0.0002, 0.0002]),\n            \"Sigma\": np.array([\n                [0.0001, 0.0001],\n                [0.0001, 0.0001]\n            ]),\n            \"V\": 2000000.0,\n            \"alpha\": 0.01\n        },\n        # Case 3 (single-asset case)\n        {\n            \"w\": np.array([1.0]),\n            \"mu\": np.array([-0.0003]),\n            \"Sigma\": np.array([[0.0009]]),\n            \"V\": 500000.0,\n            \"alpha\": 0.05\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        w = case[\"w\"]\n        mu = case[\"mu\"]\n        Sigma = case[\"Sigma\"]\n        V = case[\"V\"]\n        alpha = case[\"alpha\"]\n\n        # 1. Calculate portfolio mean return (mu_p)\n        # mu_p = w^T * mu\n        mu_p = w.T @ mu\n\n        # 2. Calculate portfolio variance of return (sigma_p^2)\n        # sigma_p_sq = w^T * Sigma * w\n        sigma_p_sq = w.T @ Sigma @ w\n\n        # 3. Calculate portfolio standard deviation of return (sigma_p)\n        sigma_p = np.sqrt(sigma_p_sq)\n\n        # 4. Find the standard normal quantile for the given confidence level\n        # z_alpha = Phi^-1(1 - alpha)\n        z_alpha = norm.ppf(1 - alpha)\n\n        # 5. Compute the Value-at-Risk (VaR)\n        # VaR = V * (z_alpha * sigma_p - mu_p)\n        var_value = V * (z_alpha * sigma_p - mu_p)\n\n        # Format the result to two decimal places.\n        results.append(f\"{var_value:.2f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```"}, {"introduction": "Having mastered the calculation, we now critically examine the model's blind spots [@problem_id:2447005]. This practice explores hypothetical scenarios where the delta-normal $VaR$ method computes zero risk, yet the underlying portfolio remains economically perilous. This thought experiment is crucial for understanding model risk and the dangers of ignoring non-linearities (like gamma risk) or un-modeled risk factors, a key limitation of the variance-covariance approach.", "id": "2447005", "problem": "A risk manager implements the variance–covariance method for Value at Risk (VaR) on a one day horizon. The method models the one day portfolio profit-and-loss as a linear function of jointly normally distributed risk-factor changes. Specifically: (i) for portfolios of linear instruments, the one day profit-and-loss is modeled as an affine linear form in the vector of risk-factor changes, and (ii) for portfolios containing European options on a single stock, the bank uses a first-order (delta) linearization in the stock price and ignores higher-order terms such as gamma and vega. The stock’s one day continuously compounded return is modeled as normal with zero mean and variance $\\sigma^{2}$. The current stock price is $S_{0}$. Under this modeling choice, a portfolio whose net first-order sensitivity to all modeled risk factors is exactly zero has a computed one day VaR of zero.\n\nWhich of the following portfolios yields a computed one day VaR of zero under this variance–covariance procedure, yet remains extremely risky in economic reality? Select all that apply.\n\nA. Short $1$ European call and short $1$ European put, both written on the stock with the same maturity and strike $K=S_{0}$; no position in the stock or cash.\n\nB. Hold only a risk-free Treasury bill maturing in $1$ day; no other positions and ignore interest rate risk over $1$ day.\n\nC. Long $1$ share of the stock and short the market index futures in a notional chosen so that the portfolio beta with respect to the market index is exactly zero. The VaR system models only the market index as the equity risk factor and ignores idiosyncratic stock moves.\n\nD. Long $1$ European call and short $1$ European put, both written on the stock with the same maturity and strike $K=S_{0}$; no position in the stock or cash.", "solution": "We begin from the modeling foundations stated. The variance–covariance VaR assumes the one day profit-and-loss $P$ is modeled as a linear function of risk-factor changes that are jointly normally distributed. For a single stock underlying with one risk factor (its price), the delta-linearized change in the value $V$ of a portfolio of options and the stock over one day is\n$$\n\\Delta V \\approx \\delta \\,\\Delta S,\n$$\nwhere $\\delta$ is the net first-order sensitivity (dollar delta) to the stock price $S$, and $\\Delta S$ is the one day change in $S$. If the stock’s one day return is modeled as normal with zero mean and variance $\\sigma^{2}$, then $\\Delta S$ is approximately normal with zero mean and standard deviation $S_{0}\\sigma$. Under the variance–covariance method, the one day VaR at confidence $\\alpha$ (ignoring small mean effects) is\n$$\n\\mathrm{VaR}_{\\alpha} \\propto |\\delta|\\,S_{0}\\sigma,\n$$\nso if the net first-order sensitivity $\\delta$ is exactly zero with respect to all modeled risk factors, the computed one day VaR is zero. However, the economic risk may still be large if the linearization ignores important higher-order risks (e.g., gamma, vega) or omits relevant risk factors (e.g., idiosyncratic components).\n\nNow evaluate each option.\n\nOption A: Short $1$ European call and short $1$ European put, both at-the-money with $K=S_{0}$, same maturity; no stock or cash.\n\nBy no-arbitrage, for European options on a non-dividend-paying stock under the Black–Scholes framework, the delta of a call is $\\Delta_{c}=N(d_{1})$ and the delta of a put is $\\Delta_{p}=N(d_{1})-1$, where $N(\\cdot)$ is the standard normal cumulative distribution function and $d_{1}$ is the usual Black–Scholes term. At-the-money forward, one has $d_{1}=0$ and hence $N(0)=\\tfrac{1}{2}$. Therefore, at inception,\n$$\n\\Delta_{c}=\\tfrac{1}{2},\\qquad \\Delta_{p}=-\\tfrac{1}{2}.\n$$\nThe net delta of a short straddle (short $1$ call and short $1$ put) is\n$$\n\\delta_{\\text{net}} = -\\Delta_{c} - \\Delta_{p} = -\\tfrac{1}{2} - (-\\tfrac{1}{2}) = 0.\n$$\nUnder the variance–covariance (delta-normal) method that ignores gamma and vega, the computed one day VaR is thus zero because the first-order exposure to the only modeled factor is zero. Economically, the position is extremely risky: a short at-the-money straddle is short convexity (negative gamma). For sufficiently large moves $|\\Delta S|$, the second-order term $\\tfrac{1}{2}\\Gamma (\\Delta S)^{2}$ (with $\\Gamma<0$ for the short straddle) dominates, producing potentially very large losses. Conclusion: Correct.\n\nOption B: Hold only a risk-free Treasury bill maturing in $1$ day; ignore interest rate risk over $1$ day.\n\nUnder the stated assumptions, the one day payoff is effectively deterministic over $1$ day and has no modeled stochastic risk-factor exposure. The computed one day VaR is zero, but the position is not “extremely risky”; in fact, it is modeled (and intended) to be riskless over the horizon. This does not satisfy the requirement of “still extremely risky.” Conclusion: Incorrect.\n\nOption C: Long $1$ share of the stock and short market index futures to make portfolio beta exactly zero; the VaR system models only the market index as the equity factor and ignores idiosyncratic risk.\n\nLet the stock’s return be decomposed as $R_{i}=\\beta_{i} R_{m}+\\varepsilon_{i}$, where $R_{m}$ is the market index return and $\\varepsilon_{i}$ is idiosyncratic with variance $\\sigma_{\\varepsilon}^{2}$, independent of $R_{m}$. The variance–covariance system, by assumption, models only $R_{m}$ and maps the portfolio exposure to the single factor $R_{m}$. Choosing the futures notional to set the net beta to zero makes the modeled first-order exposure to $R_{m}$ exactly zero. Therefore, the computed one day VaR is zero under the bank’s factor set. Economically, the position still carries the idiosyncratic component $\\varepsilon_{i}$ of the single stock, which can be large (e.g., firm-specific news, earnings surprises). Since this risk factor is omitted by the model, it does not enter the computed VaR but can lead to large losses in reality. Hence this portfolio has zero computed VaR yet remains potentially extremely risky. Conclusion: Correct.\n\nOption D: Long $1$ European call and short $1$ European put, both at-the-money with $K=S_{0}$; no stock or cash.\n\nBy put–call parity and deltas, this position is a synthetic forward: the net delta equals\n$$\n\\delta_{\\text{net}} = \\Delta_{c} - \\Delta_{p} = \\tfrac{1}{2} - (-\\tfrac{1}{2}) = 1,\n$$\nso it has a nonzero first-order exposure to the stock price. Under the variance–covariance method, the computed one day VaR is proportional to $S_{0}\\sigma$ and is strictly positive, not zero. Although the position can be risky, it does not meet the “zero VaR by variance–covariance” condition. Conclusion: Incorrect.\n\nSummary: Options A and C satisfy the condition of zero computed VaR under the variance–covariance method while being economically very risky due to, respectively, neglected higher-order (gamma) risk and omitted idiosyncratic risk.", "answer": "$$\\boxed{AC}$$"}, {"introduction": "Our final practice integrates $VaR$ with the foundational concept of Markowitz mean-variance optimization, showing how risk measurement applies to portfolio construction [@problem_id:2446949]. You will first determine the weights of an optimal portfolio that minimizes variance for a target rate of return. Subsequently, you will compute the $VaR$ for this optimized portfolio, bridging the gap between portfolio theory and practical risk management.", "id": "2446949", "problem": "You are given a portfolio selection problem in which the portfolio weights $w$ must be chosen by solving a Markowitz mean-variance optimization. Assume asset returns are jointly Gaussian and the portfolio is linear in the weights. The objective is to compute the Value at Risk (VaR) using the variance-covariance method for each of several test cases. The following definitions and assumptions apply.\n\n- Let $n$ denote the number of assets. Let the expected return vector be $\\mu \\in \\mathbb{R}^n$, and the covariance matrix be $\\Sigma \\in \\mathbb{R}^{n \\times n}$, where $\\Sigma$ is symmetric positive definite. Let the target expected portfolio return be $r_{\\text{target}} \\in \\mathbb{R}$. Let the portfolio value be $V \\in \\mathbb{R}_{+}$. Let the horizon (in periods matching the units of $\\mu$ and $\\Sigma$) be $h \\in \\mathbb{N}$. Let the confidence level be $c \\in (0,1)$. All returns are expressed as decimals per period.\n\n- The Markowitz mean-variance problem to determine $w \\in \\mathbb{R}^n$ is:\n  minimize the portfolio variance subject to a target expected return and full investment:\n  $$\\min_{w \\in \\mathbb{R}^n} \\; w^{\\top} \\Sigma \\, w \\quad \\text{subject to} \\quad \\mu^{\\top} w = r_{\\text{target}}, \\quad \\mathbf{1}^{\\top} w = 1.$$\n  Here $\\mathbf{1} \\in \\mathbb{R}^n$ is the vector of ones.\n\n- Under the variance-covariance method with multivariate normal returns, the portfolio return $R_p$ is Gaussian with mean $\\mu_p = \\mu^{\\top} w$ and variance $\\sigma_p^2 = w^{\\top} \\Sigma \\, w$. Over horizon $h$, assume independent and identically distributed (i.i.d.) increments so that the $h$-period mean and standard deviation are $\\mu_h = h \\, \\mu_p$ and $\\sigma_h = \\sqrt{h} \\, \\sigma_p$. For a confidence level $c$, let $z_c$ denote the $c$-quantile of the standard normal distribution. Define the portfolio loss as $L = - V \\, R_p$. Your task is to compute the parametric Value at Risk (VaR) at level $c$ in monetary units using the variance-covariance method.\n\nYour program must solve the Markowitz optimization exactly as specified above for each test case, then compute the VaR accordingly, and output the results.\n\nTest suite. For each case below, compute a single VaR number.\n\n- Case $1$ (happy path, $4$ assets):\n  - $\\mu = [\\, 0.01, \\, 0.015, \\, 0.02, \\, 0.012 \\,]$\n  - $\\Sigma = \\begin{bmatrix}\n    0.0030 & 0.0012 & 0.0011 & 0.0009 \\\\\n    0.0012 & 0.0040 & 0.0013 & 0.0010 \\\\\n    0.0011 & 0.0013 & 0.0050 & 0.0012 \\\\\n    0.0009 & 0.0010 & 0.0012 & 0.0035\n  \\end{bmatrix}$\n  - $r_{\\text{target}} = 0.015$\n  - $V = 1000000$\n  - $h = 1$\n  - $c = 0.99$\n\n- Case $2$ (boundary on the efficient frontier, $4$ assets): use the same $\\mu$ and $\\Sigma$ as in Case $1$, but set the target expected return equal to that of the global minimum-variance portfolio implied by $\\mu$ and $\\Sigma$. That is, compute\n  $$r_{\\text{target}} = \\frac{B}{A}, \\quad \\text{where} \\quad A = \\mathbf{1}^{\\top} \\Sigma^{-1} \\mathbf{1}, \\quad B = \\mathbf{1}^{\\top} \\Sigma^{-1} \\mu.$$\n  Use\n  - $V = 1000000$\n  - $h = 1$\n  - $c = 0.95$\n\n- Case $3$ (horizon scaling and different dimension, $3$ assets):\n  - $\\mu = [\\, 0.008, \\, 0.011, \\, 0.0095 \\,]$\n  - $\\Sigma = \\begin{bmatrix}\n    0.0025 & -0.0003 & 0.0004 \\\\\n    -0.0003 & 0.0030 & -0.0002 \\\\\n    0.0004 & -0.0002 & 0.0020\n  \\end{bmatrix}$\n  - $r_{\\text{target}} = 0.0105$\n  - $V = 2000000$\n  - $h = 3$\n  - $c = 0.975$\n\nRequirements.\n\n- Use only the mathematical assumptions and constraints explicitly stated above. Do not introduce additional constraints such as short-sale restrictions; allow $w$ to take any real values that satisfy the linear constraints.\n\n- Your program must:\n  1. Solve the stated mean-variance optimization for $w$ for each test case using linear-algebraic derivation from first principles.\n  2. Compute the $h$-period VaR at level $c$ in monetary units (same units as $V$). Express the final numbers as floating-point values (decimals).\n  3. Aggregate the three VaR results into a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of Cases $1,2,3$, like $[x_1,x_2,x_3]$.", "solution": "The problem statement has been analyzed and is deemed valid. It is scientifically grounded in established principles of financial mathematics, specifically Markowitz portfolio theory and parametric Value at Risk (VaR) calculation. The problem is well-posed, objective, and provides all necessary data for a unique solution. The provided covariance matrices are symmetric positive definite, ensuring a proper solution to the optimization problem.\n\nThe solution is developed in two parts: first, solving the Markowitz mean-variance optimization problem, and second, computing the portfolio VaR using the variance-covariance method.\n\nThe Markowitz optimization problem is formulated as follows:\n$$\n\\min_{w \\in \\mathbb{R}^n} \\; \\sigma_p^2 = w^{\\top} \\Sigma w\n$$\nsubject to two linear constraints:\n$$\n\\mu^{\\top} w = r_{\\text{target}} \\quad (\\text{target return})\n$$\n$$\n\\mathbf{1}^{\\top} w = 1 \\quad (\\text{full investment})\n$$\nwhere $w$ is the vector of portfolio weights, $\\mu$ is the vector of expected asset returns, $\\Sigma$ is the covariance matrix of asset returns, $r_{\\text{target}}$ is the desired portfolio expected return, and $\\mathbf{1}$ is a vector of ones.\n\nThis is a constrained quadratic optimization problem. We solve it using the method of Lagrange multipliers. The Lagrangian function $\\mathcal{L}$ is:\n$$\n\\mathcal{L}(w, \\lambda_1, \\lambda_2) = w^{\\top} \\Sigma w - 2\\lambda_1 (\\mu^{\\top} w - r_{\\text{target}}) - 2\\lambda_2 (\\mathbf{1}^{\\top} w - 1)\n$$\nThe factor of $2$ is introduced for algebraic convenience. The first-order condition with respect to the weight vector $w$ is:\n$$\n\\frac{\\partial \\mathcal{L}}{\\partial w} = 2 \\Sigma w - 2\\lambda_1 \\mu - 2\\lambda_2 \\mathbf{1} = \\mathbf{0}\n$$\nSince $\\Sigma$ is positive definite, its inverse $\\Sigma^{-1}$ exists. We can solve for $w$:\n$$\n\\Sigma w = \\lambda_1 \\mu + \\lambda_2 \\mathbf{1}\n$$\n$$\nw = \\lambda_1 \\Sigma^{-1} \\mu + \\lambda_2 \\Sigma^{-1} \\mathbf{1}\n$$\nTo find the Lagrange multipliers $\\lambda_1$ and $\\lambda_2$, we substitute this expression for $w$ back into the two constraints:\n$1$. $\\mu^{\\top} w = \\mu^{\\top} (\\lambda_1 \\Sigma^{-1} \\mu + \\lambda_2 \\Sigma^{-1} \\mathbf{1}) = \\lambda_1 (\\mu^{\\top} \\Sigma^{-1} \\mu) + \\lambda_2 (\\mu^{\\top} \\Sigma^{-1} \\mathbf{1}) = r_{\\text{target}}$\n$2$. $\\mathbf{1}^{\\top} w = \\mathbf{1}^{\\top} (\\lambda_1 \\Sigma^{-1} \\mu + \\lambda_2 \\Sigma^{-1} \\mathbf{1}) = \\lambda_1 (\\mathbf{1}^{\\top} \\Sigma^{-1} \\mu) + \\lambda_2 (\\mathbf{1}^{\\top} \\Sigma^{-1} \\mathbf{1}) = 1$\n\nLet us define three scalars to simplify the system:\n$A = \\mathbf{1}^{\\top} \\Sigma^{-1} \\mathbf{1}$\n$B = \\mathbf{1}^{\\top} \\Sigma^{-1} \\mu$\n$C = \\mu^{\\top} \\Sigma^{-1} \\mu$\nThe system of linear equations for $(\\lambda_1, \\lambda_2)$ becomes:\n$$\n\\begin{pmatrix} C & B \\\\ B & A \\end{pmatrix} \\begin{pmatrix} \\lambda_1 \\\\ \\lambda_2 \\end{pmatrix} = \\begin{pmatrix} r_{\\text{target}} \\\\ 1 \\end{pmatrix}\n$$\nThe solution to this system is found by matrix inversion:\n$$\n\\begin{pmatrix} \\lambda_1 \\\\ \\lambda_2 \\end{pmatrix} = \\frac{1}{AC - B^2} \\begin{pmatrix} A & -B \\\\ -B & C \\end{pmatrix} \\begin{pmatrix} r_{\\text{target}} \\\\ 1 \\end{pmatrix}\n$$\nThis yields:\n$$\n\\lambda_1 = \\frac{A r_{\\text{target}} - B}{AC - B^2}\n$$\n$$\n\\lambda_2 = \\frac{C - B r_{\\text{target}}}{AC - B^2}\n$$\nWith $\\lambda_1$ and $\\lambda_2$ determined, the optimal weight vector $w$ is fully specified. The portfolio variance $\\sigma_p^2 = w^{\\top} \\Sigma w$ can be calculated. A more direct calculation of the variance stems from the first-order conditions:\n$$\n\\sigma_p^2 = w^{\\top} \\Sigma w = w^{\\top}(\\lambda_1 \\mu + \\lambda_2 \\mathbf{1}) = \\lambda_1 (w^{\\top} \\mu) + \\lambda_2 (w^{\\top} \\mathbf{1})\n$$\nUsing the constraints $w^{\\top} \\mu = r_{\\text{target}}$ and $w^{\\top} \\mathbf{1} = 1$, we get the elegant result:\n$$\n\\sigma_p^2 = \\lambda_1 r_{\\text{target}} + \\lambda_2\n$$\nSubstituting the expressions for $\\lambda_1$ and $\\lambda_2$:\n$$\n\\sigma_p^2 = \\frac{(A r_{\\text{target}} - B)r_{\\text{target}} + (C - B r_{\\text{target}})}{AC - B^2} = \\frac{A r_{\\text{target}}^2 - 2B r_{\\text{target}} + C}{AC - B^2}\n$$\nThis equation describes the efficient frontier, which is a parabola in the $(\\sigma_p^2, r_{\\text{target}})$ plane.\nFor Case $2$, the target return is that of the Global Minimum-Variance Portfolio (GMVP). The GMVP corresponds to the vertex of this parabola, which occurs at $r_{\\text{target}} = B/A$. The variance of the GMVP is $\\sigma_{\\text{GMV}}^2 = 1/A$.\n\nNext, we calculate the Value at Risk. The problem states that portfolio returns are Gaussian. The single-period portfolio return $R_p$ follows $R_p \\sim \\mathcal{N}(\\mu_p, \\sigma_p^2)$, where $\\mu_p = r_{\\text{target}}$ and $\\sigma_p^2$ is the variance calculated above. Assuming i.i.d. returns over a horizon of $h$ periods, the $h$-period return $R_h$ is also normally distributed:\n$$\nR_h \\sim \\mathcal{N}(\\mu_h, \\sigma_h^2)\n$$\nwhere $\\mu_h = h \\mu_p$ and $\\sigma_h^2 = h \\sigma_p^2$.\nThe portfolio loss over horizon $h$ is $L_h = -V R_h$, where $V$ is the initial portfolio value. VaR at a confidence level $c$ is the value $\\text{VaR}_c$ such that the probability of the loss exceeding this value is $1-c$:\n$$\nP(L_h > \\text{VaR}_c) = 1-c\n$$\nSubstituting the definition of loss:\n$$\nP(-V R_h > \\text{VaR}_c) = P(R_h < -\\text{VaR}_c / V) = 1-c\n$$\nLet $Z = (R_h - \\mu_h) / \\sigma_h$ be a standard normal variable. Then $R_h = \\mu_h + \\sigma_h Z$. The probability becomes:\n$$\nP(\\mu_h + \\sigma_h Z < -\\text{VaR}_c / V) = P(Z < \\frac{-\\text{VaR}_c / V - \\mu_h}{\\sigma_h}) = 1-c\n$$\nLet $z_{1-c}$ be the $(1-c)$-quantile of the standard normal distribution. Then:\n$$\n\\frac{-\\text{VaR}_c / V - \\mu_h}{\\sigma_h} = z_{1-c}\n$$\nBy symmetry of the normal distribution, $z_{1-c} = -z_c$, where $z_c$ is the $c$-quantile.\n$$\n-\\text{VaR}_c / V - \\mu_h = -\\sigma_h z_c\n$$\nSolving for $\\text{VaR}_c$:\n$$\n\\text{VaR}_c = V(z_c \\sigma_h - \\mu_h)\n$$\nThe computational procedure for each test case is:\n$1$. Given $\\mu$, $\\Sigma$, $r_{\\text{target}}$, $V$, $h$, and $c$.\n$2$. For Case $2$, first compute $A=\\mathbf{1}^\\top \\Sigma^{-1} \\mathbf{1}$ and $B=\\mathbf{1}^\\top \\Sigma^{-1} \\mu$, then set $r_{\\text{target}} = B/A$.\n$3$. For all cases, compute the scalars $A$, $B$, and $C=\\mu^\\top\\Sigma^{-1}\\mu$ from $\\mu$ and $\\Sigma$.\n$4$. Compute the single-period portfolio variance $\\sigma_p^2 = (A r_{\\text{target}}^2 - 2B r_{\\text{target}} + C) / (AC - B^2)$.\n$5$. Determine the $h$-period mean $\\mu_h = h r_{\\text{target}}$ and standard deviation $\\sigma_h = \\sqrt{h \\sigma_p^2}$.\n$6$. Find the standard normal $c$-quantile, $z_c$.\n$7$. Compute the VaR using the derived formula: $\\text{VaR}_c = V(z_c \\sigma_h - \\mu_h)$.\nThis procedure will be implemented to yield the final numerical results.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Solves for the Value at Risk (VaR) for a portfolio optimized\n    using Markowitz mean-variance principles.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1: Happy path, 4 assets\n        {\n            \"mu\": np.array([0.01, 0.015, 0.02, 0.012]),\n            \"Sigma\": np.array([\n                [0.0030, 0.0012, 0.0011, 0.0009],\n                [0.0012, 0.0040, 0.0013, 0.0010],\n                [0.0011, 0.0013, 0.0050, 0.0012],\n                [0.0009, 0.0010, 0.0012, 0.0035]\n            ]),\n            \"r_target\": 0.015,\n            \"V\": 1000000.0,\n            \"h\": 1,\n            \"c\": 0.99,\n            \"type\": \"standard\"\n        },\n        # Case 2: Boundary on the efficient frontier (GMVP)\n        {\n            \"mu\": np.array([0.01, 0.015, 0.02, 0.012]),\n            \"Sigma\": np.array([\n                [0.0030, 0.0012, 0.0011, 0.0009],\n                [0.0012, 0.0040, 0.0013, 0.0010],\n                [0.0011, 0.0013, 0.0050, 0.0012],\n                [0.0009, 0.0010, 0.0012, 0.0035]\n            ]),\n            \"r_target\": None,  # To be calculated\n            \"V\": 1000000.0,\n            \"h\": 1,\n            \"c\": 0.95,\n            \"type\": \"gmv\"\n        },\n        # Case 3: Horizon scaling and different dimension\n        {\n            \"mu\": np.array([0.008, 0.011, 0.0095]),\n            \"Sigma\": np.array([\n                [0.0025, -0.0003, 0.0004],\n                [-0.0003, 0.0030, -0.0002],\n                [0.0004, -0.0002, 0.0020]\n            ]),\n            \"r_target\": 0.0105,\n            \"V\": 2000000.0,\n            \"h\": 3,\n            \"c\": 0.975,\n            \"type\": \"standard\"\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        mu = case[\"mu\"]\n        Sigma = case[\"Sigma\"]\n        r_target_initial = case[\"r_target\"]\n        V = case[\"V\"]\n        h = case[\"h\"]\n        c = case[\"c\"]\n        case_type = case[\"type\"]\n        \n        n = mu.shape[0]\n        ones = np.ones(n)\n        \n        # Calculate the inverse of the covariance matrix\n        Sigma_inv = np.linalg.inv(Sigma)\n        \n        # Calculate the scalar constants A, B, C\n        A = ones.T @ Sigma_inv @ ones\n        B = ones.T @ Sigma_inv @ mu\n        C = mu.T @ Sigma_inv @ mu\n        \n        # Determine the target return\n        if case_type == \"gmv\":\n            # For the Global Minimum-Variance Portfolio, r_target = B/A\n            r_target = B / A\n        else:\n            r_target = r_target_initial\n\n        # Calculate the portfolio variance using the efficient frontier formula\n        # This formula is derived from the Lagrangian solution.\n        # sigma_p^2 = (A*r_target^2 - 2*B*r_target + C) / (A*C - B^2)\n        # For the GMV case, this simplifies to 1/A. We use the general formula for all cases.\n        denominator = A * C - B**2\n        portfolio_variance_p = (A * r_target**2 - 2 * B * r_target + C) / denominator\n\n        # Scale mean and standard deviation for the horizon h\n        mu_p = r_target\n        sigma_p = np.sqrt(portfolio_variance_p)\n        \n        mu_h = h * mu_p\n        sigma_h = np.sqrt(h) * sigma_p\n        \n        # Find the c-quantile of the standard normal distribution\n        z_c = norm.ppf(c)\n        \n        # Calculate Value at Risk\n        # VaR = V * (z_c * sigma_h - mu_h)\n        var_result = V * (z_c * sigma_h - mu_h)\n        results.append(var_result)\n\n    # Format the results into the required output string\n    formatted_results = f\"[{','.join(f'{r:.10f}' for r in results)}]\"\n\n    # Final print statement in the exact required format.\n    print(formatted_results)\n\nsolve()\n```"}]}